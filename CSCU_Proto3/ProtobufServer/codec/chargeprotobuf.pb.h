// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chargeprotobuf.proto

#ifndef PROTOBUF_chargeprotobuf_2eproto__INCLUDED
#define PROTOBUF_chargeprotobuf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace charge {
namespace protobuf {
class AccountDetailAns;
class AccountDetailAnsDefaultTypeInternal;
extern AccountDetailAnsDefaultTypeInternal _AccountDetailAns_default_instance_;
class AccountDetailReq;
class AccountDetailReqDefaultTypeInternal;
extern AccountDetailReqDefaultTypeInternal _AccountDetailReq_default_instance_;
class AccountInfo;
class AccountInfoDefaultTypeInternal;
extern AccountInfoDefaultTypeInternal _AccountInfo_default_instance_;
class AccountSyncAns;
class AccountSyncAnsDefaultTypeInternal;
extern AccountSyncAnsDefaultTypeInternal _AccountSyncAns_default_instance_;
class AccountSyncReq;
class AccountSyncReqDefaultTypeInternal;
extern AccountSyncReqDefaultTypeInternal _AccountSyncReq_default_instance_;
class AccountingStrategy;
class AccountingStrategyDefaultTypeInternal;
extern AccountingStrategyDefaultTypeInternal _AccountingStrategy_default_instance_;
class BillInfo;
class BillInfoDefaultTypeInternal;
extern BillInfoDefaultTypeInternal _BillInfo_default_instance_;
class BillUploadAns;
class BillUploadAnsDefaultTypeInternal;
extern BillUploadAnsDefaultTypeInternal _BillUploadAns_default_instance_;
class BillUploadReq;
class BillUploadReqDefaultTypeInternal;
extern BillUploadReqDefaultTypeInternal _BillUploadReq_default_instance_;
class BillsNotConfirmedAns;
class BillsNotConfirmedAnsDefaultTypeInternal;
extern BillsNotConfirmedAnsDefaultTypeInternal _BillsNotConfirmedAns_default_instance_;
class BillsNotConfirmedReq;
class BillsNotConfirmedReqDefaultTypeInternal;
extern BillsNotConfirmedReqDefaultTypeInternal _BillsNotConfirmedReq_default_instance_;
class BmsAns;
class BmsAnsDefaultTypeInternal;
extern BmsAnsDefaultTypeInternal _BmsAns_default_instance_;
class BmsChargeFinish;
class BmsChargeFinishDefaultTypeInternal;
extern BmsChargeFinishDefaultTypeInternal _BmsChargeFinish_default_instance_;
class BmsCharging;
class BmsChargingDefaultTypeInternal;
extern BmsChargingDefaultTypeInternal _BmsCharging_default_instance_;
class BmsConfig;
class BmsConfigDefaultTypeInternal;
extern BmsConfigDefaultTypeInternal _BmsConfig_default_instance_;
class BmsNotifyAns;
class BmsNotifyAnsDefaultTypeInternal;
extern BmsNotifyAnsDefaultTypeInternal _BmsNotifyAns_default_instance_;
class BmsNotifyReq;
class BmsNotifyReqDefaultTypeInternal;
extern BmsNotifyReqDefaultTypeInternal _BmsNotifyReq_default_instance_;
class BmsParamNotifyAns;
class BmsParamNotifyAnsDefaultTypeInternal;
extern BmsParamNotifyAnsDefaultTypeInternal _BmsParamNotifyAns_default_instance_;
class BmsParamNotifyReq;
class BmsParamNotifyReqDefaultTypeInternal;
extern BmsParamNotifyReqDefaultTypeInternal _BmsParamNotifyReq_default_instance_;
class BmsReq;
class BmsReqDefaultTypeInternal;
extern BmsReqDefaultTypeInternal _BmsReq_default_instance_;
class BmsShakehands;
class BmsShakehandsDefaultTypeInternal;
extern BmsShakehandsDefaultTypeInternal _BmsShakehands_default_instance_;
class CallAllDataReq;
class CallAllDataReqDefaultTypeInternal;
extern CallAllDataReqDefaultTypeInternal _CallAllDataReq_default_instance_;
class CarInfo;
class CarInfoDefaultTypeInternal;
extern CarInfoDefaultTypeInternal _CarInfo_default_instance_;
class CardInfo;
class CardInfoDefaultTypeInternal;
extern CardInfoDefaultTypeInternal _CardInfo_default_instance_;
class ChargeFrozen;
class ChargeFrozenDefaultTypeInternal;
extern ChargeFrozenDefaultTypeInternal _ChargeFrozen_default_instance_;
class ChargerState;
class ChargerStateDefaultTypeInternal;
extern ChargerStateDefaultTypeInternal _ChargerState_default_instance_;
class ChargerStateAns;
class ChargerStateAnsDefaultTypeInternal;
extern ChargerStateAnsDefaultTypeInternal _ChargerStateAns_default_instance_;
class ChargerStateChangeAns;
class ChargerStateChangeAnsDefaultTypeInternal;
extern ChargerStateChangeAnsDefaultTypeInternal _ChargerStateChangeAns_default_instance_;
class ChargerStateChangeReq;
class ChargerStateChangeReqDefaultTypeInternal;
extern ChargerStateChangeReqDefaultTypeInternal _ChargerStateChangeReq_default_instance_;
class ChargerStateReq;
class ChargerStateReqDefaultTypeInternal;
extern ChargerStateReqDefaultTypeInternal _ChargerStateReq_default_instance_;
class ChargingStrategy;
class ChargingStrategyDefaultTypeInternal;
extern ChargingStrategyDefaultTypeInternal _ChargingStrategy_default_instance_;
class ClearAccountCmdAns;
class ClearAccountCmdAnsDefaultTypeInternal;
extern ClearAccountCmdAnsDefaultTypeInternal _ClearAccountCmdAns_default_instance_;
class ClearAccountCmdReq;
class ClearAccountCmdReqDefaultTypeInternal;
extern ClearAccountCmdReqDefaultTypeInternal _ClearAccountCmdReq_default_instance_;
class CommAns;
class CommAnsDefaultTypeInternal;
extern CommAnsDefaultTypeInternal _CommAns_default_instance_;
class DateTime;
class DateTimeDefaultTypeInternal;
extern DateTimeDefaultTypeInternal _DateTime_default_instance_;
class DischargeFrozen;
class DischargeFrozenDefaultTypeInternal;
extern DischargeFrozenDefaultTypeInternal _DischargeFrozen_default_instance_;
class ErrorAns;
class ErrorAnsDefaultTypeInternal;
extern ErrorAnsDefaultTypeInternal _ErrorAns_default_instance_;
class GunGroupInfoAns;
class GunGroupInfoAnsDefaultTypeInternal;
extern GunGroupInfoAnsDefaultTypeInternal _GunGroupInfoAns_default_instance_;
class GunGroupInfoReq;
class GunGroupInfoReqDefaultTypeInternal;
extern GunGroupInfoReqDefaultTypeInternal _GunGroupInfoReq_default_instance_;
class GunGroupType;
class GunGroupTypeDefaultTypeInternal;
extern GunGroupTypeDefaultTypeInternal _GunGroupType_default_instance_;
class HeartbeatAns;
class HeartbeatAnsDefaultTypeInternal;
extern HeartbeatAnsDefaultTypeInternal _HeartbeatAns_default_instance_;
class HeartbeatReq;
class HeartbeatReqDefaultTypeInternal;
extern HeartbeatReqDefaultTypeInternal _HeartbeatReq_default_instance_;
class LoginAns;
class LoginAnsDefaultTypeInternal;
extern LoginAnsDefaultTypeInternal _LoginAns_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class MasterSlaveInfo;
class MasterSlaveInfoDefaultTypeInternal;
extern MasterSlaveInfoDefaultTypeInternal _MasterSlaveInfo_default_instance_;
class OfflineAns;
class OfflineAnsDefaultTypeInternal;
extern OfflineAnsDefaultTypeInternal _OfflineAns_default_instance_;
class OfflineReq;
class OfflineReqDefaultTypeInternal;
extern OfflineReqDefaultTypeInternal _OfflineReq_default_instance_;
class ParkParaGetAns;
class ParkParaGetAnsDefaultTypeInternal;
extern ParkParaGetAnsDefaultTypeInternal _ParkParaGetAns_default_instance_;
class ParkParaGetReq;
class ParkParaGetReqDefaultTypeInternal;
extern ParkParaGetReqDefaultTypeInternal _ParkParaGetReq_default_instance_;
class ParkParamInfo;
class ParkParamInfoDefaultTypeInternal;
extern ParkParamInfoDefaultTypeInternal _ParkParamInfo_default_instance_;
class ParkStateCallReq;
class ParkStateCallReqDefaultTypeInternal;
extern ParkStateCallReqDefaultTypeInternal _ParkStateCallReq_default_instance_;
class ParkStateChangeReq;
class ParkStateChangeReqDefaultTypeInternal;
extern ParkStateChangeReqDefaultTypeInternal _ParkStateChangeReq_default_instance_;
class ParkingAlarmType;
class ParkingAlarmTypeDefaultTypeInternal;
extern ParkingAlarmTypeDefaultTypeInternal _ParkingAlarmType_default_instance_;
class PowerCruveCmdAns;
class PowerCruveCmdAnsDefaultTypeInternal;
extern PowerCruveCmdAnsDefaultTypeInternal _PowerCruveCmdAns_default_instance_;
class PowerCruveCmdReq;
class PowerCruveCmdReqDefaultTypeInternal;
extern PowerCruveCmdReqDefaultTypeInternal _PowerCruveCmdReq_default_instance_;
class QueueSequence;
class QueueSequenceDefaultTypeInternal;
extern QueueSequenceDefaultTypeInternal _QueueSequence_default_instance_;
class ResumeChargeAns;
class ResumeChargeAnsDefaultTypeInternal;
extern ResumeChargeAnsDefaultTypeInternal _ResumeChargeAns_default_instance_;
class ResumeChargeReq;
class ResumeChargeReqDefaultTypeInternal;
extern ResumeChargeReqDefaultTypeInternal _ResumeChargeReq_default_instance_;
class SetGunGroupInfoReq;
class SetGunGroupInfoReqDefaultTypeInternal;
extern SetGunGroupInfoReqDefaultTypeInternal _SetGunGroupInfoReq_default_instance_;
class SpecificBillAns;
class SpecificBillAnsDefaultTypeInternal;
extern SpecificBillAnsDefaultTypeInternal _SpecificBillAns_default_instance_;
class SpecificBillReq;
class SpecificBillReqDefaultTypeInternal;
extern SpecificBillReqDefaultTypeInternal _SpecificBillReq_default_instance_;
class StartChargeAns;
class StartChargeAnsDefaultTypeInternal;
extern StartChargeAnsDefaultTypeInternal _StartChargeAns_default_instance_;
class StartChargeCmdAns;
class StartChargeCmdAnsDefaultTypeInternal;
extern StartChargeCmdAnsDefaultTypeInternal _StartChargeCmdAns_default_instance_;
class StartChargeCmdReq;
class StartChargeCmdReqDefaultTypeInternal;
extern StartChargeCmdReqDefaultTypeInternal _StartChargeCmdReq_default_instance_;
class StartChargeReq;
class StartChargeReqDefaultTypeInternal;
extern StartChargeReqDefaultTypeInternal _StartChargeReq_default_instance_;
class StateAns;
class StateAnsDefaultTypeInternal;
extern StateAnsDefaultTypeInternal _StateAns_default_instance_;
class StateNotifyAns;
class StateNotifyAnsDefaultTypeInternal;
extern StateNotifyAnsDefaultTypeInternal _StateNotifyAns_default_instance_;
class StateNotifyReq;
class StateNotifyReqDefaultTypeInternal;
extern StateNotifyReqDefaultTypeInternal _StateNotifyReq_default_instance_;
class StateReq;
class StateReqDefaultTypeInternal;
extern StateReqDefaultTypeInternal _StateReq_default_instance_;
class StopChargeAns;
class StopChargeAnsDefaultTypeInternal;
extern StopChargeAnsDefaultTypeInternal _StopChargeAns_default_instance_;
class StopChargeCmdAns;
class StopChargeCmdAnsDefaultTypeInternal;
extern StopChargeCmdAnsDefaultTypeInternal _StopChargeCmdAns_default_instance_;
class StopChargeCmdReq;
class StopChargeCmdReqDefaultTypeInternal;
extern StopChargeCmdReqDefaultTypeInternal _StopChargeCmdReq_default_instance_;
class StopChargeReq;
class StopChargeReqDefaultTypeInternal;
extern StopChargeReqDefaultTypeInternal _StopChargeReq_default_instance_;
class SuspendChargeAns;
class SuspendChargeAnsDefaultTypeInternal;
extern SuspendChargeAnsDefaultTypeInternal _SuspendChargeAns_default_instance_;
class SuspendChargeReq;
class SuspendChargeReqDefaultTypeInternal;
extern SuspendChargeReqDefaultTypeInternal _SuspendChargeReq_default_instance_;
class TelemetryAns;
class TelemetryAnsDefaultTypeInternal;
extern TelemetryAnsDefaultTypeInternal _TelemetryAns_default_instance_;
class TelemetryNotifyAns;
class TelemetryNotifyAnsDefaultTypeInternal;
extern TelemetryNotifyAnsDefaultTypeInternal _TelemetryNotifyAns_default_instance_;
class TelemetryNotifyReq;
class TelemetryNotifyReqDefaultTypeInternal;
extern TelemetryNotifyReqDefaultTypeInternal _TelemetryNotifyReq_default_instance_;
class TelemetryReq;
class TelemetryReqDefaultTypeInternal;
extern TelemetryReqDefaultTypeInternal _TelemetryReq_default_instance_;
class TurnToEmergencyCmdAns;
class TurnToEmergencyCmdAnsDefaultTypeInternal;
extern TurnToEmergencyCmdAnsDefaultTypeInternal _TurnToEmergencyCmdAns_default_instance_;
class TurnToEmergencyCmdReq;
class TurnToEmergencyCmdReqDefaultTypeInternal;
extern TurnToEmergencyCmdReqDefaultTypeInternal _TurnToEmergencyCmdReq_default_instance_;
}  // namespace protobuf
}  // namespace charge

namespace charge {
namespace protobuf {

namespace protobuf_chargeprotobuf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_chargeprotobuf_2eproto

enum AccountType {
  DefaultAccountType = 0,
  User = 1,
  Card = 2,
  Vin = 3,
  Plate = 4,
  AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountType_IsValid(int value);
const AccountType AccountType_MIN = DefaultAccountType;
const AccountType AccountType_MAX = Plate;
const int AccountType_ARRAYSIZE = AccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountType_descriptor();
inline const ::std::string& AccountType_Name(AccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountType_descriptor(), value);
}
inline bool AccountType_Parse(
    const ::std::string& name, AccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountType>(
    AccountType_descriptor(), name, value);
}
enum BoolEnum {
  DefaultBool = 0,
  True = 1,
  False = 2,
  BoolEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BoolEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BoolEnum_IsValid(int value);
const BoolEnum BoolEnum_MIN = DefaultBool;
const BoolEnum BoolEnum_MAX = False;
const int BoolEnum_ARRAYSIZE = BoolEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* BoolEnum_descriptor();
inline const ::std::string& BoolEnum_Name(BoolEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    BoolEnum_descriptor(), value);
}
inline bool BoolEnum_Parse(
    const ::std::string& name, BoolEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BoolEnum>(
    BoolEnum_descriptor(), name, value);
}
enum BillStatus {
  DefaultBill = 0,
  ChargingBillStatus = 1,
  QueueingBillStatus = 2,
  FinishedBillStatus = 3,
  StartChargeFailedBillStatus = 9,
  StopChargeFailedBillStatus = 10,
  BillStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BillStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BillStatus_IsValid(int value);
const BillStatus BillStatus_MIN = DefaultBill;
const BillStatus BillStatus_MAX = StopChargeFailedBillStatus;
const int BillStatus_ARRAYSIZE = BillStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* BillStatus_descriptor();
inline const ::std::string& BillStatus_Name(BillStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    BillStatus_descriptor(), value);
}
inline bool BillStatus_Parse(
    const ::std::string& name, BillStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BillStatus>(
    BillStatus_descriptor(), name, value);
}
enum ChargerStateEnum {
  DefaultChargerState = 0,
  Standby = 1,
  Plug = 2,
  Waiting = 3,
  Queueing = 4,
  Finished = 5,
  Fulled = 6,
  Charging = 17,
  Changing = 18,
  Pause = 19,
  Restrict = 20,
  EVPause = 21,
  CtrlPause = 22,
  PlatformPause = 23,
  Starting = 33,
  Offline = 34,
  Sublance = 35,
  Discharging = 36,
  Fault = 37,
  Dispatching = 38,
  ChargerStateEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChargerStateEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChargerStateEnum_IsValid(int value);
const ChargerStateEnum ChargerStateEnum_MIN = DefaultChargerState;
const ChargerStateEnum ChargerStateEnum_MAX = Dispatching;
const int ChargerStateEnum_ARRAYSIZE = ChargerStateEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChargerStateEnum_descriptor();
inline const ::std::string& ChargerStateEnum_Name(ChargerStateEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChargerStateEnum_descriptor(), value);
}
inline bool ChargerStateEnum_Parse(
    const ::std::string& name, ChargerStateEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChargerStateEnum>(
    ChargerStateEnum_descriptor(), name, value);
}
enum EndReason {
  DefaultEndReason = 0,
  BMSEnd1 = 1,
  PlatformEnd = 2,
  ManuallySetConditionEnd = 3,
  ManuallyClickDCInterfaceEnd = 4,
  ChargerFaultEnd = 5,
  ConnectorAbnormalEnd = 6,
  ConnectorExtractEnd = 7,
  ForcedSwitchEnd = 19,
  MainConnectorAbnormalEnd = 20,
  AssistedConnectorAbnormalEnd = 21,
  ElectronicLockAbnormalEnd = 22,
  ChargingVoltageAbnormalEnd = 33,
  ChargingCurrentAbnormalEnd = 34,
  ChargingCurrentMismatchingEnd = 35,
  ChargingVoltageMismatchingEnd = 36,
  ControllerCommunicationFaltEnd = 37,
  MeterCommunicationFaltEnd = 38,
  BackstaCommunicationEnd = 39,
  SOCFullEnd = 40,
  SystemModelTypeConversionEnd = 41,
  PowerFailEnd = 49,
  ActiveProtectionBatteryOverTempEnd = 50,
  ActiveProtectionBatteryLowTempEnd = 51,
  ActiveProtectionBatteryTempOutOfControlEnd = 52,
  ActiveProtectionBatteryOverChargeEnd = 53,
  BMSAssistedPowerAbnormalEnd = 54,
  BMSConnectorOpenCircuitFaltEnd = 55,
  ActiveProtectionBMSDataSuperRange = 56,
  PDUOverTempEnd = 57,
  ActiveProtectionBatteryPortVoltageAbnormalEnd = 58,
  VehicleControllerFaltEnd = 65,
  GuidanceCircuit = 66,
  DrawGunEnd = 67,
  DeviceOverTempEnd = 68,
  OverCurrentEnd = 69,
  OverChargeEnd = 70,
  UnderVoltageEnd = 71,
  CPLineLowVoltageFaultEnd = 81,
  CreepageFaultEnd = 82,
  ChargingGunSocketOverTempEnd = 83,
  RelayAbnormalEnd = 84,
  CANIDConflictEnd = 85,
  ActiveProtectionBatteryMonomerOverVoltageEnd = 86,
  ActiveProtectionBatteryEntiretyOverVoltageEnd = 87,
  MeterCheckoutErrorEnd = 88,
  BMSCommunicationOvertimeEnd = 97,
  ElectricityCanontSupplyEnd = 98,
  FanFaultEnd = 99,
  EmergencyEnd = 100,
  ChargerInsulationAbnormalEnd = 101,
  ChargerHaveNoAvailableModule = 102,
  VehicleBMSAdhesionEnd = 103,
  NotGetVINorPlateEnd = 113,
  FuseFaultEnd = 114,
  ModuleMatchingAbnormalEnd = 115,
  VehicleBatteryReachTargetSOCEnd = 116,
  VehicleReachTotalVoltageEnd = 117,
  VehicleReachMonomerVoltageTargetEnd = 118,
  VehicleBMSInsulationFaultEnd = 119,
  VehicleOutputConnectorOverTempFaultEnd = 129,
  VehicleBMSComponentOrOutputConnectorOverTempEnd = 130,
  VehicleChargingConnectorFaultEnd = 131,
  VehicleBatteryGroupOverTempFaultEnd = 132,
  VehicleHighVoltageRelayFaultEnd = 133,
  VehicleDetectionPointCC2VoltageDetectFaultEnd = 134,
  VehicleOtherFault = 135,
  VehicleOverCurrentEnd = 136,
  VehicleVoltageAbnormalEnd = 137,
  BMSEnd2 = 138,
  CtrlDisplayEnd = 145,
  CtrlOfflineSwingCardEnd = 146,
  CtrlElectricityAbnormalEnd = 147,
  CtrlAvoidPeakFunctionEnd = 148,
  EndReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EndReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EndReason_IsValid(int value);
const EndReason EndReason_MIN = DefaultEndReason;
const EndReason EndReason_MAX = CtrlAvoidPeakFunctionEnd;
const int EndReason_ARRAYSIZE = EndReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* EndReason_descriptor();
inline const ::std::string& EndReason_Name(EndReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    EndReason_descriptor(), value);
}
inline bool EndReason_Parse(
    const ::std::string& name, EndReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndReason>(
    EndReason_descriptor(), name, value);
}
enum ErrorCode {
  DefaultErrorCode = 0,
  StartSymbolError = 16,
  HeaderLengthError = 32,
  EncodingTypeError = 48,
  ProtocolVersionError = 64,
  MessageTypeError = 80,
  CtrlAddrError = 96,
  ParseError = 112,
  ApplicationError = 128,
  GenericError = 144,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = DefaultErrorCode;
const ErrorCode ErrorCode_MAX = GenericError;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum FailReason {
  DefaultFailReason = 0,
  GetStationError = 1,
  CannotGetStation = 2,
  GetCardInfoError = 3,
  CannotGetCardInfo = 4,
  GetAccountInfoError = 5,
  CannotGetAccountInfo = 6,
  GetStategyError = 7,
  CannotGetStategy = 8,
  GetChargeInfoError = 9,
  CtrlOffline = 17,
  HeaderDecodeError = 18,
  PayloadDecodeError = 19,
  FailReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FailReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FailReason_IsValid(int value);
const FailReason FailReason_MIN = DefaultFailReason;
const FailReason FailReason_MAX = PayloadDecodeError;
const int FailReason_ARRAYSIZE = FailReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* FailReason_descriptor();
inline const ::std::string& FailReason_Name(FailReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    FailReason_descriptor(), value);
}
inline bool FailReason_Parse(
    const ::std::string& name, FailReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FailReason>(
    FailReason_descriptor(), name, value);
}
enum MeasureType {
  DefaultMeasureType = 0,
  Va = 1,
  Vb = 2,
  Vc = 3,
  Vdc = 4,
  Ia = 17,
  Ib = 18,
  Ic = 19,
  Idc = 20,
  N = 21,
  P = 33,
  Q = 34,
  PF = 35,
  VU = 36,
  CU = 37,
  Fap = 49,
  Rap = 50,
  Frp = 51,
  Rrp = 52,
  MeasureType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureType_IsValid(int value);
const MeasureType MeasureType_MIN = DefaultMeasureType;
const MeasureType MeasureType_MAX = Rrp;
const int MeasureType_ARRAYSIZE = MeasureType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureType_descriptor();
inline const ::std::string& MeasureType_Name(MeasureType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureType_descriptor(), value);
}
inline bool MeasureType_Parse(
    const ::std::string& name, MeasureType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureType>(
    MeasureType_descriptor(), name, value);
}
enum OfflineReason {
  DefaultOfflineReason = 0,
  ConnectionLost = 1,
  PowerOff = 2,
  HeartbeatTimeout = 3,
  OfflineReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OfflineReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OfflineReason_IsValid(int value);
const OfflineReason OfflineReason_MIN = DefaultOfflineReason;
const OfflineReason OfflineReason_MAX = HeartbeatTimeout;
const int OfflineReason_ARRAYSIZE = OfflineReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* OfflineReason_descriptor();
inline const ::std::string& OfflineReason_Name(OfflineReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    OfflineReason_descriptor(), value);
}
inline bool OfflineReason_Parse(
    const ::std::string& name, OfflineReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfflineReason>(
    OfflineReason_descriptor(), name, value);
}
enum RegistrationStatus {
  DefaultRegistrationStatus = 0,
  Accepted = 1,
  Rejected = 2,
  RegistrationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegistrationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegistrationStatus_IsValid(int value);
const RegistrationStatus RegistrationStatus_MIN = DefaultRegistrationStatus;
const RegistrationStatus RegistrationStatus_MAX = Rejected;
const int RegistrationStatus_ARRAYSIZE = RegistrationStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegistrationStatus_descriptor();
inline const ::std::string& RegistrationStatus_Name(RegistrationStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegistrationStatus_descriptor(), value);
}
inline bool RegistrationStatus_Parse(
    const ::std::string& name, RegistrationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegistrationStatus>(
    RegistrationStatus_descriptor(), name, value);
}
enum StartChargeType {
  DefaultChargeType = 0,
  ImmediatelyCharge = 1,
  SaveCharge = 2,
  UrgentCharge = 3,
  AllowedSecond = 4,
  AllowedKwh = 5,
  AllowedRMB = 6,
  AlternateCharge = 7,
  Discharge = 8,
  StartChargeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StartChargeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StartChargeType_IsValid(int value);
const StartChargeType StartChargeType_MIN = DefaultChargeType;
const StartChargeType StartChargeType_MAX = Discharge;
const int StartChargeType_ARRAYSIZE = StartChargeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StartChargeType_descriptor();
inline const ::std::string& StartChargeType_Name(StartChargeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StartChargeType_descriptor(), value);
}
inline bool StartChargeType_Parse(
    const ::std::string& name, StartChargeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StartChargeType>(
    StartChargeType_descriptor(), name, value);
}
enum ChargeRequestType {
  DefaultChargeRequestType = 0,
  VinCharge = 1,
  PlateCharge = 2,
  CardCharge = 3,
  UserCodeCharge = 4,
  ChargeRequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChargeRequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChargeRequestType_IsValid(int value);
const ChargeRequestType ChargeRequestType_MIN = DefaultChargeRequestType;
const ChargeRequestType ChargeRequestType_MAX = UserCodeCharge;
const int ChargeRequestType_ARRAYSIZE = ChargeRequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChargeRequestType_descriptor();
inline const ::std::string& ChargeRequestType_Name(ChargeRequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChargeRequestType_descriptor(), value);
}
inline bool ChargeRequestType_Parse(
    const ::std::string& name, ChargeRequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChargeRequestType>(
    ChargeRequestType_descriptor(), name, value);
}
enum ChargeDischarge {
  DefaultChargeDischarge = 0,
  StopChargeType = 1,
  StopDischargeType = 2,
  ChargeDischarge_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChargeDischarge_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChargeDischarge_IsValid(int value);
const ChargeDischarge ChargeDischarge_MIN = DefaultChargeDischarge;
const ChargeDischarge ChargeDischarge_MAX = StopDischargeType;
const int ChargeDischarge_ARRAYSIZE = ChargeDischarge_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChargeDischarge_descriptor();
inline const ::std::string& ChargeDischarge_Name(ChargeDischarge value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChargeDischarge_descriptor(), value);
}
inline bool ChargeDischarge_Parse(
    const ::std::string& name, ChargeDischarge* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChargeDischarge>(
    ChargeDischarge_descriptor(), name, value);
}
enum StartChargeWay {
  DefaultStartChargeWay = 0,
  ClouldStart = 1,
  CardStart = 2,
  VinStart = 3,
  PlateStart = 4,
  StartChargeWay_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StartChargeWay_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StartChargeWay_IsValid(int value);
const StartChargeWay StartChargeWay_MIN = DefaultStartChargeWay;
const StartChargeWay StartChargeWay_MAX = PlateStart;
const int StartChargeWay_ARRAYSIZE = StartChargeWay_MAX + 1;

const ::google::protobuf::EnumDescriptor* StartChargeWay_descriptor();
inline const ::std::string& StartChargeWay_Name(StartChargeWay value) {
  return ::google::protobuf::internal::NameOfEnum(
    StartChargeWay_descriptor(), value);
}
inline bool StartChargeWay_Parse(
    const ::std::string& name, StartChargeWay* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StartChargeWay>(
    StartChargeWay_descriptor(), name, value);
}
enum StateType {
  DefaultSignalType = 0,
  Interface = 1,
  Connect = 2,
  Relay = 3,
  Parking = 4,
  Charger = 5,
  StateTypeFault = 6,
  BmsFault = 7,
  Reason = 8,
  Stategy = 9,
  AuxType = 10,
  ControlMode = 17,
  StateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StateType_IsValid(int value);
const StateType StateType_MIN = DefaultSignalType;
const StateType StateType_MAX = ControlMode;
const int StateType_ARRAYSIZE = StateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StateType_descriptor();
inline const ::std::string& StateType_Name(StateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StateType_descriptor(), value);
}
inline bool StateType_Parse(
    const ::std::string& name, StateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateType>(
    StateType_descriptor(), name, value);
}
enum SendReason {
  DefaultSendReason = 0,
  DataChange = 1,
  CallAnswer = 2,
  IntervalSend = 3,
  SendReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SendReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SendReason_IsValid(int value);
const SendReason SendReason_MIN = DefaultSendReason;
const SendReason SendReason_MAX = IntervalSend;
const int SendReason_ARRAYSIZE = SendReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* SendReason_descriptor();
inline const ::std::string& SendReason_Name(SendReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    SendReason_descriptor(), value);
}
inline bool SendReason_Parse(
    const ::std::string& name, SendReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SendReason>(
    SendReason_descriptor(), name, value);
}
enum SyncAccountType {
  DefaultSyncAccountType = 0,
  CustomerCard = 1,
  Car = 2,
  SyncAccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncAccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncAccountType_IsValid(int value);
const SyncAccountType SyncAccountType_MIN = DefaultSyncAccountType;
const SyncAccountType SyncAccountType_MAX = Car;
const int SyncAccountType_ARRAYSIZE = SyncAccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncAccountType_descriptor();
inline const ::std::string& SyncAccountType_Name(SyncAccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncAccountType_descriptor(), value);
}
inline bool SyncAccountType_Parse(
    const ::std::string& name, SyncAccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncAccountType>(
    SyncAccountType_descriptor(), name, value);
}
enum ChargingMode {
  DefaultChargingMode = 0,
  VoltageStable = 1,
  CurrentStable = 2,
  ChargingMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChargingMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChargingMode_IsValid(int value);
const ChargingMode ChargingMode_MIN = DefaultChargingMode;
const ChargingMode ChargingMode_MAX = CurrentStable;
const int ChargingMode_ARRAYSIZE = ChargingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChargingMode_descriptor();
inline const ::std::string& ChargingMode_Name(ChargingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChargingMode_descriptor(), value);
}
inline bool ChargingMode_Parse(
    const ::std::string& name, ChargingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChargingMode>(
    ChargingMode_descriptor(), name, value);
}
enum CruveType {
  DefaultCruveType = 0,
  SuggestPower = 1,
  SuggestSoc = 2,
  CruveType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CruveType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CruveType_IsValid(int value);
const CruveType CruveType_MIN = DefaultCruveType;
const CruveType CruveType_MAX = SuggestSoc;
const int CruveType_ARRAYSIZE = CruveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CruveType_descriptor();
inline const ::std::string& CruveType_Name(CruveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CruveType_descriptor(), value);
}
inline bool CruveType_Parse(
    const ::std::string& name, CruveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CruveType>(
    CruveType_descriptor(), name, value);
}
enum CtrlHardwareType {
  DefaultCtrlHardwareType = 0,
  SplitType = 1,
  IntigratedType = 2,
  CtrlHardwareType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CtrlHardwareType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CtrlHardwareType_IsValid(int value);
const CtrlHardwareType CtrlHardwareType_MIN = DefaultCtrlHardwareType;
const CtrlHardwareType CtrlHardwareType_MAX = IntigratedType;
const int CtrlHardwareType_ARRAYSIZE = CtrlHardwareType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CtrlHardwareType_descriptor();
inline const ::std::string& CtrlHardwareType_Name(CtrlHardwareType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CtrlHardwareType_descriptor(), value);
}
inline bool CtrlHardwareType_Parse(
    const ::std::string& name, CtrlHardwareType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CtrlHardwareType>(
    CtrlHardwareType_descriptor(), name, value);
}
enum BillType {
  DefaultBillType = 0,
  ChargingBill = 1,
  BillType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BillType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BillType_IsValid(int value);
const BillType BillType_MIN = DefaultBillType;
const BillType BillType_MAX = ChargingBill;
const int BillType_ARRAYSIZE = BillType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BillType_descriptor();
inline const ::std::string& BillType_Name(BillType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BillType_descriptor(), value);
}
inline bool BillType_Parse(
    const ::std::string& name, BillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BillType>(
    BillType_descriptor(), name, value);
}
enum ParkingStatusEnum {
  Unknow = 0,
  ParkingOccupy = 1,
  ParkingIdle = 2,
  ParkingStatusEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParkingStatusEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParkingStatusEnum_IsValid(int value);
const ParkingStatusEnum ParkingStatusEnum_MIN = Unknow;
const ParkingStatusEnum ParkingStatusEnum_MAX = ParkingIdle;
const int ParkingStatusEnum_ARRAYSIZE = ParkingStatusEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParkingStatusEnum_descriptor();
inline const ::std::string& ParkingStatusEnum_Name(ParkingStatusEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParkingStatusEnum_descriptor(), value);
}
inline bool ParkingStatusEnum_Parse(
    const ::std::string& name, ParkingStatusEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParkingStatusEnum>(
    ParkingStatusEnum_descriptor(), name, value);
}
enum ParkingAlarmCodeEnum {
  DefaultParkingAlarmEnum = 0,
  CameraFault = 2,
  SensorFault = 3,
  BuzzerFault = 4,
  LowBattery = 5,
  MotorFault = 6,
  Reserved1 = 7,
  ParkingAlarmCodeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParkingAlarmCodeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParkingAlarmCodeEnum_IsValid(int value);
const ParkingAlarmCodeEnum ParkingAlarmCodeEnum_MIN = DefaultParkingAlarmEnum;
const ParkingAlarmCodeEnum ParkingAlarmCodeEnum_MAX = Reserved1;
const int ParkingAlarmCodeEnum_ARRAYSIZE = ParkingAlarmCodeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParkingAlarmCodeEnum_descriptor();
inline const ::std::string& ParkingAlarmCodeEnum_Name(ParkingAlarmCodeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParkingAlarmCodeEnum_descriptor(), value);
}
inline bool ParkingAlarmCodeEnum_Parse(
    const ::std::string& name, ParkingAlarmCodeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParkingAlarmCodeEnum>(
    ParkingAlarmCodeEnum_descriptor(), name, value);
}
// ===================================================================

class HeartbeatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.HeartbeatReq) */ {
 public:
  HeartbeatReq();
  virtual ~HeartbeatReq();

  HeartbeatReq(const HeartbeatReq& from);

  inline HeartbeatReq& operator=(const HeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatReq(HeartbeatReq&& from) noexcept
    : HeartbeatReq() {
    *this = ::std::move(from);
  }

  inline HeartbeatReq& operator=(HeartbeatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatReq& default_instance();

  static inline const HeartbeatReq* internal_default_instance() {
    return reinterpret_cast<const HeartbeatReq*>(
               &_HeartbeatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HeartbeatReq* other);
  friend void swap(HeartbeatReq& a, HeartbeatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatReq& from);
  void MergeFrom(const HeartbeatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime CurrentTime = 1;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& currenttime() const;
  ::charge::protobuf::DateTime* mutable_currenttime();
  ::charge::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::charge::protobuf::DateTime* currenttime);

  // @@protoc_insertion_point(class_scope:charge.protobuf.HeartbeatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* currenttime_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.HeartbeatAns) */ {
 public:
  HeartbeatAns();
  virtual ~HeartbeatAns();

  HeartbeatAns(const HeartbeatAns& from);

  inline HeartbeatAns& operator=(const HeartbeatAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatAns(HeartbeatAns&& from) noexcept
    : HeartbeatAns() {
    *this = ::std::move(from);
  }

  inline HeartbeatAns& operator=(HeartbeatAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatAns& default_instance();

  static inline const HeartbeatAns* internal_default_instance() {
    return reinterpret_cast<const HeartbeatAns*>(
               &_HeartbeatAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HeartbeatAns* other);
  friend void swap(HeartbeatAns& a, HeartbeatAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatAns* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatAns& from);
  void MergeFrom(const HeartbeatAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime CurrentTime = 1;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& currenttime() const;
  ::charge::protobuf::DateTime* mutable_currenttime();
  ::charge::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::charge::protobuf::DateTime* currenttime);

  // @@protoc_insertion_point(class_scope:charge.protobuf.HeartbeatAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* currenttime_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.CommAns) */ {
 public:
  CommAns();
  virtual ~CommAns();

  CommAns(const CommAns& from);

  inline CommAns& operator=(const CommAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommAns(CommAns&& from) noexcept
    : CommAns() {
    *this = ::std::move(from);
  }

  inline CommAns& operator=(CommAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommAns& default_instance();

  static inline const CommAns* internal_default_instance() {
    return reinterpret_cast<const CommAns*>(
               &_CommAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CommAns* other);
  friend void swap(CommAns& a, CommAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommAns* New() const PROTOBUF_FINAL { return New(NULL); }

  CommAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommAns& from);
  void MergeFrom(const CommAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.CommAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoginReq* other);
  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string SerialNumber = 3;
  void clear_serialnumber();
  static const int kSerialNumberFieldNumber = 3;
  const ::std::string& serialnumber() const;
  void set_serialnumber(const ::std::string& value);
  #if LANG_CXX11
  void set_serialnumber(::std::string&& value);
  #endif
  void set_serialnumber(const char* value);
  void set_serialnumber(const char* value, size_t size);
  ::std::string* mutable_serialnumber();
  ::std::string* release_serialnumber();
  void set_allocated_serialnumber(::std::string* serialnumber);

  // string CtrlProtoVersion = 4;
  void clear_ctrlprotoversion();
  static const int kCtrlProtoVersionFieldNumber = 4;
  const ::std::string& ctrlprotoversion() const;
  void set_ctrlprotoversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlprotoversion(::std::string&& value);
  #endif
  void set_ctrlprotoversion(const char* value);
  void set_ctrlprotoversion(const char* value, size_t size);
  ::std::string* mutable_ctrlprotoversion();
  ::std::string* release_ctrlprotoversion();
  void set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion);

  // string CtrlVendor = 5;
  void clear_ctrlvendor();
  static const int kCtrlVendorFieldNumber = 5;
  const ::std::string& ctrlvendor() const;
  void set_ctrlvendor(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlvendor(::std::string&& value);
  #endif
  void set_ctrlvendor(const char* value);
  void set_ctrlvendor(const char* value, size_t size);
  ::std::string* mutable_ctrlvendor();
  ::std::string* release_ctrlvendor();
  void set_allocated_ctrlvendor(::std::string* ctrlvendor);

  // string CtrlSwVersion = 6;
  void clear_ctrlswversion();
  static const int kCtrlSwVersionFieldNumber = 6;
  const ::std::string& ctrlswversion() const;
  void set_ctrlswversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlswversion(::std::string&& value);
  #endif
  void set_ctrlswversion(const char* value);
  void set_ctrlswversion(const char* value, size_t size);
  ::std::string* mutable_ctrlswversion();
  ::std::string* release_ctrlswversion();
  void set_allocated_ctrlswversion(::std::string* ctrlswversion);

  // string DataCenter = 8;
  void clear_datacenter();
  static const int kDataCenterFieldNumber = 8;
  const ::std::string& datacenter() const;
  void set_datacenter(const ::std::string& value);
  #if LANG_CXX11
  void set_datacenter(::std::string&& value);
  #endif
  void set_datacenter(const char* value);
  void set_datacenter(const char* value, size_t size);
  ::std::string* mutable_datacenter();
  ::std::string* release_datacenter();
  void set_allocated_datacenter(::std::string* datacenter);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.CtrlHardwareType CtrlHwType = 7;
  void clear_ctrlhwtype();
  static const int kCtrlHwTypeFieldNumber = 7;
  ::charge::protobuf::CtrlHardwareType ctrlhwtype() const;
  void set_ctrlhwtype(::charge::protobuf::CtrlHardwareType value);

  // int32 CtrlStatus = 9;
  void clear_ctrlstatus();
  static const int kCtrlStatusFieldNumber = 9;
  ::google::protobuf::int32 ctrlstatus() const;
  void set_ctrlstatus(::google::protobuf::int32 value);

  // int32 BillCount = 10;
  void clear_billcount();
  static const int kBillCountFieldNumber = 10;
  ::google::protobuf::int32 billcount() const;
  void set_billcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr serialnumber_;
  ::google::protobuf::internal::ArenaStringPtr ctrlprotoversion_;
  ::google::protobuf::internal::ArenaStringPtr ctrlvendor_;
  ::google::protobuf::internal::ArenaStringPtr ctrlswversion_;
  ::google::protobuf::internal::ArenaStringPtr datacenter_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  int ctrlhwtype_;
  ::google::protobuf::int32 ctrlstatus_;
  ::google::protobuf::int32 billcount_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.LoginAns) */ {
 public:
  LoginAns();
  virtual ~LoginAns();

  LoginAns(const LoginAns& from);

  inline LoginAns& operator=(const LoginAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginAns(LoginAns&& from) noexcept
    : LoginAns() {
    *this = ::std::move(from);
  }

  inline LoginAns& operator=(LoginAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginAns& default_instance();

  static inline const LoginAns* internal_default_instance() {
    return reinterpret_cast<const LoginAns*>(
               &_LoginAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LoginAns* other);
  friend void swap(LoginAns& a, LoginAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginAns* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginAns& from);
  void MergeFrom(const LoginAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime CurrentTime = 2;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& currenttime() const;
  ::charge::protobuf::DateTime* mutable_currenttime();
  ::charge::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::charge::protobuf::DateTime* currenttime);

  // .charge.protobuf.RegistrationStatus Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::charge::protobuf::RegistrationStatus status() const;
  void set_status(::charge::protobuf::RegistrationStatus value);

  // int32 Interval = 3;
  void clear_interval();
  static const int kIntervalFieldNumber = 3;
  ::google::protobuf::int32 interval() const;
  void set_interval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.LoginAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* currenttime_;
  int status_;
  ::google::protobuf::int32 interval_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.OfflineReq) */ {
 public:
  OfflineReq();
  virtual ~OfflineReq();

  OfflineReq(const OfflineReq& from);

  inline OfflineReq& operator=(const OfflineReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineReq(OfflineReq&& from) noexcept
    : OfflineReq() {
    *this = ::std::move(from);
  }

  inline OfflineReq& operator=(OfflineReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineReq& default_instance();

  static inline const OfflineReq* internal_default_instance() {
    return reinterpret_cast<const OfflineReq*>(
               &_OfflineReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OfflineReq* other);
  friend void swap(OfflineReq& a, OfflineReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineReq& from);
  void MergeFrom(const OfflineReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CtrlProtoVersion = 3;
  void clear_ctrlprotoversion();
  static const int kCtrlProtoVersionFieldNumber = 3;
  const ::std::string& ctrlprotoversion() const;
  void set_ctrlprotoversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlprotoversion(::std::string&& value);
  #endif
  void set_ctrlprotoversion(const char* value);
  void set_ctrlprotoversion(const char* value, size_t size);
  ::std::string* mutable_ctrlprotoversion();
  ::std::string* release_ctrlprotoversion();
  void set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime OfflineTime = 2;
  bool has_offlinetime() const;
  void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& offlinetime() const;
  ::charge::protobuf::DateTime* mutable_offlinetime();
  ::charge::protobuf::DateTime* release_offlinetime();
  void set_allocated_offlinetime(::charge::protobuf::DateTime* offlinetime);

  // .charge.protobuf.OfflineReason Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::charge::protobuf::OfflineReason reason() const;
  void set_reason(::charge::protobuf::OfflineReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.OfflineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ctrlprotoversion_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* offlinetime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.OfflineAns) */ {
 public:
  OfflineAns();
  virtual ~OfflineAns();

  OfflineAns(const OfflineAns& from);

  inline OfflineAns& operator=(const OfflineAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineAns(OfflineAns&& from) noexcept
    : OfflineAns() {
    *this = ::std::move(from);
  }

  inline OfflineAns& operator=(OfflineAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineAns& default_instance();

  static inline const OfflineAns* internal_default_instance() {
    return reinterpret_cast<const OfflineAns*>(
               &_OfflineAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OfflineAns* other);
  friend void swap(OfflineAns& a, OfflineAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineAns* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineAns& from);
  void MergeFrom(const OfflineAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.OfflineAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartChargeCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StartChargeCmdReq) */ {
 public:
  StartChargeCmdReq();
  virtual ~StartChargeCmdReq();

  StartChargeCmdReq(const StartChargeCmdReq& from);

  inline StartChargeCmdReq& operator=(const StartChargeCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartChargeCmdReq(StartChargeCmdReq&& from) noexcept
    : StartChargeCmdReq() {
    *this = ::std::move(from);
  }

  inline StartChargeCmdReq& operator=(StartChargeCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChargeCmdReq& default_instance();

  static inline const StartChargeCmdReq* internal_default_instance() {
    return reinterpret_cast<const StartChargeCmdReq*>(
               &_StartChargeCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(StartChargeCmdReq* other);
  friend void swap(StartChargeCmdReq& a, StartChargeCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartChargeCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StartChargeCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartChargeCmdReq& from);
  void MergeFrom(const StartChargeCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartChargeCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.ChargingStrategy Cruve = 6;
  int cruve_size() const;
  void clear_cruve();
  static const int kCruveFieldNumber = 6;
  const ::charge::protobuf::ChargingStrategy& cruve(int index) const;
  ::charge::protobuf::ChargingStrategy* mutable_cruve(int index);
  ::charge::protobuf::ChargingStrategy* add_cruve();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >*
      mutable_cruve();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >&
      cruve() const;

  // repeated .charge.protobuf.AccountingStrategy Strategy = 10;
  int strategy_size() const;
  void clear_strategy();
  static const int kStrategyFieldNumber = 10;
  const ::charge::protobuf::AccountingStrategy& strategy(int index) const;
  ::charge::protobuf::AccountingStrategy* mutable_strategy(int index);
  ::charge::protobuf::AccountingStrategy* add_strategy();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >*
      mutable_strategy();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >&
      strategy() const;

  // string BillCode = 3;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 3;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.AccountInfo Account = 4;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::charge::protobuf::AccountInfo& account() const;
  ::charge::protobuf::AccountInfo* mutable_account();
  ::charge::protobuf::AccountInfo* release_account();
  void set_allocated_account(::charge::protobuf::AccountInfo* account);

  // .charge.protobuf.QueueSequence Sequence = 11;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 11;
  const ::charge::protobuf::QueueSequence& sequence() const;
  ::charge::protobuf::QueueSequence* mutable_sequence();
  ::charge::protobuf::QueueSequence* release_sequence();
  void set_allocated_sequence(::charge::protobuf::QueueSequence* sequence);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.StartChargeType Type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::charge::protobuf::StartChargeType type() const;
  void set_type(::charge::protobuf::StartChargeType value);

  // .charge.protobuf.CruveType CType = 5;
  void clear_ctype();
  static const int kCTypeFieldNumber = 5;
  ::charge::protobuf::CruveType ctype() const;
  void set_ctype(::charge::protobuf::CruveType value);

  // int32 AllowedSecond = 7;
  void clear_allowedsecond();
  static const int kAllowedSecondFieldNumber = 7;
  ::google::protobuf::int32 allowedsecond() const;
  void set_allowedsecond(::google::protobuf::int32 value);

  // int32 AllowedkWh = 8;
  void clear_allowedkwh();
  static const int kAllowedkWhFieldNumber = 8;
  ::google::protobuf::int32 allowedkwh() const;
  void set_allowedkwh(::google::protobuf::int32 value);

  // int32 AllowedRmb = 9;
  void clear_allowedrmb();
  static const int kAllowedRmbFieldNumber = 9;
  ::google::protobuf::int32 allowedrmb() const;
  void set_allowedrmb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StartChargeCmdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy > cruve_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy > strategy_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::AccountInfo* account_;
  ::charge::protobuf::QueueSequence* sequence_;
  ::google::protobuf::int32 canindex_;
  int type_;
  int ctype_;
  ::google::protobuf::int32 allowedsecond_;
  ::google::protobuf::int32 allowedkwh_;
  ::google::protobuf::int32 allowedrmb_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartChargeCmdAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StartChargeCmdAns) */ {
 public:
  StartChargeCmdAns();
  virtual ~StartChargeCmdAns();

  StartChargeCmdAns(const StartChargeCmdAns& from);

  inline StartChargeCmdAns& operator=(const StartChargeCmdAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartChargeCmdAns(StartChargeCmdAns&& from) noexcept
    : StartChargeCmdAns() {
    *this = ::std::move(from);
  }

  inline StartChargeCmdAns& operator=(StartChargeCmdAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChargeCmdAns& default_instance();

  static inline const StartChargeCmdAns* internal_default_instance() {
    return reinterpret_cast<const StartChargeCmdAns*>(
               &_StartChargeCmdAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(StartChargeCmdAns* other);
  friend void swap(StartChargeCmdAns& a, StartChargeCmdAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartChargeCmdAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StartChargeCmdAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartChargeCmdAns& from);
  void MergeFrom(const StartChargeCmdAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartChargeCmdAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 5;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StartChargeCmdAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  int result_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopChargeCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StopChargeCmdReq) */ {
 public:
  StopChargeCmdReq();
  virtual ~StopChargeCmdReq();

  StopChargeCmdReq(const StopChargeCmdReq& from);

  inline StopChargeCmdReq& operator=(const StopChargeCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopChargeCmdReq(StopChargeCmdReq&& from) noexcept
    : StopChargeCmdReq() {
    *this = ::std::move(from);
  }

  inline StopChargeCmdReq& operator=(StopChargeCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopChargeCmdReq& default_instance();

  static inline const StopChargeCmdReq* internal_default_instance() {
    return reinterpret_cast<const StopChargeCmdReq*>(
               &_StopChargeCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(StopChargeCmdReq* other);
  friend void swap(StopChargeCmdReq& a, StopChargeCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopChargeCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StopChargeCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopChargeCmdReq& from);
  void MergeFrom(const StopChargeCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopChargeCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Vin = 5;
  void clear_vin();
  static const int kVinFieldNumber = 5;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string Plate = 6;
  void clear_plate();
  static const int kPlateFieldNumber = 6;
  const ::std::string& plate() const;
  void set_plate(const ::std::string& value);
  #if LANG_CXX11
  void set_plate(::std::string&& value);
  #endif
  void set_plate(const char* value);
  void set_plate(const char* value, size_t size);
  ::std::string* mutable_plate();
  ::std::string* release_plate();
  void set_allocated_plate(::std::string* plate);

  // string UserCode = 8;
  void clear_usercode();
  static const int kUserCodeFieldNumber = 8;
  const ::std::string& usercode() const;
  void set_usercode(const ::std::string& value);
  #if LANG_CXX11
  void set_usercode(::std::string&& value);
  #endif
  void set_usercode(const char* value);
  void set_usercode(const char* value, size_t size);
  ::std::string* mutable_usercode();
  ::std::string* release_usercode();
  void set_allocated_usercode(::std::string* usercode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.CardInfo Card = 7;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 7;
  const ::charge::protobuf::CardInfo& card() const;
  ::charge::protobuf::CardInfo* mutable_card();
  ::charge::protobuf::CardInfo* release_card();
  void set_allocated_card(::charge::protobuf::CardInfo* card);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.ChargeRequestType StopType = 3;
  void clear_stoptype();
  static const int kStopTypeFieldNumber = 3;
  ::charge::protobuf::ChargeRequestType stoptype() const;
  void set_stoptype(::charge::protobuf::ChargeRequestType value);

  // .charge.protobuf.ChargeDischarge ChargeType = 4;
  void clear_chargetype();
  static const int kChargeTypeFieldNumber = 4;
  ::charge::protobuf::ChargeDischarge chargetype() const;
  void set_chargetype(::charge::protobuf::ChargeDischarge value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StopChargeCmdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr plate_;
  ::google::protobuf::internal::ArenaStringPtr usercode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::CardInfo* card_;
  ::google::protobuf::int32 canindex_;
  int stoptype_;
  int chargetype_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopChargeCmdAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StopChargeCmdAns) */ {
 public:
  StopChargeCmdAns();
  virtual ~StopChargeCmdAns();

  StopChargeCmdAns(const StopChargeCmdAns& from);

  inline StopChargeCmdAns& operator=(const StopChargeCmdAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopChargeCmdAns(StopChargeCmdAns&& from) noexcept
    : StopChargeCmdAns() {
    *this = ::std::move(from);
  }

  inline StopChargeCmdAns& operator=(StopChargeCmdAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopChargeCmdAns& default_instance();

  static inline const StopChargeCmdAns* internal_default_instance() {
    return reinterpret_cast<const StopChargeCmdAns*>(
               &_StopChargeCmdAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(StopChargeCmdAns* other);
  friend void swap(StopChargeCmdAns& a, StopChargeCmdAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopChargeCmdAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StopChargeCmdAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopChargeCmdAns& from);
  void MergeFrom(const StopChargeCmdAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopChargeCmdAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 5;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StopChargeCmdAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  int result_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartChargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StartChargeReq) */ {
 public:
  StartChargeReq();
  virtual ~StartChargeReq();

  StartChargeReq(const StartChargeReq& from);

  inline StartChargeReq& operator=(const StartChargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartChargeReq(StartChargeReq&& from) noexcept
    : StartChargeReq() {
    *this = ::std::move(from);
  }

  inline StartChargeReq& operator=(StartChargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChargeReq& default_instance();

  static inline const StartChargeReq* internal_default_instance() {
    return reinterpret_cast<const StartChargeReq*>(
               &_StartChargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(StartChargeReq* other);
  friend void swap(StartChargeReq& a, StartChargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartChargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StartChargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartChargeReq& from);
  void MergeFrom(const StartChargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartChargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Vin = 4;
  void clear_vin();
  static const int kVinFieldNumber = 4;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string Plate = 5;
  void clear_plate();
  static const int kPlateFieldNumber = 5;
  const ::std::string& plate() const;
  void set_plate(const ::std::string& value);
  #if LANG_CXX11
  void set_plate(::std::string&& value);
  #endif
  void set_plate(const char* value);
  void set_plate(const char* value, size_t size);
  ::std::string* mutable_plate();
  ::std::string* release_plate();
  void set_allocated_plate(::std::string* plate);

  // string UserCode = 7;
  void clear_usercode();
  static const int kUserCodeFieldNumber = 7;
  const ::std::string& usercode() const;
  void set_usercode(const ::std::string& value);
  #if LANG_CXX11
  void set_usercode(::std::string&& value);
  #endif
  void set_usercode(const char* value);
  void set_usercode(const char* value, size_t size);
  ::std::string* mutable_usercode();
  ::std::string* release_usercode();
  void set_allocated_usercode(::std::string* usercode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime SendTime = 3;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.CardInfo Card = 6;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 6;
  const ::charge::protobuf::CardInfo& card() const;
  ::charge::protobuf::CardInfo* mutable_card();
  ::charge::protobuf::CardInfo* release_card();
  void set_allocated_card(::charge::protobuf::CardInfo* card);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.ChargeRequestType Type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::charge::protobuf::ChargeRequestType type() const;
  void set_type(::charge::protobuf::ChargeRequestType value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StartChargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr plate_;
  ::google::protobuf::internal::ArenaStringPtr usercode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* sendtime_;
  ::charge::protobuf::CardInfo* card_;
  ::google::protobuf::int32 canindex_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartChargeAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StartChargeAns) */ {
 public:
  StartChargeAns();
  virtual ~StartChargeAns();

  StartChargeAns(const StartChargeAns& from);

  inline StartChargeAns& operator=(const StartChargeAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartChargeAns(StartChargeAns&& from) noexcept
    : StartChargeAns() {
    *this = ::std::move(from);
  }

  inline StartChargeAns& operator=(StartChargeAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChargeAns& default_instance();

  static inline const StartChargeAns* internal_default_instance() {
    return reinterpret_cast<const StartChargeAns*>(
               &_StartChargeAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(StartChargeAns* other);
  friend void swap(StartChargeAns& a, StartChargeAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartChargeAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StartChargeAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartChargeAns& from);
  void MergeFrom(const StartChargeAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartChargeAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.ChargeRequestType Type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::charge::protobuf::ChargeRequestType type() const;
  void set_type(::charge::protobuf::ChargeRequestType value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // int32 Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StartChargeAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  int type_;
  int result_;
  ::google::protobuf::int32 reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopChargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StopChargeReq) */ {
 public:
  StopChargeReq();
  virtual ~StopChargeReq();

  StopChargeReq(const StopChargeReq& from);

  inline StopChargeReq& operator=(const StopChargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopChargeReq(StopChargeReq&& from) noexcept
    : StopChargeReq() {
    *this = ::std::move(from);
  }

  inline StopChargeReq& operator=(StopChargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopChargeReq& default_instance();

  static inline const StopChargeReq* internal_default_instance() {
    return reinterpret_cast<const StopChargeReq*>(
               &_StopChargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(StopChargeReq* other);
  friend void swap(StopChargeReq& a, StopChargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopChargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StopChargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopChargeReq& from);
  void MergeFrom(const StopChargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopChargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Vin = 6;
  void clear_vin();
  static const int kVinFieldNumber = 6;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string Plate = 7;
  void clear_plate();
  static const int kPlateFieldNumber = 7;
  const ::std::string& plate() const;
  void set_plate(const ::std::string& value);
  #if LANG_CXX11
  void set_plate(::std::string&& value);
  #endif
  void set_plate(const char* value);
  void set_plate(const char* value, size_t size);
  ::std::string* mutable_plate();
  ::std::string* release_plate();
  void set_allocated_plate(::std::string* plate);

  // string UserCode = 9;
  void clear_usercode();
  static const int kUserCodeFieldNumber = 9;
  const ::std::string& usercode() const;
  void set_usercode(const ::std::string& value);
  #if LANG_CXX11
  void set_usercode(::std::string&& value);
  #endif
  void set_usercode(const char* value);
  void set_usercode(const char* value, size_t size);
  ::std::string* mutable_usercode();
  ::std::string* release_usercode();
  void set_allocated_usercode(::std::string* usercode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 5;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.CardInfo Card = 8;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 8;
  const ::charge::protobuf::CardInfo& card() const;
  ::charge::protobuf::CardInfo* mutable_card();
  ::charge::protobuf::CardInfo* release_card();
  void set_allocated_card(::charge::protobuf::CardInfo* card);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.ChargeRequestType StopType = 3;
  void clear_stoptype();
  static const int kStopTypeFieldNumber = 3;
  ::charge::protobuf::ChargeRequestType stoptype() const;
  void set_stoptype(::charge::protobuf::ChargeRequestType value);

  // .charge.protobuf.ChargeDischarge ChargeType = 4;
  void clear_chargetype();
  static const int kChargeTypeFieldNumber = 4;
  ::charge::protobuf::ChargeDischarge chargetype() const;
  void set_chargetype(::charge::protobuf::ChargeDischarge value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StopChargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr plate_;
  ::google::protobuf::internal::ArenaStringPtr usercode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::charge::protobuf::CardInfo* card_;
  ::google::protobuf::int32 canindex_;
  int stoptype_;
  int chargetype_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopChargeAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StopChargeAns) */ {
 public:
  StopChargeAns();
  virtual ~StopChargeAns();

  StopChargeAns(const StopChargeAns& from);

  inline StopChargeAns& operator=(const StopChargeAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopChargeAns(StopChargeAns&& from) noexcept
    : StopChargeAns() {
    *this = ::std::move(from);
  }

  inline StopChargeAns& operator=(StopChargeAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopChargeAns& default_instance();

  static inline const StopChargeAns* internal_default_instance() {
    return reinterpret_cast<const StopChargeAns*>(
               &_StopChargeAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(StopChargeAns* other);
  friend void swap(StopChargeAns& a, StopChargeAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopChargeAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StopChargeAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopChargeAns& from);
  void MergeFrom(const StopChargeAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopChargeAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StopChargeAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  int result_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SuspendChargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.SuspendChargeReq) */ {
 public:
  SuspendChargeReq();
  virtual ~SuspendChargeReq();

  SuspendChargeReq(const SuspendChargeReq& from);

  inline SuspendChargeReq& operator=(const SuspendChargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SuspendChargeReq(SuspendChargeReq&& from) noexcept
    : SuspendChargeReq() {
    *this = ::std::move(from);
  }

  inline SuspendChargeReq& operator=(SuspendChargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SuspendChargeReq& default_instance();

  static inline const SuspendChargeReq* internal_default_instance() {
    return reinterpret_cast<const SuspendChargeReq*>(
               &_SuspendChargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SuspendChargeReq* other);
  friend void swap(SuspendChargeReq& a, SuspendChargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SuspendChargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SuspendChargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SuspendChargeReq& from);
  void MergeFrom(const SuspendChargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SuspendChargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.SuspendChargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SuspendChargeAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.SuspendChargeAns) */ {
 public:
  SuspendChargeAns();
  virtual ~SuspendChargeAns();

  SuspendChargeAns(const SuspendChargeAns& from);

  inline SuspendChargeAns& operator=(const SuspendChargeAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SuspendChargeAns(SuspendChargeAns&& from) noexcept
    : SuspendChargeAns() {
    *this = ::std::move(from);
  }

  inline SuspendChargeAns& operator=(SuspendChargeAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SuspendChargeAns& default_instance();

  static inline const SuspendChargeAns* internal_default_instance() {
    return reinterpret_cast<const SuspendChargeAns*>(
               &_SuspendChargeAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SuspendChargeAns* other);
  friend void swap(SuspendChargeAns& a, SuspendChargeAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SuspendChargeAns* New() const PROTOBUF_FINAL { return New(NULL); }

  SuspendChargeAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SuspendChargeAns& from);
  void MergeFrom(const SuspendChargeAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SuspendChargeAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 5;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.SuspendChargeAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  int result_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResumeChargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ResumeChargeReq) */ {
 public:
  ResumeChargeReq();
  virtual ~ResumeChargeReq();

  ResumeChargeReq(const ResumeChargeReq& from);

  inline ResumeChargeReq& operator=(const ResumeChargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResumeChargeReq(ResumeChargeReq&& from) noexcept
    : ResumeChargeReq() {
    *this = ::std::move(from);
  }

  inline ResumeChargeReq& operator=(ResumeChargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResumeChargeReq& default_instance();

  static inline const ResumeChargeReq* internal_default_instance() {
    return reinterpret_cast<const ResumeChargeReq*>(
               &_ResumeChargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ResumeChargeReq* other);
  friend void swap(ResumeChargeReq& a, ResumeChargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResumeChargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ResumeChargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResumeChargeReq& from);
  void MergeFrom(const ResumeChargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResumeChargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ResumeChargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResumeChargeAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ResumeChargeAns) */ {
 public:
  ResumeChargeAns();
  virtual ~ResumeChargeAns();

  ResumeChargeAns(const ResumeChargeAns& from);

  inline ResumeChargeAns& operator=(const ResumeChargeAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResumeChargeAns(ResumeChargeAns&& from) noexcept
    : ResumeChargeAns() {
    *this = ::std::move(from);
  }

  inline ResumeChargeAns& operator=(ResumeChargeAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResumeChargeAns& default_instance();

  static inline const ResumeChargeAns* internal_default_instance() {
    return reinterpret_cast<const ResumeChargeAns*>(
               &_ResumeChargeAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ResumeChargeAns* other);
  friend void swap(ResumeChargeAns& a, ResumeChargeAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResumeChargeAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ResumeChargeAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResumeChargeAns& from);
  void MergeFrom(const ResumeChargeAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResumeChargeAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 5;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ResumeChargeAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  int result_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillUploadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BillUploadReq) */ {
 public:
  BillUploadReq();
  virtual ~BillUploadReq();

  BillUploadReq(const BillUploadReq& from);

  inline BillUploadReq& operator=(const BillUploadReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillUploadReq(BillUploadReq&& from) noexcept
    : BillUploadReq() {
    *this = ::std::move(from);
  }

  inline BillUploadReq& operator=(BillUploadReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillUploadReq& default_instance();

  static inline const BillUploadReq* internal_default_instance() {
    return reinterpret_cast<const BillUploadReq*>(
               &_BillUploadReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(BillUploadReq* other);
  friend void swap(BillUploadReq& a, BillUploadReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillUploadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BillUploadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillUploadReq& from);
  void MergeFrom(const BillUploadReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillUploadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.BillInfo Bill = 2;
  bool has_bill() const;
  void clear_bill();
  static const int kBillFieldNumber = 2;
  const ::charge::protobuf::BillInfo& bill() const;
  ::charge::protobuf::BillInfo* mutable_bill();
  ::charge::protobuf::BillInfo* release_bill();
  void set_allocated_bill(::charge::protobuf::BillInfo* bill);

  // .charge.protobuf.DateTime SendTime = 3;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BillUploadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::BillInfo* bill_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillUploadAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BillUploadAns) */ {
 public:
  BillUploadAns();
  virtual ~BillUploadAns();

  BillUploadAns(const BillUploadAns& from);

  inline BillUploadAns& operator=(const BillUploadAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillUploadAns(BillUploadAns&& from) noexcept
    : BillUploadAns() {
    *this = ::std::move(from);
  }

  inline BillUploadAns& operator=(BillUploadAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillUploadAns& default_instance();

  static inline const BillUploadAns* internal_default_instance() {
    return reinterpret_cast<const BillUploadAns*>(
               &_BillUploadAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(BillUploadAns* other);
  friend void swap(BillUploadAns& a, BillUploadAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillUploadAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BillUploadAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillUploadAns& from);
  void MergeFrom(const BillUploadAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillUploadAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CtrlBillCode = 4;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 4;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Confirm = 3;
  void clear_confirm();
  static const int kConfirmFieldNumber = 3;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BillUploadAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargerStateChangeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargerStateChangeReq) */ {
 public:
  ChargerStateChangeReq();
  virtual ~ChargerStateChangeReq();

  ChargerStateChangeReq(const ChargerStateChangeReq& from);

  inline ChargerStateChangeReq& operator=(const ChargerStateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargerStateChangeReq(ChargerStateChangeReq&& from) noexcept
    : ChargerStateChangeReq() {
    *this = ::std::move(from);
  }

  inline ChargerStateChangeReq& operator=(ChargerStateChangeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargerStateChangeReq& default_instance();

  static inline const ChargerStateChangeReq* internal_default_instance() {
    return reinterpret_cast<const ChargerStateChangeReq*>(
               &_ChargerStateChangeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ChargerStateChangeReq* other);
  friend void swap(ChargerStateChangeReq& a, ChargerStateChangeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargerStateChangeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargerStateChangeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargerStateChangeReq& from);
  void MergeFrom(const ChargerStateChangeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargerStateChangeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.ChargerState State = 1;
  int state_size() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::charge::protobuf::ChargerState& state(int index) const;
  ::charge::protobuf::ChargerState* mutable_state(int index);
  ::charge::protobuf::ChargerState* add_state();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargerState >*
      mutable_state();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargerState >&
      state() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.SendReason Reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::charge::protobuf::SendReason reason() const;
  void set_reason(::charge::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargerStateChangeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargerState > state_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargerStateChangeAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargerStateChangeAns) */ {
 public:
  ChargerStateChangeAns();
  virtual ~ChargerStateChangeAns();

  ChargerStateChangeAns(const ChargerStateChangeAns& from);

  inline ChargerStateChangeAns& operator=(const ChargerStateChangeAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargerStateChangeAns(ChargerStateChangeAns&& from) noexcept
    : ChargerStateChangeAns() {
    *this = ::std::move(from);
  }

  inline ChargerStateChangeAns& operator=(ChargerStateChangeAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargerStateChangeAns& default_instance();

  static inline const ChargerStateChangeAns* internal_default_instance() {
    return reinterpret_cast<const ChargerStateChangeAns*>(
               &_ChargerStateChangeAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ChargerStateChangeAns* other);
  friend void swap(ChargerStateChangeAns& a, ChargerStateChangeAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargerStateChangeAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargerStateChangeAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargerStateChangeAns& from);
  void MergeFrom(const ChargerStateChangeAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargerStateChangeAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargerStateChangeAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargerStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargerStateReq) */ {
 public:
  ChargerStateReq();
  virtual ~ChargerStateReq();

  ChargerStateReq(const ChargerStateReq& from);

  inline ChargerStateReq& operator=(const ChargerStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargerStateReq(ChargerStateReq&& from) noexcept
    : ChargerStateReq() {
    *this = ::std::move(from);
  }

  inline ChargerStateReq& operator=(ChargerStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargerStateReq& default_instance();

  static inline const ChargerStateReq* internal_default_instance() {
    return reinterpret_cast<const ChargerStateReq*>(
               &_ChargerStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ChargerStateReq* other);
  friend void swap(ChargerStateReq& a, ChargerStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargerStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargerStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargerStateReq& from);
  void MergeFrom(const ChargerStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargerStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 CanIndex = 1;
  int canindex_size() const;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex(int index) const;
  void set_canindex(int index, ::google::protobuf::int32 value);
  void add_canindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargerStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canindex_;
  mutable int _canindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargerStateAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargerStateAns) */ {
 public:
  ChargerStateAns();
  virtual ~ChargerStateAns();

  ChargerStateAns(const ChargerStateAns& from);

  inline ChargerStateAns& operator=(const ChargerStateAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargerStateAns(ChargerStateAns&& from) noexcept
    : ChargerStateAns() {
    *this = ::std::move(from);
  }

  inline ChargerStateAns& operator=(ChargerStateAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargerStateAns& default_instance();

  static inline const ChargerStateAns* internal_default_instance() {
    return reinterpret_cast<const ChargerStateAns*>(
               &_ChargerStateAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ChargerStateAns* other);
  friend void swap(ChargerStateAns& a, ChargerStateAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargerStateAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargerStateAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargerStateAns& from);
  void MergeFrom(const ChargerStateAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargerStateAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargerStateAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountDetailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountDetailReq) */ {
 public:
  AccountDetailReq();
  virtual ~AccountDetailReq();

  AccountDetailReq(const AccountDetailReq& from);

  inline AccountDetailReq& operator=(const AccountDetailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountDetailReq(AccountDetailReq&& from) noexcept
    : AccountDetailReq() {
    *this = ::std::move(from);
  }

  inline AccountDetailReq& operator=(AccountDetailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountDetailReq& default_instance();

  static inline const AccountDetailReq* internal_default_instance() {
    return reinterpret_cast<const AccountDetailReq*>(
               &_AccountDetailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AccountDetailReq* other);
  friend void swap(AccountDetailReq& a, AccountDetailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountDetailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountDetailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountDetailReq& from);
  void MergeFrom(const AccountDetailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountDetailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountID = 3;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 3;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.AccountType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::charge::protobuf::AccountType type() const;
  void set_type(::charge::protobuf::AccountType value);

  // int32 CanIndex = 2;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 2;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountDetailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* sendtime_;
  int type_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountDetailAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountDetailAns) */ {
 public:
  AccountDetailAns();
  virtual ~AccountDetailAns();

  AccountDetailAns(const AccountDetailAns& from);

  inline AccountDetailAns& operator=(const AccountDetailAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountDetailAns(AccountDetailAns&& from) noexcept
    : AccountDetailAns() {
    *this = ::std::move(from);
  }

  inline AccountDetailAns& operator=(AccountDetailAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountDetailAns& default_instance();

  static inline const AccountDetailAns* internal_default_instance() {
    return reinterpret_cast<const AccountDetailAns*>(
               &_AccountDetailAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AccountDetailAns* other);
  friend void swap(AccountDetailAns& a, AccountDetailAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountDetailAns* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountDetailAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountDetailAns& from);
  void MergeFrom(const AccountDetailAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountDetailAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.AccountingStrategy Strategy = 8;
  int strategy_size() const;
  void clear_strategy();
  static const int kStrategyFieldNumber = 8;
  const ::charge::protobuf::AccountingStrategy& strategy(int index) const;
  ::charge::protobuf::AccountingStrategy* mutable_strategy(int index);
  ::charge::protobuf::AccountingStrategy* add_strategy();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >*
      mutable_strategy();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >&
      strategy() const;

  // string AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // double Money = 3;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  double money() const;
  void set_money(double value);

  // double SFee = 4;
  void clear_sfee();
  static const int kSFeeFieldNumber = 4;
  double sfee() const;
  void set_sfee(double value);

  // double PFee = 5;
  void clear_pfee();
  static const int kPFeeFieldNumber = 5;
  double pfee() const;
  void set_pfee(double value);

  // double BFee = 6;
  void clear_bfee();
  static const int kBFeeFieldNumber = 6;
  double bfee() const;
  void set_bfee(double value);

  // double Ious = 7;
  void clear_ious();
  static const int kIousFieldNumber = 7;
  double ious() const;
  void set_ious(double value);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountDetailAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy > strategy_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  double money_;
  double sfee_;
  double pfee_;
  double bfee_;
  double ious_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountSyncReq) */ {
 public:
  AccountSyncReq();
  virtual ~AccountSyncReq();

  AccountSyncReq(const AccountSyncReq& from);

  inline AccountSyncReq& operator=(const AccountSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountSyncReq(AccountSyncReq&& from) noexcept
    : AccountSyncReq() {
    *this = ::std::move(from);
  }

  inline AccountSyncReq& operator=(AccountSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountSyncReq& default_instance();

  static inline const AccountSyncReq* internal_default_instance() {
    return reinterpret_cast<const AccountSyncReq*>(
               &_AccountSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AccountSyncReq* other);
  friend void swap(AccountSyncReq& a, AccountSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountSyncReq& from);
  void MergeFrom(const AccountSyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SyncTime = 1;
  bool has_synctime() const;
  void clear_synctime();
  static const int kSyncTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& synctime() const;
  ::charge::protobuf::DateTime* mutable_synctime();
  ::charge::protobuf::DateTime* release_synctime();
  void set_allocated_synctime(::charge::protobuf::DateTime* synctime);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.SyncAccountType Type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::charge::protobuf::SyncAccountType type() const;
  void set_type(::charge::protobuf::SyncAccountType value);

  // int32 Size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* synctime_;
  ::charge::protobuf::DateTime* sendtime_;
  int type_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountSyncAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountSyncAns) */ {
 public:
  AccountSyncAns();
  virtual ~AccountSyncAns();

  AccountSyncAns(const AccountSyncAns& from);

  inline AccountSyncAns& operator=(const AccountSyncAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountSyncAns(AccountSyncAns&& from) noexcept
    : AccountSyncAns() {
    *this = ::std::move(from);
  }

  inline AccountSyncAns& operator=(AccountSyncAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountSyncAns& default_instance();

  static inline const AccountSyncAns* internal_default_instance() {
    return reinterpret_cast<const AccountSyncAns*>(
               &_AccountSyncAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AccountSyncAns* other);
  friend void swap(AccountSyncAns& a, AccountSyncAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountSyncAns* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountSyncAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountSyncAns& from);
  void MergeFrom(const AccountSyncAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountSyncAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.CardInfo Card = 3;
  int card_size() const;
  void clear_card();
  static const int kCardFieldNumber = 3;
  const ::charge::protobuf::CardInfo& card(int index) const;
  ::charge::protobuf::CardInfo* mutable_card(int index);
  ::charge::protobuf::CardInfo* add_card();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CardInfo >*
      mutable_card();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CardInfo >&
      card() const;

  // repeated .charge.protobuf.CarInfo Car = 4;
  int car_size() const;
  void clear_car();
  static const int kCarFieldNumber = 4;
  const ::charge::protobuf::CarInfo& car(int index) const;
  ::charge::protobuf::CarInfo* mutable_car(int index);
  ::charge::protobuf::CarInfo* add_car();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CarInfo >*
      mutable_car();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CarInfo >&
      car() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SyncTime = 1;
  bool has_synctime() const;
  void clear_synctime();
  static const int kSyncTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& synctime() const;
  ::charge::protobuf::DateTime* mutable_synctime();
  ::charge::protobuf::DateTime* release_synctime();
  void set_allocated_synctime(::charge::protobuf::DateTime* synctime);

  // .charge.protobuf.SyncAccountType Type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::charge::protobuf::SyncAccountType type() const;
  void set_type(::charge::protobuf::SyncAccountType value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountSyncAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CardInfo > card_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CarInfo > car_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* synctime_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PowerCruveCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.PowerCruveCmdReq) */ {
 public:
  PowerCruveCmdReq();
  virtual ~PowerCruveCmdReq();

  PowerCruveCmdReq(const PowerCruveCmdReq& from);

  inline PowerCruveCmdReq& operator=(const PowerCruveCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PowerCruveCmdReq(PowerCruveCmdReq&& from) noexcept
    : PowerCruveCmdReq() {
    *this = ::std::move(from);
  }

  inline PowerCruveCmdReq& operator=(PowerCruveCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerCruveCmdReq& default_instance();

  static inline const PowerCruveCmdReq* internal_default_instance() {
    return reinterpret_cast<const PowerCruveCmdReq*>(
               &_PowerCruveCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(PowerCruveCmdReq* other);
  friend void swap(PowerCruveCmdReq& a, PowerCruveCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PowerCruveCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PowerCruveCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PowerCruveCmdReq& from);
  void MergeFrom(const PowerCruveCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PowerCruveCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.ChargingStrategy Strategy = 4;
  int strategy_size() const;
  void clear_strategy();
  static const int kStrategyFieldNumber = 4;
  const ::charge::protobuf::ChargingStrategy& strategy(int index) const;
  ::charge::protobuf::ChargingStrategy* mutable_strategy(int index);
  ::charge::protobuf::ChargingStrategy* add_strategy();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >*
      mutable_strategy();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >&
      strategy() const;

  // string Code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.CruveType CType = 3;
  void clear_ctype();
  static const int kCTypeFieldNumber = 3;
  ::charge::protobuf::CruveType ctype() const;
  void set_ctype(::charge::protobuf::CruveType value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.PowerCruveCmdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy > strategy_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  int ctype_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PowerCruveCmdAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.PowerCruveCmdAns) */ {
 public:
  PowerCruveCmdAns();
  virtual ~PowerCruveCmdAns();

  PowerCruveCmdAns(const PowerCruveCmdAns& from);

  inline PowerCruveCmdAns& operator=(const PowerCruveCmdAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PowerCruveCmdAns(PowerCruveCmdAns&& from) noexcept
    : PowerCruveCmdAns() {
    *this = ::std::move(from);
  }

  inline PowerCruveCmdAns& operator=(PowerCruveCmdAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerCruveCmdAns& default_instance();

  static inline const PowerCruveCmdAns* internal_default_instance() {
    return reinterpret_cast<const PowerCruveCmdAns*>(
               &_PowerCruveCmdAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(PowerCruveCmdAns* other);
  friend void swap(PowerCruveCmdAns& a, PowerCruveCmdAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PowerCruveCmdAns* New() const PROTOBUF_FINAL { return New(NULL); }

  PowerCruveCmdAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PowerCruveCmdAns& from);
  void MergeFrom(const PowerCruveCmdAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PowerCruveCmdAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.PowerCruveCmdAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsParamNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsParamNotifyReq) */ {
 public:
  BmsParamNotifyReq();
  virtual ~BmsParamNotifyReq();

  BmsParamNotifyReq(const BmsParamNotifyReq& from);

  inline BmsParamNotifyReq& operator=(const BmsParamNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsParamNotifyReq(BmsParamNotifyReq&& from) noexcept
    : BmsParamNotifyReq() {
    *this = ::std::move(from);
  }

  inline BmsParamNotifyReq& operator=(BmsParamNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsParamNotifyReq& default_instance();

  static inline const BmsParamNotifyReq* internal_default_instance() {
    return reinterpret_cast<const BmsParamNotifyReq*>(
               &_BmsParamNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(BmsParamNotifyReq* other);
  friend void swap(BmsParamNotifyReq& a, BmsParamNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsParamNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsParamNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsParamNotifyReq& from);
  void MergeFrom(const BmsParamNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsParamNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Vin = 2;
  void clear_vin();
  static const int kVinFieldNumber = 2;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.BmsShakehands ShakehandsInfo = 5;
  bool has_shakehandsinfo() const;
  void clear_shakehandsinfo();
  static const int kShakehandsInfoFieldNumber = 5;
  const ::charge::protobuf::BmsShakehands& shakehandsinfo() const;
  ::charge::protobuf::BmsShakehands* mutable_shakehandsinfo();
  ::charge::protobuf::BmsShakehands* release_shakehandsinfo();
  void set_allocated_shakehandsinfo(::charge::protobuf::BmsShakehands* shakehandsinfo);

  // .charge.protobuf.BmsConfig ConfigInfo = 6;
  bool has_configinfo() const;
  void clear_configinfo();
  static const int kConfigInfoFieldNumber = 6;
  const ::charge::protobuf::BmsConfig& configinfo() const;
  ::charge::protobuf::BmsConfig* mutable_configinfo();
  ::charge::protobuf::BmsConfig* release_configinfo();
  void set_allocated_configinfo(::charge::protobuf::BmsConfig* configinfo);

  // .charge.protobuf.BmsChargeFinish ChargeFinishInfo = 7;
  bool has_chargefinishinfo() const;
  void clear_chargefinishinfo();
  static const int kChargeFinishInfoFieldNumber = 7;
  const ::charge::protobuf::BmsChargeFinish& chargefinishinfo() const;
  ::charge::protobuf::BmsChargeFinish* mutable_chargefinishinfo();
  ::charge::protobuf::BmsChargeFinish* release_chargefinishinfo();
  void set_allocated_chargefinishinfo(::charge::protobuf::BmsChargeFinish* chargefinishinfo);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.SendReason Reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::charge::protobuf::SendReason reason() const;
  void set_reason(::charge::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsParamNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::charge::protobuf::BmsShakehands* shakehandsinfo_;
  ::charge::protobuf::BmsConfig* configinfo_;
  ::charge::protobuf::BmsChargeFinish* chargefinishinfo_;
  ::google::protobuf::int32 canindex_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsParamNotifyAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsParamNotifyAns) */ {
 public:
  BmsParamNotifyAns();
  virtual ~BmsParamNotifyAns();

  BmsParamNotifyAns(const BmsParamNotifyAns& from);

  inline BmsParamNotifyAns& operator=(const BmsParamNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsParamNotifyAns(BmsParamNotifyAns&& from) noexcept
    : BmsParamNotifyAns() {
    *this = ::std::move(from);
  }

  inline BmsParamNotifyAns& operator=(BmsParamNotifyAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsParamNotifyAns& default_instance();

  static inline const BmsParamNotifyAns* internal_default_instance() {
    return reinterpret_cast<const BmsParamNotifyAns*>(
               &_BmsParamNotifyAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(BmsParamNotifyAns* other);
  friend void swap(BmsParamNotifyAns& a, BmsParamNotifyAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsParamNotifyAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsParamNotifyAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsParamNotifyAns& from);
  void MergeFrom(const BmsParamNotifyAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsParamNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsParamNotifyAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelemetryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TelemetryReq) */ {
 public:
  TelemetryReq();
  virtual ~TelemetryReq();

  TelemetryReq(const TelemetryReq& from);

  inline TelemetryReq& operator=(const TelemetryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelemetryReq(TelemetryReq&& from) noexcept
    : TelemetryReq() {
    *this = ::std::move(from);
  }

  inline TelemetryReq& operator=(TelemetryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelemetryReq& default_instance();

  static inline const TelemetryReq* internal_default_instance() {
    return reinterpret_cast<const TelemetryReq*>(
               &_TelemetryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(TelemetryReq* other);
  friend void swap(TelemetryReq& a, TelemetryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelemetryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TelemetryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelemetryReq& from);
  void MergeFrom(const TelemetryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelemetryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 CanIndex = 1;
  int canindex_size() const;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex(int index) const;
  void set_canindex(int index, ::google::protobuf::int32 value);
  void add_canindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.TelemetryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canindex_;
  mutable int _canindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelemetryAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TelemetryAns) */ {
 public:
  TelemetryAns();
  virtual ~TelemetryAns();

  TelemetryAns(const TelemetryAns& from);

  inline TelemetryAns& operator=(const TelemetryAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelemetryAns(TelemetryAns&& from) noexcept
    : TelemetryAns() {
    *this = ::std::move(from);
  }

  inline TelemetryAns& operator=(TelemetryAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelemetryAns& default_instance();

  static inline const TelemetryAns* internal_default_instance() {
    return reinterpret_cast<const TelemetryAns*>(
               &_TelemetryAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(TelemetryAns* other);
  friend void swap(TelemetryAns& a, TelemetryAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelemetryAns* New() const PROTOBUF_FINAL { return New(NULL); }

  TelemetryAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelemetryAns& from);
  void MergeFrom(const TelemetryAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelemetryAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.TelemetryAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StateReq) */ {
 public:
  StateReq();
  virtual ~StateReq();

  StateReq(const StateReq& from);

  inline StateReq& operator=(const StateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateReq(StateReq&& from) noexcept
    : StateReq() {
    *this = ::std::move(from);
  }

  inline StateReq& operator=(StateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateReq& default_instance();

  static inline const StateReq* internal_default_instance() {
    return reinterpret_cast<const StateReq*>(
               &_StateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(StateReq* other);
  friend void swap(StateReq& a, StateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateReq& from);
  void MergeFrom(const StateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 CanIndex = 1;
  int canindex_size() const;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex(int index) const;
  void set_canindex(int index, ::google::protobuf::int32 value);
  void add_canindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canindex_;
  mutable int _canindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StateAns) */ {
 public:
  StateAns();
  virtual ~StateAns();

  StateAns(const StateAns& from);

  inline StateAns& operator=(const StateAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateAns(StateAns&& from) noexcept
    : StateAns() {
    *this = ::std::move(from);
  }

  inline StateAns& operator=(StateAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateAns& default_instance();

  static inline const StateAns* internal_default_instance() {
    return reinterpret_cast<const StateAns*>(
               &_StateAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(StateAns* other);
  friend void swap(StateAns& a, StateAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StateAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateAns& from);
  void MergeFrom(const StateAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StateAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsReq) */ {
 public:
  BmsReq();
  virtual ~BmsReq();

  BmsReq(const BmsReq& from);

  inline BmsReq& operator=(const BmsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsReq(BmsReq&& from) noexcept
    : BmsReq() {
    *this = ::std::move(from);
  }

  inline BmsReq& operator=(BmsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsReq& default_instance();

  static inline const BmsReq* internal_default_instance() {
    return reinterpret_cast<const BmsReq*>(
               &_BmsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(BmsReq* other);
  friend void swap(BmsReq& a, BmsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsReq& from);
  void MergeFrom(const BmsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 CanIndex = 1;
  int canindex_size() const;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex(int index) const;
  void set_canindex(int index, ::google::protobuf::int32 value);
  void add_canindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canindex_;
  mutable int _canindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsAns) */ {
 public:
  BmsAns();
  virtual ~BmsAns();

  BmsAns(const BmsAns& from);

  inline BmsAns& operator=(const BmsAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsAns(BmsAns&& from) noexcept
    : BmsAns() {
    *this = ::std::move(from);
  }

  inline BmsAns& operator=(BmsAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsAns& default_instance();

  static inline const BmsAns* internal_default_instance() {
    return reinterpret_cast<const BmsAns*>(
               &_BmsAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(BmsAns* other);
  friend void swap(BmsAns& a, BmsAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsAns& from);
  void MergeFrom(const BmsAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelemetryNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TelemetryNotifyReq) */ {
 public:
  TelemetryNotifyReq();
  virtual ~TelemetryNotifyReq();

  TelemetryNotifyReq(const TelemetryNotifyReq& from);

  inline TelemetryNotifyReq& operator=(const TelemetryNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelemetryNotifyReq(TelemetryNotifyReq&& from) noexcept
    : TelemetryNotifyReq() {
    *this = ::std::move(from);
  }

  inline TelemetryNotifyReq& operator=(TelemetryNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelemetryNotifyReq& default_instance();

  static inline const TelemetryNotifyReq* internal_default_instance() {
    return reinterpret_cast<const TelemetryNotifyReq*>(
               &_TelemetryNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(TelemetryNotifyReq* other);
  friend void swap(TelemetryNotifyReq& a, TelemetryNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelemetryNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TelemetryNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelemetryNotifyReq& from);
  void MergeFrom(const TelemetryNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelemetryNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.MeasureType Type = 5;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::charge::protobuf::MeasureType type(int index) const;
  void set_type(int index, ::charge::protobuf::MeasureType value);
  void add_type(::charge::protobuf::MeasureType value);
  const ::google::protobuf::RepeatedField<int>& type() const;
  ::google::protobuf::RepeatedField<int>* mutable_type();

  // repeated double Value = 6;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 6;
  double value(int index) const;
  void set_value(int index, double value);
  void add_value(double value);
  const ::google::protobuf::RepeatedField< double >&
      value() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_value();

  // string BillCode = 7;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 7;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CtrlBillCode = 8;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 8;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // int32 DeviceType = 2;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 2;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // .charge.protobuf.SendReason Reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::charge::protobuf::SendReason reason() const;
  void set_reason(::charge::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.TelemetryNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> type_;
  mutable int _type_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > value_;
  mutable int _value_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  ::google::protobuf::int32 devicetype_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelemetryNotifyAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TelemetryNotifyAns) */ {
 public:
  TelemetryNotifyAns();
  virtual ~TelemetryNotifyAns();

  TelemetryNotifyAns(const TelemetryNotifyAns& from);

  inline TelemetryNotifyAns& operator=(const TelemetryNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelemetryNotifyAns(TelemetryNotifyAns&& from) noexcept
    : TelemetryNotifyAns() {
    *this = ::std::move(from);
  }

  inline TelemetryNotifyAns& operator=(TelemetryNotifyAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelemetryNotifyAns& default_instance();

  static inline const TelemetryNotifyAns* internal_default_instance() {
    return reinterpret_cast<const TelemetryNotifyAns*>(
               &_TelemetryNotifyAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(TelemetryNotifyAns* other);
  friend void swap(TelemetryNotifyAns& a, TelemetryNotifyAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelemetryNotifyAns* New() const PROTOBUF_FINAL { return New(NULL); }

  TelemetryNotifyAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelemetryNotifyAns& from);
  void MergeFrom(const TelemetryNotifyAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelemetryNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.BoolEnum Confirm = 1;
  int confirm_size() const;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm(int index) const;
  void set_confirm(int index, ::charge::protobuf::BoolEnum value);
  void add_confirm(::charge::protobuf::BoolEnum value);
  const ::google::protobuf::RepeatedField<int>& confirm() const;
  ::google::protobuf::RepeatedField<int>* mutable_confirm();

  // @@protoc_insertion_point(class_scope:charge.protobuf.TelemetryNotifyAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> confirm_;
  mutable int _confirm_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StateNotifyReq) */ {
 public:
  StateNotifyReq();
  virtual ~StateNotifyReq();

  StateNotifyReq(const StateNotifyReq& from);

  inline StateNotifyReq& operator=(const StateNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateNotifyReq(StateNotifyReq&& from) noexcept
    : StateNotifyReq() {
    *this = ::std::move(from);
  }

  inline StateNotifyReq& operator=(StateNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateNotifyReq& default_instance();

  static inline const StateNotifyReq* internal_default_instance() {
    return reinterpret_cast<const StateNotifyReq*>(
               &_StateNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(StateNotifyReq* other);
  friend void swap(StateNotifyReq& a, StateNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StateNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateNotifyReq& from);
  void MergeFrom(const StateNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.StateType Type = 5;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::charge::protobuf::StateType type(int index) const;
  void set_type(int index, ::charge::protobuf::StateType value);
  void add_type(::charge::protobuf::StateType value);
  const ::google::protobuf::RepeatedField<int>& type() const;
  ::google::protobuf::RepeatedField<int>* mutable_type();

  // repeated int32 Value = 6;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::int32 value(int index) const;
  void set_value(int index, ::google::protobuf::int32 value);
  void add_value(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value();

  // string BillCode = 7;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 7;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CtrlBillCode = 8;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 8;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // int32 DeviceType = 2;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 2;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // .charge.protobuf.SendReason Reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::charge::protobuf::SendReason reason() const;
  void set_reason(::charge::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.StateNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> type_;
  mutable int _type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_;
  mutable int _value_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 canindex_;
  ::google::protobuf::int32 devicetype_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateNotifyAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.StateNotifyAns) */ {
 public:
  StateNotifyAns();
  virtual ~StateNotifyAns();

  StateNotifyAns(const StateNotifyAns& from);

  inline StateNotifyAns& operator=(const StateNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateNotifyAns(StateNotifyAns&& from) noexcept
    : StateNotifyAns() {
    *this = ::std::move(from);
  }

  inline StateNotifyAns& operator=(StateNotifyAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateNotifyAns& default_instance();

  static inline const StateNotifyAns* internal_default_instance() {
    return reinterpret_cast<const StateNotifyAns*>(
               &_StateNotifyAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(StateNotifyAns* other);
  friend void swap(StateNotifyAns& a, StateNotifyAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateNotifyAns* New() const PROTOBUF_FINAL { return New(NULL); }

  StateNotifyAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateNotifyAns& from);
  void MergeFrom(const StateNotifyAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.BoolEnum Confirm = 1;
  int confirm_size() const;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm(int index) const;
  void set_confirm(int index, ::charge::protobuf::BoolEnum value);
  void add_confirm(::charge::protobuf::BoolEnum value);
  const ::google::protobuf::RepeatedField<int>& confirm() const;
  ::google::protobuf::RepeatedField<int>* mutable_confirm();

  // @@protoc_insertion_point(class_scope:charge.protobuf.StateNotifyAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> confirm_;
  mutable int _confirm_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsNotifyReq) */ {
 public:
  BmsNotifyReq();
  virtual ~BmsNotifyReq();

  BmsNotifyReq(const BmsNotifyReq& from);

  inline BmsNotifyReq& operator=(const BmsNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsNotifyReq(BmsNotifyReq&& from) noexcept
    : BmsNotifyReq() {
    *this = ::std::move(from);
  }

  inline BmsNotifyReq& operator=(BmsNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsNotifyReq& default_instance();

  static inline const BmsNotifyReq* internal_default_instance() {
    return reinterpret_cast<const BmsNotifyReq*>(
               &_BmsNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(BmsNotifyReq* other);
  friend void swap(BmsNotifyReq& a, BmsNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsNotifyReq& from);
  void MergeFrom(const BmsNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Vin = 2;
  void clear_vin();
  static const int kVinFieldNumber = 2;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string BillCode = 6;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 6;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CtrlBillCode = 7;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 7;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 4;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.BmsCharging ChargingInfo = 5;
  bool has_charginginfo() const;
  void clear_charginginfo();
  static const int kChargingInfoFieldNumber = 5;
  const ::charge::protobuf::BmsCharging& charginginfo() const;
  ::charge::protobuf::BmsCharging* mutable_charginginfo();
  ::charge::protobuf::BmsCharging* release_charginginfo();
  void set_allocated_charginginfo(::charge::protobuf::BmsCharging* charginginfo);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.SendReason Reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::charge::protobuf::SendReason reason() const;
  void set_reason(::charge::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::charge::protobuf::BmsCharging* charginginfo_;
  ::google::protobuf::int32 canindex_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsNotifyAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsNotifyAns) */ {
 public:
  BmsNotifyAns();
  virtual ~BmsNotifyAns();

  BmsNotifyAns(const BmsNotifyAns& from);

  inline BmsNotifyAns& operator=(const BmsNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsNotifyAns(BmsNotifyAns&& from) noexcept
    : BmsNotifyAns() {
    *this = ::std::move(from);
  }

  inline BmsNotifyAns& operator=(BmsNotifyAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsNotifyAns& default_instance();

  static inline const BmsNotifyAns* internal_default_instance() {
    return reinterpret_cast<const BmsNotifyAns*>(
               &_BmsNotifyAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(BmsNotifyAns* other);
  friend void swap(BmsNotifyAns& a, BmsNotifyAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsNotifyAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsNotifyAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsNotifyAns& from);
  void MergeFrom(const BmsNotifyAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.BoolEnum Confirm = 1;
  int confirm_size() const;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm(int index) const;
  void set_confirm(int index, ::charge::protobuf::BoolEnum value);
  void add_confirm(::charge::protobuf::BoolEnum value);
  const ::google::protobuf::RepeatedField<int>& confirm() const;
  ::google::protobuf::RepeatedField<int>* mutable_confirm();

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsNotifyAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> confirm_;
  mutable int _confirm_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillsNotConfirmedReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BillsNotConfirmedReq) */ {
 public:
  BillsNotConfirmedReq();
  virtual ~BillsNotConfirmedReq();

  BillsNotConfirmedReq(const BillsNotConfirmedReq& from);

  inline BillsNotConfirmedReq& operator=(const BillsNotConfirmedReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillsNotConfirmedReq(BillsNotConfirmedReq&& from) noexcept
    : BillsNotConfirmedReq() {
    *this = ::std::move(from);
  }

  inline BillsNotConfirmedReq& operator=(BillsNotConfirmedReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillsNotConfirmedReq& default_instance();

  static inline const BillsNotConfirmedReq* internal_default_instance() {
    return reinterpret_cast<const BillsNotConfirmedReq*>(
               &_BillsNotConfirmedReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(BillsNotConfirmedReq* other);
  friend void swap(BillsNotConfirmedReq& a, BillsNotConfirmedReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillsNotConfirmedReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BillsNotConfirmedReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillsNotConfirmedReq& from);
  void MergeFrom(const BillsNotConfirmedReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillsNotConfirmedReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BillsNotConfirmedReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillsNotConfirmedAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BillsNotConfirmedAns) */ {
 public:
  BillsNotConfirmedAns();
  virtual ~BillsNotConfirmedAns();

  BillsNotConfirmedAns(const BillsNotConfirmedAns& from);

  inline BillsNotConfirmedAns& operator=(const BillsNotConfirmedAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillsNotConfirmedAns(BillsNotConfirmedAns&& from) noexcept
    : BillsNotConfirmedAns() {
    *this = ::std::move(from);
  }

  inline BillsNotConfirmedAns& operator=(BillsNotConfirmedAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillsNotConfirmedAns& default_instance();

  static inline const BillsNotConfirmedAns* internal_default_instance() {
    return reinterpret_cast<const BillsNotConfirmedAns*>(
               &_BillsNotConfirmedAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(BillsNotConfirmedAns* other);
  friend void swap(BillsNotConfirmedAns& a, BillsNotConfirmedAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillsNotConfirmedAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BillsNotConfirmedAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillsNotConfirmedAns& from);
  void MergeFrom(const BillsNotConfirmedAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillsNotConfirmedAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.BoolEnum Finished = 1;
  void clear_finished();
  static const int kFinishedFieldNumber = 1;
  ::charge::protobuf::BoolEnum finished() const;
  void set_finished(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BillsNotConfirmedAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* sendtime_;
  int finished_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpecificBillReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.SpecificBillReq) */ {
 public:
  SpecificBillReq();
  virtual ~SpecificBillReq();

  SpecificBillReq(const SpecificBillReq& from);

  inline SpecificBillReq& operator=(const SpecificBillReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecificBillReq(SpecificBillReq&& from) noexcept
    : SpecificBillReq() {
    *this = ::std::move(from);
  }

  inline SpecificBillReq& operator=(SpecificBillReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecificBillReq& default_instance();

  static inline const SpecificBillReq* internal_default_instance() {
    return reinterpret_cast<const SpecificBillReq*>(
               &_SpecificBillReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SpecificBillReq* other);
  friend void swap(SpecificBillReq& a, SpecificBillReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecificBillReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SpecificBillReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpecificBillReq& from);
  void MergeFrom(const SpecificBillReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpecificBillReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 2;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 2;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.SpecificBillReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpecificBillAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.SpecificBillAns) */ {
 public:
  SpecificBillAns();
  virtual ~SpecificBillAns();

  SpecificBillAns(const SpecificBillAns& from);

  inline SpecificBillAns& operator=(const SpecificBillAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecificBillAns(SpecificBillAns&& from) noexcept
    : SpecificBillAns() {
    *this = ::std::move(from);
  }

  inline SpecificBillAns& operator=(SpecificBillAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecificBillAns& default_instance();

  static inline const SpecificBillAns* internal_default_instance() {
    return reinterpret_cast<const SpecificBillAns*>(
               &_SpecificBillAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SpecificBillAns* other);
  friend void swap(SpecificBillAns& a, SpecificBillAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecificBillAns* New() const PROTOBUF_FINAL { return New(NULL); }

  SpecificBillAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpecificBillAns& from);
  void MergeFrom(const SpecificBillAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpecificBillAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime SendTime = 3;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.BoolEnum Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::charge::protobuf::BoolEnum result() const;
  void set_result(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum Confirmed = 2;
  void clear_confirmed();
  static const int kConfirmedFieldNumber = 2;
  ::charge::protobuf::BoolEnum confirmed() const;
  void set_confirmed(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.FailReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::charge::protobuf::FailReason reason() const;
  void set_reason(::charge::protobuf::FailReason value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.SpecificBillAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* sendtime_;
  int result_;
  int confirmed_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ErrorAns) */ {
 public:
  ErrorAns();
  virtual ~ErrorAns();

  ErrorAns(const ErrorAns& from);

  inline ErrorAns& operator=(const ErrorAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorAns(ErrorAns&& from) noexcept
    : ErrorAns() {
    *this = ::std::move(from);
  }

  inline ErrorAns& operator=(ErrorAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorAns& default_instance();

  static inline const ErrorAns* internal_default_instance() {
    return reinterpret_cast<const ErrorAns*>(
               &_ErrorAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(ErrorAns* other);
  friend void swap(ErrorAns& a, ErrorAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorAns& from);
  void MergeFrom(const ErrorAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.ErrorCode Error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::charge::protobuf::ErrorCode error() const;
  void set_error(::charge::protobuf::ErrorCode value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ErrorAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int error_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountInfo) */ {
 public:
  AccountInfo();
  virtual ~AccountInfo();

  AccountInfo(const AccountInfo& from);

  inline AccountInfo& operator=(const AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountInfo(AccountInfo&& from) noexcept
    : AccountInfo() {
    *this = ::std::move(from);
  }

  inline AccountInfo& operator=(AccountInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountInfo& default_instance();

  static inline const AccountInfo* internal_default_instance() {
    return reinterpret_cast<const AccountInfo*>(
               &_AccountInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(AccountInfo* other);
  friend void swap(AccountInfo& a, AccountInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountInfo& from);
  void MergeFrom(const AccountInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // double Money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  double money() const;
  void set_money(double value);

  // double SFee = 3;
  void clear_sfee();
  static const int kSFeeFieldNumber = 3;
  double sfee() const;
  void set_sfee(double value);

  // double BFee = 4;
  void clear_bfee();
  static const int kBFeeFieldNumber = 4;
  double bfee() const;
  void set_bfee(double value);

  // double PFee = 5;
  void clear_pfee();
  static const int kPFeeFieldNumber = 5;
  double pfee() const;
  void set_pfee(double value);

  // double Ious = 6;
  void clear_ious();
  static const int kIousFieldNumber = 6;
  double ious() const;
  void set_ious(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  double money_;
  double sfee_;
  double bfee_;
  double pfee_;
  double ious_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountingStrategy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.AccountingStrategy) */ {
 public:
  AccountingStrategy();
  virtual ~AccountingStrategy();

  AccountingStrategy(const AccountingStrategy& from);

  inline AccountingStrategy& operator=(const AccountingStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountingStrategy(AccountingStrategy&& from) noexcept
    : AccountingStrategy() {
    *this = ::std::move(from);
  }

  inline AccountingStrategy& operator=(AccountingStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountingStrategy& default_instance();

  static inline const AccountingStrategy* internal_default_instance() {
    return reinterpret_cast<const AccountingStrategy*>(
               &_AccountingStrategy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(AccountingStrategy* other);
  friend void swap(AccountingStrategy& a, AccountingStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountingStrategy* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountingStrategy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountingStrategy& from);
  void MergeFrom(const AccountingStrategy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountingStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime BeginTime = 1;
  bool has_begintime() const;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& begintime() const;
  ::charge::protobuf::DateTime* mutable_begintime();
  ::charge::protobuf::DateTime* release_begintime();
  void set_allocated_begintime(::charge::protobuf::DateTime* begintime);

  // .charge.protobuf.DateTime EndTime = 2;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& endtime() const;
  ::charge::protobuf::DateTime* mutable_endtime();
  ::charge::protobuf::DateTime* release_endtime();
  void set_allocated_endtime(::charge::protobuf::DateTime* endtime);

  // double kWhPrice = 3;
  void clear_kwhprice();
  static const int kKWhPriceFieldNumber = 3;
  double kwhprice() const;
  void set_kwhprice(double value);

  // double ServicePrice = 4;
  void clear_serviceprice();
  static const int kServicePriceFieldNumber = 4;
  double serviceprice() const;
  void set_serviceprice(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.AccountingStrategy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* begintime_;
  ::charge::protobuf::DateTime* endtime_;
  double kwhprice_;
  double serviceprice_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BillInfo) */ {
 public:
  BillInfo();
  virtual ~BillInfo();

  BillInfo(const BillInfo& from);

  inline BillInfo& operator=(const BillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillInfo(BillInfo&& from) noexcept
    : BillInfo() {
    *this = ::std::move(from);
  }

  inline BillInfo& operator=(BillInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillInfo& default_instance();

  static inline const BillInfo* internal_default_instance() {
    return reinterpret_cast<const BillInfo*>(
               &_BillInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(BillInfo* other);
  friend void swap(BillInfo& a, BillInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillInfo& from);
  void MergeFrom(const BillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.ChargeFrozen ChargeFrozen = 16;
  int chargefrozen_size() const;
  void clear_chargefrozen();
  static const int kChargeFrozenFieldNumber = 16;
  const ::charge::protobuf::ChargeFrozen& chargefrozen(int index) const;
  ::charge::protobuf::ChargeFrozen* mutable_chargefrozen(int index);
  ::charge::protobuf::ChargeFrozen* add_chargefrozen();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargeFrozen >*
      mutable_chargefrozen();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargeFrozen >&
      chargefrozen() const;

  // repeated .charge.protobuf.DischargeFrozen DischargeFrozen = 17;
  int dischargefrozen_size() const;
  void clear_dischargefrozen();
  static const int kDischargeFrozenFieldNumber = 17;
  const ::charge::protobuf::DischargeFrozen& dischargefrozen(int index) const;
  ::charge::protobuf::DischargeFrozen* mutable_dischargefrozen(int index);
  ::charge::protobuf::DischargeFrozen* add_dischargefrozen();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::DischargeFrozen >*
      mutable_dischargefrozen();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::DischargeFrozen >&
      dischargefrozen() const;

  // string BillCode = 1;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 1;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CardNo = 13;
  void clear_cardno();
  static const int kCardNoFieldNumber = 13;
  const ::std::string& cardno() const;
  void set_cardno(const ::std::string& value);
  #if LANG_CXX11
  void set_cardno(::std::string&& value);
  #endif
  void set_cardno(const char* value);
  void set_cardno(const char* value, size_t size);
  ::std::string* mutable_cardno();
  ::std::string* release_cardno();
  void set_allocated_cardno(::std::string* cardno);

  // string VIN = 14;
  void clear_vin();
  static const int kVINFieldNumber = 14;
  const ::std::string& vin() const;
  void set_vin(const ::std::string& value);
  #if LANG_CXX11
  void set_vin(::std::string&& value);
  #endif
  void set_vin(const char* value);
  void set_vin(const char* value, size_t size);
  ::std::string* mutable_vin();
  ::std::string* release_vin();
  void set_allocated_vin(::std::string* vin);

  // string Plate = 15;
  void clear_plate();
  static const int kPlateFieldNumber = 15;
  const ::std::string& plate() const;
  void set_plate(const ::std::string& value);
  #if LANG_CXX11
  void set_plate(::std::string&& value);
  #endif
  void set_plate(const char* value);
  void set_plate(const char* value, size_t size);
  ::std::string* mutable_plate();
  ::std::string* release_plate();
  void set_allocated_plate(::std::string* plate);

  // string CtrlBillCode = 20;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 20;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime BeginTime = 5;
  bool has_begintime() const;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 5;
  const ::charge::protobuf::DateTime& begintime() const;
  ::charge::protobuf::DateTime* mutable_begintime();
  ::charge::protobuf::DateTime* release_begintime();
  void set_allocated_begintime(::charge::protobuf::DateTime* begintime);

  // .charge.protobuf.DateTime EndTime = 6;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 6;
  const ::charge::protobuf::DateTime& endtime() const;
  ::charge::protobuf::DateTime* mutable_endtime();
  ::charge::protobuf::DateTime* release_endtime();
  void set_allocated_endtime(::charge::protobuf::DateTime* endtime);

  // .charge.protobuf.BillStatus Status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::charge::protobuf::BillStatus status() const;
  void set_status(::charge::protobuf::BillStatus value);

  // int32 BillType = 3;
  void clear_billtype();
  static const int kBillTypeFieldNumber = 3;
  ::google::protobuf::int32 billtype() const;
  void set_billtype(::google::protobuf::int32 value);

  // int32 Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // int32 BeginSoc = 9;
  void clear_beginsoc();
  static const int kBeginSocFieldNumber = 9;
  ::google::protobuf::int32 beginsoc() const;
  void set_beginsoc(::google::protobuf::int32 value);

  // double BeginMeter = 7;
  void clear_beginmeter();
  static const int kBeginMeterFieldNumber = 7;
  double beginmeter() const;
  void set_beginmeter(double value);

  // double EndMeter = 8;
  void clear_endmeter();
  static const int kEndMeterFieldNumber = 8;
  double endmeter() const;
  void set_endmeter(double value);

  // int32 EndSoc = 10;
  void clear_endsoc();
  static const int kEndSocFieldNumber = 10;
  ::google::protobuf::int32 endsoc() const;
  void set_endsoc(::google::protobuf::int32 value);

  // .charge.protobuf.StartChargeType ChargeType = 11;
  void clear_chargetype();
  static const int kChargeTypeFieldNumber = 11;
  ::charge::protobuf::StartChargeType chargetype() const;
  void set_chargetype(::charge::protobuf::StartChargeType value);

  // .charge.protobuf.StartChargeWay ChargeWay = 12;
  void clear_chargeway();
  static const int kChargeWayFieldNumber = 12;
  ::charge::protobuf::StartChargeWay chargeway() const;
  void set_chargeway(::charge::protobuf::StartChargeWay value);

  // int32 QueueNumber = 18;
  void clear_queuenumber();
  static const int kQueueNumberFieldNumber = 18;
  ::google::protobuf::int32 queuenumber() const;
  void set_queuenumber(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Emergency = 19;
  void clear_emergency();
  static const int kEmergencyFieldNumber = 19;
  ::charge::protobuf::BoolEnum emergency() const;
  void set_emergency(::charge::protobuf::BoolEnum value);

  // int32 GunNum = 21;
  void clear_gunnum();
  static const int kGunNumFieldNumber = 21;
  ::google::protobuf::int32 gunnum() const;
  void set_gunnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargeFrozen > chargefrozen_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::DischargeFrozen > dischargefrozen_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr cardno_;
  ::google::protobuf::internal::ArenaStringPtr vin_;
  ::google::protobuf::internal::ArenaStringPtr plate_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* begintime_;
  ::charge::protobuf::DateTime* endtime_;
  int status_;
  ::google::protobuf::int32 billtype_;
  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 beginsoc_;
  double beginmeter_;
  double endmeter_;
  ::google::protobuf::int32 endsoc_;
  int chargetype_;
  int chargeway_;
  ::google::protobuf::int32 queuenumber_;
  int emergency_;
  ::google::protobuf::int32 gunnum_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.CarInfo) */ {
 public:
  CarInfo();
  virtual ~CarInfo();

  CarInfo(const CarInfo& from);

  inline CarInfo& operator=(const CarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CarInfo(CarInfo&& from) noexcept
    : CarInfo() {
    *this = ::std::move(from);
  }

  inline CarInfo& operator=(CarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CarInfo& default_instance();

  static inline const CarInfo* internal_default_instance() {
    return reinterpret_cast<const CarInfo*>(
               &_CarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CarInfo* other);
  friend void swap(CarInfo& a, CarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CarInfo& from);
  void MergeFrom(const CarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CarID = 1;
  void clear_carid();
  static const int kCarIDFieldNumber = 1;
  const ::std::string& carid() const;
  void set_carid(const ::std::string& value);
  #if LANG_CXX11
  void set_carid(::std::string&& value);
  #endif
  void set_carid(const char* value);
  void set_carid(const char* value, size_t size);
  ::std::string* mutable_carid();
  ::std::string* release_carid();
  void set_allocated_carid(::std::string* carid);

  // string CarVIN = 2;
  void clear_carvin();
  static const int kCarVINFieldNumber = 2;
  const ::std::string& carvin() const;
  void set_carvin(const ::std::string& value);
  #if LANG_CXX11
  void set_carvin(::std::string&& value);
  #endif
  void set_carvin(const char* value);
  void set_carvin(const char* value, size_t size);
  ::std::string* mutable_carvin();
  ::std::string* release_carvin();
  void set_allocated_carvin(::std::string* carvin);

  // string Plate = 4;
  void clear_plate();
  static const int kPlateFieldNumber = 4;
  const ::std::string& plate() const;
  void set_plate(const ::std::string& value);
  #if LANG_CXX11
  void set_plate(::std::string&& value);
  #endif
  void set_plate(const char* value);
  void set_plate(const char* value, size_t size);
  ::std::string* mutable_plate();
  ::std::string* release_plate();
  void set_allocated_plate(::std::string* plate);

  // int32 PRI = 3;
  void clear_pri();
  static const int kPRIFieldNumber = 3;
  ::google::protobuf::int32 pri() const;
  void set_pri(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum IsDel = 5;
  void clear_isdel();
  static const int kIsDelFieldNumber = 5;
  ::charge::protobuf::BoolEnum isdel() const;
  void set_isdel(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.CarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr carid_;
  ::google::protobuf::internal::ArenaStringPtr carvin_;
  ::google::protobuf::internal::ArenaStringPtr plate_;
  ::google::protobuf::int32 pri_;
  int isdel_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.CardInfo) */ {
 public:
  CardInfo();
  virtual ~CardInfo();

  CardInfo(const CardInfo& from);

  inline CardInfo& operator=(const CardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CardInfo(CardInfo&& from) noexcept
    : CardInfo() {
    *this = ::std::move(from);
  }

  inline CardInfo& operator=(CardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardInfo& default_instance();

  static inline const CardInfo* internal_default_instance() {
    return reinterpret_cast<const CardInfo*>(
               &_CardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CardInfo* other);
  friend void swap(CardInfo& a, CardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardInfo& from);
  void MergeFrom(const CardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CardID = 1;
  void clear_cardid();
  static const int kCardIDFieldNumber = 1;
  const ::std::string& cardid() const;
  void set_cardid(const ::std::string& value);
  #if LANG_CXX11
  void set_cardid(::std::string&& value);
  #endif
  void set_cardid(const char* value);
  void set_cardid(const char* value, size_t size);
  ::std::string* mutable_cardid();
  ::std::string* release_cardid();
  void set_allocated_cardid(::std::string* cardid);

  // string CardCode = 2;
  void clear_cardcode();
  static const int kCardCodeFieldNumber = 2;
  const ::std::string& cardcode() const;
  void set_cardcode(const ::std::string& value);
  #if LANG_CXX11
  void set_cardcode(::std::string&& value);
  #endif
  void set_cardcode(const char* value);
  void set_cardcode(const char* value, size_t size);
  ::std::string* mutable_cardcode();
  ::std::string* release_cardcode();
  void set_allocated_cardcode(::std::string* cardcode);

  // double Balabce = 4;
  void clear_balabce();
  static const int kBalabceFieldNumber = 4;
  double balabce() const;
  void set_balabce(double value);

  // .charge.protobuf.BoolEnum IsDel = 3;
  void clear_isdel();
  static const int kIsDelFieldNumber = 3;
  ::charge::protobuf::BoolEnum isdel() const;
  void set_isdel(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.CardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cardid_;
  ::google::protobuf::internal::ArenaStringPtr cardcode_;
  double balabce_;
  int isdel_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargerState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargerState) */ {
 public:
  ChargerState();
  virtual ~ChargerState();

  ChargerState(const ChargerState& from);

  inline ChargerState& operator=(const ChargerState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargerState(ChargerState&& from) noexcept
    : ChargerState() {
    *this = ::std::move(from);
  }

  inline ChargerState& operator=(ChargerState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargerState& default_instance();

  static inline const ChargerState* internal_default_instance() {
    return reinterpret_cast<const ChargerState*>(
               &_ChargerState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(ChargerState* other);
  friend void swap(ChargerState& a, ChargerState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargerState* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargerState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargerState& from);
  void MergeFrom(const ChargerState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BillCode = 5;
  void clear_billcode();
  static const int kBillCodeFieldNumber = 5;
  const ::std::string& billcode() const;
  void set_billcode(const ::std::string& value);
  #if LANG_CXX11
  void set_billcode(::std::string&& value);
  #endif
  void set_billcode(const char* value);
  void set_billcode(const char* value, size_t size);
  ::std::string* mutable_billcode();
  ::std::string* release_billcode();
  void set_allocated_billcode(::std::string* billcode);

  // string CtrlBillCode = 6;
  void clear_ctrlbillcode();
  static const int kCtrlBillCodeFieldNumber = 6;
  const ::std::string& ctrlbillcode() const;
  void set_ctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlbillcode(::std::string&& value);
  #endif
  void set_ctrlbillcode(const char* value);
  void set_ctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_ctrlbillcode();
  ::std::string* release_ctrlbillcode();
  void set_allocated_ctrlbillcode(::std::string* ctrlbillcode);

  // .charge.protobuf.DateTime Timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::charge::protobuf::DateTime& timestamp() const;
  ::charge::protobuf::DateTime* mutable_timestamp();
  ::charge::protobuf::DateTime* release_timestamp();
  void set_allocated_timestamp(::charge::protobuf::DateTime* timestamp);

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // .charge.protobuf.ChargerStateEnum State = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::charge::protobuf::ChargerStateEnum state() const;
  void set_state(::charge::protobuf::ChargerStateEnum value);

  // int32 QueueSequence = 4;
  void clear_queuesequence();
  static const int kQueueSequenceFieldNumber = 4;
  ::google::protobuf::int32 queuesequence() const;
  void set_queuesequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargerState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr billcode_;
  ::google::protobuf::internal::ArenaStringPtr ctrlbillcode_;
  ::charge::protobuf::DateTime* timestamp_;
  ::google::protobuf::int32 canindex_;
  int state_;
  ::google::protobuf::int32 queuesequence_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargingStrategy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargingStrategy) */ {
 public:
  ChargingStrategy();
  virtual ~ChargingStrategy();

  ChargingStrategy(const ChargingStrategy& from);

  inline ChargingStrategy& operator=(const ChargingStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargingStrategy(ChargingStrategy&& from) noexcept
    : ChargingStrategy() {
    *this = ::std::move(from);
  }

  inline ChargingStrategy& operator=(ChargingStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargingStrategy& default_instance();

  static inline const ChargingStrategy* internal_default_instance() {
    return reinterpret_cast<const ChargingStrategy*>(
               &_ChargingStrategy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ChargingStrategy* other);
  friend void swap(ChargingStrategy& a, ChargingStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargingStrategy* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargingStrategy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargingStrategy& from);
  void MergeFrom(const ChargingStrategy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargingStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime BeginTime = 1;
  bool has_begintime() const;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& begintime() const;
  ::charge::protobuf::DateTime* mutable_begintime();
  ::charge::protobuf::DateTime* release_begintime();
  void set_allocated_begintime(::charge::protobuf::DateTime* begintime);

  // .charge.protobuf.DateTime EndTime = 2;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  const ::charge::protobuf::DateTime& endtime() const;
  ::charge::protobuf::DateTime* mutable_endtime();
  ::charge::protobuf::DateTime* release_endtime();
  void set_allocated_endtime(::charge::protobuf::DateTime* endtime);

  // double SuggestValue = 3;
  void clear_suggestvalue();
  static const int kSuggestValueFieldNumber = 3;
  double suggestvalue() const;
  void set_suggestvalue(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargingStrategy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* begintime_;
  ::charge::protobuf::DateTime* endtime_;
  double suggestvalue_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargeFrozen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ChargeFrozen) */ {
 public:
  ChargeFrozen();
  virtual ~ChargeFrozen();

  ChargeFrozen(const ChargeFrozen& from);

  inline ChargeFrozen& operator=(const ChargeFrozen& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargeFrozen(ChargeFrozen&& from) noexcept
    : ChargeFrozen() {
    *this = ::std::move(from);
  }

  inline ChargeFrozen& operator=(ChargeFrozen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeFrozen& default_instance();

  static inline const ChargeFrozen* internal_default_instance() {
    return reinterpret_cast<const ChargeFrozen*>(
               &_ChargeFrozen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(ChargeFrozen* other);
  friend void swap(ChargeFrozen& a, ChargeFrozen& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargeFrozen* New() const PROTOBUF_FINAL { return New(NULL); }

  ChargeFrozen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChargeFrozen& from);
  void MergeFrom(const ChargeFrozen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChargeFrozen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime FrozenTime = 1;
  bool has_frozentime() const;
  void clear_frozentime();
  static const int kFrozenTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& frozentime() const;
  ::charge::protobuf::DateTime* mutable_frozentime();
  ::charge::protobuf::DateTime* release_frozentime();
  void set_allocated_frozentime(::charge::protobuf::DateTime* frozentime);

  // double kWh = 2;
  void clear_kwh();
  static const int kKWhFieldNumber = 2;
  double kwh() const;
  void set_kwh(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ChargeFrozen)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* frozentime_;
  double kwh_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DischargeFrozen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.DischargeFrozen) */ {
 public:
  DischargeFrozen();
  virtual ~DischargeFrozen();

  DischargeFrozen(const DischargeFrozen& from);

  inline DischargeFrozen& operator=(const DischargeFrozen& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DischargeFrozen(DischargeFrozen&& from) noexcept
    : DischargeFrozen() {
    *this = ::std::move(from);
  }

  inline DischargeFrozen& operator=(DischargeFrozen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DischargeFrozen& default_instance();

  static inline const DischargeFrozen* internal_default_instance() {
    return reinterpret_cast<const DischargeFrozen*>(
               &_DischargeFrozen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(DischargeFrozen* other);
  friend void swap(DischargeFrozen& a, DischargeFrozen& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DischargeFrozen* New() const PROTOBUF_FINAL { return New(NULL); }

  DischargeFrozen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DischargeFrozen& from);
  void MergeFrom(const DischargeFrozen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DischargeFrozen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .charge.protobuf.DateTime FrozenTime = 1;
  bool has_frozentime() const;
  void clear_frozentime();
  static const int kFrozenTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& frozentime() const;
  ::charge::protobuf::DateTime* mutable_frozentime();
  ::charge::protobuf::DateTime* release_frozentime();
  void set_allocated_frozentime(::charge::protobuf::DateTime* frozentime);

  // double kWh = 2;
  void clear_kwh();
  static const int kKWhFieldNumber = 2;
  double kwh() const;
  void set_kwh(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.DischargeFrozen)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::charge::protobuf::DateTime* frozentime_;
  double kwh_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MasterSlaveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.MasterSlaveInfo) */ {
 public:
  MasterSlaveInfo();
  virtual ~MasterSlaveInfo();

  MasterSlaveInfo(const MasterSlaveInfo& from);

  inline MasterSlaveInfo& operator=(const MasterSlaveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MasterSlaveInfo(MasterSlaveInfo&& from) noexcept
    : MasterSlaveInfo() {
    *this = ::std::move(from);
  }

  inline MasterSlaveInfo& operator=(MasterSlaveInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MasterSlaveInfo& default_instance();

  static inline const MasterSlaveInfo* internal_default_instance() {
    return reinterpret_cast<const MasterSlaveInfo*>(
               &_MasterSlaveInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(MasterSlaveInfo* other);
  friend void swap(MasterSlaveInfo& a, MasterSlaveInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MasterSlaveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MasterSlaveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MasterSlaveInfo& from);
  void MergeFrom(const MasterSlaveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MasterSlaveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 GunNumber = 1;
  void clear_gunnumber();
  static const int kGunNumberFieldNumber = 1;
  ::google::protobuf::int32 gunnumber() const;
  void set_gunnumber(::google::protobuf::int32 value);

  // int32 MasterGun = 2;
  void clear_mastergun();
  static const int kMasterGunFieldNumber = 2;
  ::google::protobuf::int32 mastergun() const;
  void set_mastergun(::google::protobuf::int32 value);

  // int32 SlaveGun1 = 3;
  void clear_slavegun1();
  static const int kSlaveGun1FieldNumber = 3;
  ::google::protobuf::int32 slavegun1() const;
  void set_slavegun1(::google::protobuf::int32 value);

  // int32 SlaveGun2 = 4;
  void clear_slavegun2();
  static const int kSlaveGun2FieldNumber = 4;
  ::google::protobuf::int32 slavegun2() const;
  void set_slavegun2(::google::protobuf::int32 value);

  // int32 SlaveGun3 = 5;
  void clear_slavegun3();
  static const int kSlaveGun3FieldNumber = 5;
  ::google::protobuf::int32 slavegun3() const;
  void set_slavegun3(::google::protobuf::int32 value);

  // int32 SlaveGun4 = 6;
  void clear_slavegun4();
  static const int kSlaveGun4FieldNumber = 6;
  ::google::protobuf::int32 slavegun4() const;
  void set_slavegun4(::google::protobuf::int32 value);

  // int32 SlaveGun5 = 7;
  void clear_slavegun5();
  static const int kSlaveGun5FieldNumber = 7;
  ::google::protobuf::int32 slavegun5() const;
  void set_slavegun5(::google::protobuf::int32 value);

  // int32 SlaveGun6 = 8;
  void clear_slavegun6();
  static const int kSlaveGun6FieldNumber = 8;
  ::google::protobuf::int32 slavegun6() const;
  void set_slavegun6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.MasterSlaveInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 gunnumber_;
  ::google::protobuf::int32 mastergun_;
  ::google::protobuf::int32 slavegun1_;
  ::google::protobuf::int32 slavegun2_;
  ::google::protobuf::int32 slavegun3_;
  ::google::protobuf::int32 slavegun4_;
  ::google::protobuf::int32 slavegun5_;
  ::google::protobuf::int32 slavegun6_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsShakehands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsShakehands) */ {
 public:
  BmsShakehands();
  virtual ~BmsShakehands();

  BmsShakehands(const BmsShakehands& from);

  inline BmsShakehands& operator=(const BmsShakehands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsShakehands(BmsShakehands&& from) noexcept
    : BmsShakehands() {
    *this = ::std::move(from);
  }

  inline BmsShakehands& operator=(BmsShakehands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsShakehands& default_instance();

  static inline const BmsShakehands* internal_default_instance() {
    return reinterpret_cast<const BmsShakehands*>(
               &_BmsShakehands_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(BmsShakehands* other);
  friend void swap(BmsShakehands& a, BmsShakehands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsShakehands* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsShakehands* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsShakehands& from);
  void MergeFrom(const BmsShakehands& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsShakehands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BatteryVendor = 5;
  void clear_batteryvendor();
  static const int kBatteryVendorFieldNumber = 5;
  const ::std::string& batteryvendor() const;
  void set_batteryvendor(const ::std::string& value);
  #if LANG_CXX11
  void set_batteryvendor(::std::string&& value);
  #endif
  void set_batteryvendor(const char* value);
  void set_batteryvendor(const char* value, size_t size);
  ::std::string* mutable_batteryvendor();
  ::std::string* release_batteryvendor();
  void set_allocated_batteryvendor(::std::string* batteryvendor);

  // string ProduceDate = 7;
  void clear_producedate();
  static const int kProduceDateFieldNumber = 7;
  const ::std::string& producedate() const;
  void set_producedate(const ::std::string& value);
  #if LANG_CXX11
  void set_producedate(::std::string&& value);
  #endif
  void set_producedate(const char* value);
  void set_producedate(const char* value, size_t size);
  ::std::string* mutable_producedate();
  ::std::string* release_producedate();
  void set_allocated_producedate(::std::string* producedate);

  // string BmsVersion = 10;
  void clear_bmsversion();
  static const int kBmsVersionFieldNumber = 10;
  const ::std::string& bmsversion() const;
  void set_bmsversion(const ::std::string& value);
  #if LANG_CXX11
  void set_bmsversion(::std::string&& value);
  #endif
  void set_bmsversion(const char* value);
  void set_bmsversion(const char* value, size_t size);
  ::std::string* mutable_bmsversion();
  ::std::string* release_bmsversion();
  void set_allocated_bmsversion(::std::string* bmsversion);

  // double VolMaxAllowed = 1;
  void clear_volmaxallowed();
  static const int kVolMaxAllowedFieldNumber = 1;
  double volmaxallowed() const;
  void set_volmaxallowed(double value);

  // double CapacityRated = 3;
  void clear_capacityrated();
  static const int kCapacityRatedFieldNumber = 3;
  double capacityrated() const;
  void set_capacityrated(double value);

  // double VoltageRated = 4;
  void clear_voltagerated();
  static const int kVoltageRatedFieldNumber = 4;
  double voltagerated() const;
  void set_voltagerated(double value);

  // int32 BatteryType = 2;
  void clear_batterytype();
  static const int kBatteryTypeFieldNumber = 2;
  ::google::protobuf::int32 batterytype() const;
  void set_batterytype(::google::protobuf::int32 value);

  // int32 BatterySequence = 6;
  void clear_batterysequence();
  static const int kBatterySequenceFieldNumber = 6;
  ::google::protobuf::int32 batterysequence() const;
  void set_batterysequence(::google::protobuf::int32 value);

  // int32 ChargeCount = 8;
  void clear_chargecount();
  static const int kChargeCountFieldNumber = 8;
  ::google::protobuf::int32 chargecount() const;
  void set_chargecount(::google::protobuf::int32 value);

  // int32 RightIdentifier = 9;
  void clear_rightidentifier();
  static const int kRightIdentifierFieldNumber = 9;
  ::google::protobuf::int32 rightidentifier() const;
  void set_rightidentifier(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsShakehands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr batteryvendor_;
  ::google::protobuf::internal::ArenaStringPtr producedate_;
  ::google::protobuf::internal::ArenaStringPtr bmsversion_;
  double volmaxallowed_;
  double capacityrated_;
  double voltagerated_;
  ::google::protobuf::int32 batterytype_;
  ::google::protobuf::int32 batterysequence_;
  ::google::protobuf::int32 chargecount_;
  ::google::protobuf::int32 rightidentifier_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsConfig) */ {
 public:
  BmsConfig();
  virtual ~BmsConfig();

  BmsConfig(const BmsConfig& from);

  inline BmsConfig& operator=(const BmsConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsConfig(BmsConfig&& from) noexcept
    : BmsConfig() {
    *this = ::std::move(from);
  }

  inline BmsConfig& operator=(BmsConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsConfig& default_instance();

  static inline const BmsConfig* internal_default_instance() {
    return reinterpret_cast<const BmsConfig*>(
               &_BmsConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(BmsConfig* other);
  friend void swap(BmsConfig& a, BmsConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsConfig& from);
  void MergeFrom(const BmsConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double VIndAllowedMax = 1;
  void clear_vindallowedmax();
  static const int kVIndAllowedMaxFieldNumber = 1;
  double vindallowedmax() const;
  void set_vindallowedmax(double value);

  // double IAllowedMax = 2;
  void clear_iallowedmax();
  static const int kIAllowedMaxFieldNumber = 2;
  double iallowedmax() const;
  void set_iallowedmax(double value);

  // double EnergyRated = 3;
  void clear_energyrated();
  static const int kEnergyRatedFieldNumber = 3;
  double energyrated() const;
  void set_energyrated(double value);

  // double VAllowedMax = 4;
  void clear_vallowedmax();
  static const int kVAllowedMaxFieldNumber = 4;
  double vallowedmax() const;
  void set_vallowedmax(double value);

  // double TAllowedMax = 5;
  void clear_tallowedmax();
  static const int kTAllowedMaxFieldNumber = 5;
  double tallowedmax() const;
  void set_tallowedmax(double value);

  // double StartSoc = 6;
  void clear_startsoc();
  static const int kStartSocFieldNumber = 6;
  double startsoc() const;
  void set_startsoc(double value);

  // double VCurrent = 7;
  void clear_vcurrent();
  static const int kVCurrentFieldNumber = 7;
  double vcurrent() const;
  void set_vcurrent(double value);

  // double VCOutputMax = 8;
  void clear_vcoutputmax();
  static const int kVCOutputMaxFieldNumber = 8;
  double vcoutputmax() const;
  void set_vcoutputmax(double value);

  // double VCOutputMin = 9;
  void clear_vcoutputmin();
  static const int kVCOutputMinFieldNumber = 9;
  double vcoutputmin() const;
  void set_vcoutputmin(double value);

  // double ICOutputMax = 10;
  void clear_icoutputmax();
  static const int kICOutputMaxFieldNumber = 10;
  double icoutputmax() const;
  void set_icoutputmax(double value);

  // double ICOutputMin = 11;
  void clear_icoutputmin();
  static const int kICOutputMinFieldNumber = 11;
  double icoutputmin() const;
  void set_icoutputmin(double value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double vindallowedmax_;
  double iallowedmax_;
  double energyrated_;
  double vallowedmax_;
  double tallowedmax_;
  double startsoc_;
  double vcurrent_;
  double vcoutputmax_;
  double vcoutputmin_;
  double icoutputmax_;
  double icoutputmin_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsChargeFinish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsChargeFinish) */ {
 public:
  BmsChargeFinish();
  virtual ~BmsChargeFinish();

  BmsChargeFinish(const BmsChargeFinish& from);

  inline BmsChargeFinish& operator=(const BmsChargeFinish& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsChargeFinish(BmsChargeFinish&& from) noexcept
    : BmsChargeFinish() {
    *this = ::std::move(from);
  }

  inline BmsChargeFinish& operator=(BmsChargeFinish&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsChargeFinish& default_instance();

  static inline const BmsChargeFinish* internal_default_instance() {
    return reinterpret_cast<const BmsChargeFinish*>(
               &_BmsChargeFinish_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(BmsChargeFinish* other);
  friend void swap(BmsChargeFinish& a, BmsChargeFinish& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsChargeFinish* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsChargeFinish* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsChargeFinish& from);
  void MergeFrom(const BmsChargeFinish& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsChargeFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double EndSoc = 1;
  void clear_endsoc();
  static const int kEndSocFieldNumber = 1;
  double endsoc() const;
  void set_endsoc(double value);

  // double VMinIndividal = 2;
  void clear_vminindividal();
  static const int kVMinIndividalFieldNumber = 2;
  double vminindividal() const;
  void set_vminindividal(double value);

  // double VMaxIndividal = 3;
  void clear_vmaxindividal();
  static const int kVMaxIndividalFieldNumber = 3;
  double vmaxindividal() const;
  void set_vmaxindividal(double value);

  // double TemperatureMin = 4;
  void clear_temperaturemin();
  static const int kTemperatureMinFieldNumber = 4;
  double temperaturemin() const;
  void set_temperaturemin(double value);

  // double TemperatureMax = 5;
  void clear_temperaturemax();
  static const int kTemperatureMaxFieldNumber = 5;
  double temperaturemax() const;
  void set_temperaturemax(double value);

  // double OutputEnergy = 7;
  void clear_outputenergy();
  static const int kOutputEnergyFieldNumber = 7;
  double outputenergy() const;
  void set_outputenergy(double value);

  // int32 ChargeDuration = 6;
  void clear_chargeduration();
  static const int kChargeDurationFieldNumber = 6;
  ::google::protobuf::int32 chargeduration() const;
  void set_chargeduration(::google::protobuf::int32 value);

  // int32 BmsStopReason = 8;
  void clear_bmsstopreason();
  static const int kBmsStopReasonFieldNumber = 8;
  ::google::protobuf::int32 bmsstopreason() const;
  void set_bmsstopreason(::google::protobuf::int32 value);

  // int32 BmsFaultReason = 9;
  void clear_bmsfaultreason();
  static const int kBmsFaultReasonFieldNumber = 9;
  ::google::protobuf::int32 bmsfaultreason() const;
  void set_bmsfaultreason(::google::protobuf::int32 value);

  // int32 BmsErrorReason = 10;
  void clear_bmserrorreason();
  static const int kBmsErrorReasonFieldNumber = 10;
  ::google::protobuf::int32 bmserrorreason() const;
  void set_bmserrorreason(::google::protobuf::int32 value);

  // int32 ChargerStopReason = 11;
  void clear_chargerstopreason();
  static const int kChargerStopReasonFieldNumber = 11;
  ::google::protobuf::int32 chargerstopreason() const;
  void set_chargerstopreason(::google::protobuf::int32 value);

  // int32 ChargerFaultReason = 12;
  void clear_chargerfaultreason();
  static const int kChargerFaultReasonFieldNumber = 12;
  ::google::protobuf::int32 chargerfaultreason() const;
  void set_chargerfaultreason(::google::protobuf::int32 value);

  // int32 ChargerErrorReason = 13;
  void clear_chargererrorreason();
  static const int kChargerErrorReasonFieldNumber = 13;
  ::google::protobuf::int32 chargererrorreason() const;
  void set_chargererrorreason(::google::protobuf::int32 value);

  // int32 BmsEFrame = 14;
  void clear_bmseframe();
  static const int kBmsEFrameFieldNumber = 14;
  ::google::protobuf::int32 bmseframe() const;
  void set_bmseframe(::google::protobuf::int32 value);

  // int32 ChargerEFrame = 15;
  void clear_chargereframe();
  static const int kChargerEFrameFieldNumber = 15;
  ::google::protobuf::int32 chargereframe() const;
  void set_chargereframe(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsChargeFinish)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double endsoc_;
  double vminindividal_;
  double vmaxindividal_;
  double temperaturemin_;
  double temperaturemax_;
  double outputenergy_;
  ::google::protobuf::int32 chargeduration_;
  ::google::protobuf::int32 bmsstopreason_;
  ::google::protobuf::int32 bmsfaultreason_;
  ::google::protobuf::int32 bmserrorreason_;
  ::google::protobuf::int32 chargerstopreason_;
  ::google::protobuf::int32 chargerfaultreason_;
  ::google::protobuf::int32 chargererrorreason_;
  ::google::protobuf::int32 bmseframe_;
  ::google::protobuf::int32 chargereframe_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BmsCharging : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.BmsCharging) */ {
 public:
  BmsCharging();
  virtual ~BmsCharging();

  BmsCharging(const BmsCharging& from);

  inline BmsCharging& operator=(const BmsCharging& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BmsCharging(BmsCharging&& from) noexcept
    : BmsCharging() {
    *this = ::std::move(from);
  }

  inline BmsCharging& operator=(BmsCharging&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsCharging& default_instance();

  static inline const BmsCharging* internal_default_instance() {
    return reinterpret_cast<const BmsCharging*>(
               &_BmsCharging_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(BmsCharging* other);
  friend void swap(BmsCharging& a, BmsCharging& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BmsCharging* New() const PROTOBUF_FINAL { return New(NULL); }

  BmsCharging* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BmsCharging& from);
  void MergeFrom(const BmsCharging& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BmsCharging* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double VDemand = 1;
  void clear_vdemand();
  static const int kVDemandFieldNumber = 1;
  double vdemand() const;
  void set_vdemand(double value);

  // double IDemand = 2;
  void clear_idemand();
  static const int kIDemandFieldNumber = 2;
  double idemand() const;
  void set_idemand(double value);

  // double CurrentSoc = 3;
  void clear_currentsoc();
  static const int kCurrentSocFieldNumber = 3;
  double currentsoc() const;
  void set_currentsoc(double value);

  // double RemainTime = 4;
  void clear_remaintime();
  static const int kRemainTimeFieldNumber = 4;
  double remaintime() const;
  void set_remaintime(double value);

  // double VMeasure = 6;
  void clear_vmeasure();
  static const int kVMeasureFieldNumber = 6;
  double vmeasure() const;
  void set_vmeasure(double value);

  // double IMeasure = 7;
  void clear_imeasure();
  static const int kIMeasureFieldNumber = 7;
  double imeasure() const;
  void set_imeasure(double value);

  // .charge.protobuf.ChargingMode ChargeMode = 5;
  void clear_chargemode();
  static const int kChargeModeFieldNumber = 5;
  ::charge::protobuf::ChargingMode chargemode() const;
  void set_chargemode(::charge::protobuf::ChargingMode value);

  // int32 VIndMaxCode = 9;
  void clear_vindmaxcode();
  static const int kVIndMaxCodeFieldNumber = 9;
  ::google::protobuf::int32 vindmaxcode() const;
  void set_vindmaxcode(::google::protobuf::int32 value);

  // double VIndMax = 8;
  void clear_vindmax();
  static const int kVIndMaxFieldNumber = 8;
  double vindmax() const;
  void set_vindmax(double value);

  // double VIndMin = 10;
  void clear_vindmin();
  static const int kVIndMinFieldNumber = 10;
  double vindmin() const;
  void set_vindmin(double value);

  // double TMax = 12;
  void clear_tmax();
  static const int kTMaxFieldNumber = 12;
  double tmax() const;
  void set_tmax(double value);

  // int32 VIndMinCode = 11;
  void clear_vindmincode();
  static const int kVIndMinCodeFieldNumber = 11;
  ::google::protobuf::int32 vindmincode() const;
  void set_vindmincode(::google::protobuf::int32 value);

  // int32 TMaxCode = 13;
  void clear_tmaxcode();
  static const int kTMaxCodeFieldNumber = 13;
  ::google::protobuf::int32 tmaxcode() const;
  void set_tmaxcode(::google::protobuf::int32 value);

  // double TMin = 14;
  void clear_tmin();
  static const int kTMinFieldNumber = 14;
  double tmin() const;
  void set_tmin(double value);

  // int32 TMinCode = 15;
  void clear_tmincode();
  static const int kTMinCodeFieldNumber = 15;
  ::google::protobuf::int32 tmincode() const;
  void set_tmincode(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum ChargeAllow = 16;
  void clear_chargeallow();
  static const int kChargeAllowFieldNumber = 16;
  ::charge::protobuf::BoolEnum chargeallow() const;
  void set_chargeallow(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum VIndHigh = 17;
  void clear_vindhigh();
  static const int kVIndHighFieldNumber = 17;
  ::charge::protobuf::BoolEnum vindhigh() const;
  void set_vindhigh(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum VIndLow = 18;
  void clear_vindlow();
  static const int kVIndLowFieldNumber = 18;
  ::charge::protobuf::BoolEnum vindlow() const;
  void set_vindlow(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum SoHigh = 19;
  void clear_sohigh();
  static const int kSoHighFieldNumber = 19;
  ::charge::protobuf::BoolEnum sohigh() const;
  void set_sohigh(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum SocLow = 20;
  void clear_soclow();
  static const int kSocLowFieldNumber = 20;
  ::charge::protobuf::BoolEnum soclow() const;
  void set_soclow(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum IHigh = 21;
  void clear_ihigh();
  static const int kIHighFieldNumber = 21;
  ::charge::protobuf::BoolEnum ihigh() const;
  void set_ihigh(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum THigh = 22;
  void clear_thigh();
  static const int kTHighFieldNumber = 22;
  ::charge::protobuf::BoolEnum thigh() const;
  void set_thigh(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum Insulation = 23;
  void clear_insulation();
  static const int kInsulationFieldNumber = 23;
  ::charge::protobuf::BoolEnum insulation() const;
  void set_insulation(::charge::protobuf::BoolEnum value);

  // .charge.protobuf.BoolEnum OutputConnector = 24;
  void clear_outputconnector();
  static const int kOutputConnectorFieldNumber = 24;
  ::charge::protobuf::BoolEnum outputconnector() const;
  void set_outputconnector(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.BmsCharging)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double vdemand_;
  double idemand_;
  double currentsoc_;
  double remaintime_;
  double vmeasure_;
  double imeasure_;
  int chargemode_;
  ::google::protobuf::int32 vindmaxcode_;
  double vindmax_;
  double vindmin_;
  double tmax_;
  ::google::protobuf::int32 vindmincode_;
  ::google::protobuf::int32 tmaxcode_;
  double tmin_;
  ::google::protobuf::int32 tmincode_;
  int chargeallow_;
  int vindhigh_;
  int vindlow_;
  int sohigh_;
  int soclow_;
  int ihigh_;
  int thigh_;
  int insulation_;
  int outputconnector_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueueSequence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.QueueSequence) */ {
 public:
  QueueSequence();
  virtual ~QueueSequence();

  QueueSequence(const QueueSequence& from);

  inline QueueSequence& operator=(const QueueSequence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueueSequence(QueueSequence&& from) noexcept
    : QueueSequence() {
    *this = ::std::move(from);
  }

  inline QueueSequence& operator=(QueueSequence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueueSequence& default_instance();

  static inline const QueueSequence* internal_default_instance() {
    return reinterpret_cast<const QueueSequence*>(
               &_QueueSequence_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(QueueSequence* other);
  friend void swap(QueueSequence& a, QueueSequence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueueSequence* New() const PROTOBUF_FINAL { return New(NULL); }

  QueueSequence* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueueSequence& from);
  void MergeFrom(const QueueSequence& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueueSequence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // int32 QSequence = 2;
  void clear_qsequence();
  static const int kQSequenceFieldNumber = 2;
  ::google::protobuf::int32 qsequence() const;
  void set_qsequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.QueueSequence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 canindex_;
  ::google::protobuf::int32 qsequence_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetGunGroupInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.SetGunGroupInfoReq) */ {
 public:
  SetGunGroupInfoReq();
  virtual ~SetGunGroupInfoReq();

  SetGunGroupInfoReq(const SetGunGroupInfoReq& from);

  inline SetGunGroupInfoReq& operator=(const SetGunGroupInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGunGroupInfoReq(SetGunGroupInfoReq&& from) noexcept
    : SetGunGroupInfoReq() {
    *this = ::std::move(from);
  }

  inline SetGunGroupInfoReq& operator=(SetGunGroupInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGunGroupInfoReq& default_instance();

  static inline const SetGunGroupInfoReq* internal_default_instance() {
    return reinterpret_cast<const SetGunGroupInfoReq*>(
               &_SetGunGroupInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(SetGunGroupInfoReq* other);
  friend void swap(SetGunGroupInfoReq& a, SetGunGroupInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGunGroupInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGunGroupInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGunGroupInfoReq& from);
  void MergeFrom(const SetGunGroupInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGunGroupInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.GunGroupType GunGroupInfo = 1;
  int gungroupinfo_size() const;
  void clear_gungroupinfo();
  static const int kGunGroupInfoFieldNumber = 1;
  const ::charge::protobuf::GunGroupType& gungroupinfo(int index) const;
  ::charge::protobuf::GunGroupType* mutable_gungroupinfo(int index);
  ::charge::protobuf::GunGroupType* add_gungroupinfo();
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::GunGroupType >*
      mutable_gungroupinfo();
  const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::GunGroupType >&
      gungroupinfo() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.SetGunGroupInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::charge::protobuf::GunGroupType > gungroupinfo_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GunGroupType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.GunGroupType) */ {
 public:
  GunGroupType();
  virtual ~GunGroupType();

  GunGroupType(const GunGroupType& from);

  inline GunGroupType& operator=(const GunGroupType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GunGroupType(GunGroupType&& from) noexcept
    : GunGroupType() {
    *this = ::std::move(from);
  }

  inline GunGroupType& operator=(GunGroupType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GunGroupType& default_instance();

  static inline const GunGroupType* internal_default_instance() {
    return reinterpret_cast<const GunGroupType*>(
               &_GunGroupType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(GunGroupType* other);
  friend void swap(GunGroupType& a, GunGroupType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GunGroupType* New() const PROTOBUF_FINAL { return New(NULL); }

  GunGroupType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GunGroupType& from);
  void MergeFrom(const GunGroupType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GunGroupType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 Gun1CanIndex = 1;
  void clear_gun1canindex();
  static const int kGun1CanIndexFieldNumber = 1;
  ::google::protobuf::int32 gun1canindex() const;
  void set_gun1canindex(::google::protobuf::int32 value);

  // int32 Gun2CanIndex = 2;
  void clear_gun2canindex();
  static const int kGun2CanIndexFieldNumber = 2;
  ::google::protobuf::int32 gun2canindex() const;
  void set_gun2canindex(::google::protobuf::int32 value);

  // int32 Gun3CanIndex = 3;
  void clear_gun3canindex();
  static const int kGun3CanIndexFieldNumber = 3;
  ::google::protobuf::int32 gun3canindex() const;
  void set_gun3canindex(::google::protobuf::int32 value);

  // int32 Gun4CanIndex = 4;
  void clear_gun4canindex();
  static const int kGun4CanIndexFieldNumber = 4;
  ::google::protobuf::int32 gun4canindex() const;
  void set_gun4canindex(::google::protobuf::int32 value);

  // int32 Gun5CanIndex = 5;
  void clear_gun5canindex();
  static const int kGun5CanIndexFieldNumber = 5;
  ::google::protobuf::int32 gun5canindex() const;
  void set_gun5canindex(::google::protobuf::int32 value);

  // int32 Gun6CanIndex = 6;
  void clear_gun6canindex();
  static const int kGun6CanIndexFieldNumber = 6;
  ::google::protobuf::int32 gun6canindex() const;
  void set_gun6canindex(::google::protobuf::int32 value);

  // int32 Gun7CanIndex = 7;
  void clear_gun7canindex();
  static const int kGun7CanIndexFieldNumber = 7;
  ::google::protobuf::int32 gun7canindex() const;
  void set_gun7canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.GunGroupType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 gun1canindex_;
  ::google::protobuf::int32 gun2canindex_;
  ::google::protobuf::int32 gun3canindex_;
  ::google::protobuf::int32 gun4canindex_;
  ::google::protobuf::int32 gun5canindex_;
  ::google::protobuf::int32 gun6canindex_;
  ::google::protobuf::int32 gun7canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GunGroupInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.GunGroupInfoReq) */ {
 public:
  GunGroupInfoReq();
  virtual ~GunGroupInfoReq();

  GunGroupInfoReq(const GunGroupInfoReq& from);

  inline GunGroupInfoReq& operator=(const GunGroupInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GunGroupInfoReq(GunGroupInfoReq&& from) noexcept
    : GunGroupInfoReq() {
    *this = ::std::move(from);
  }

  inline GunGroupInfoReq& operator=(GunGroupInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GunGroupInfoReq& default_instance();

  static inline const GunGroupInfoReq* internal_default_instance() {
    return reinterpret_cast<const GunGroupInfoReq*>(
               &_GunGroupInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(GunGroupInfoReq* other);
  friend void swap(GunGroupInfoReq& a, GunGroupInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GunGroupInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GunGroupInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GunGroupInfoReq& from);
  void MergeFrom(const GunGroupInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GunGroupInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 GunNumber = 2;
  void clear_gunnumber();
  static const int kGunNumberFieldNumber = 2;
  ::google::protobuf::int32 gunnumber() const;
  void set_gunnumber(::google::protobuf::int32 value);

  // int32 MasterGun = 3;
  void clear_mastergun();
  static const int kMasterGunFieldNumber = 3;
  ::google::protobuf::int32 mastergun() const;
  void set_mastergun(::google::protobuf::int32 value);

  // int32 SlaveGun1 = 4;
  void clear_slavegun1();
  static const int kSlaveGun1FieldNumber = 4;
  ::google::protobuf::int32 slavegun1() const;
  void set_slavegun1(::google::protobuf::int32 value);

  // int32 SlaveGun2 = 5;
  void clear_slavegun2();
  static const int kSlaveGun2FieldNumber = 5;
  ::google::protobuf::int32 slavegun2() const;
  void set_slavegun2(::google::protobuf::int32 value);

  // int32 SlaveGun3 = 6;
  void clear_slavegun3();
  static const int kSlaveGun3FieldNumber = 6;
  ::google::protobuf::int32 slavegun3() const;
  void set_slavegun3(::google::protobuf::int32 value);

  // int32 SlaveGun4 = 7;
  void clear_slavegun4();
  static const int kSlaveGun4FieldNumber = 7;
  ::google::protobuf::int32 slavegun4() const;
  void set_slavegun4(::google::protobuf::int32 value);

  // int32 SlaveGun5 = 8;
  void clear_slavegun5();
  static const int kSlaveGun5FieldNumber = 8;
  ::google::protobuf::int32 slavegun5() const;
  void set_slavegun5(::google::protobuf::int32 value);

  // int32 SlaveGun6 = 9;
  void clear_slavegun6();
  static const int kSlaveGun6FieldNumber = 9;
  ::google::protobuf::int32 slavegun6() const;
  void set_slavegun6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.GunGroupInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 gunnumber_;
  ::google::protobuf::int32 mastergun_;
  ::google::protobuf::int32 slavegun1_;
  ::google::protobuf::int32 slavegun2_;
  ::google::protobuf::int32 slavegun3_;
  ::google::protobuf::int32 slavegun4_;
  ::google::protobuf::int32 slavegun5_;
  ::google::protobuf::int32 slavegun6_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GunGroupInfoAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.GunGroupInfoAns) */ {
 public:
  GunGroupInfoAns();
  virtual ~GunGroupInfoAns();

  GunGroupInfoAns(const GunGroupInfoAns& from);

  inline GunGroupInfoAns& operator=(const GunGroupInfoAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GunGroupInfoAns(GunGroupInfoAns&& from) noexcept
    : GunGroupInfoAns() {
    *this = ::std::move(from);
  }

  inline GunGroupInfoAns& operator=(GunGroupInfoAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GunGroupInfoAns& default_instance();

  static inline const GunGroupInfoAns* internal_default_instance() {
    return reinterpret_cast<const GunGroupInfoAns*>(
               &_GunGroupInfoAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(GunGroupInfoAns* other);
  friend void swap(GunGroupInfoAns& a, GunGroupInfoAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GunGroupInfoAns* New() const PROTOBUF_FINAL { return New(NULL); }

  GunGroupInfoAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GunGroupInfoAns& from);
  void MergeFrom(const GunGroupInfoAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GunGroupInfoAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 GunNumber = 1;
  void clear_gunnumber();
  static const int kGunNumberFieldNumber = 1;
  ::google::protobuf::int32 gunnumber() const;
  void set_gunnumber(::google::protobuf::int32 value);

  // int32 MasterGun = 2;
  void clear_mastergun();
  static const int kMasterGunFieldNumber = 2;
  ::google::protobuf::int32 mastergun() const;
  void set_mastergun(::google::protobuf::int32 value);

  // int32 SlaveGun1 = 3;
  void clear_slavegun1();
  static const int kSlaveGun1FieldNumber = 3;
  ::google::protobuf::int32 slavegun1() const;
  void set_slavegun1(::google::protobuf::int32 value);

  // int32 SlaveGun2 = 4;
  void clear_slavegun2();
  static const int kSlaveGun2FieldNumber = 4;
  ::google::protobuf::int32 slavegun2() const;
  void set_slavegun2(::google::protobuf::int32 value);

  // int32 SlaveGun3 = 5;
  void clear_slavegun3();
  static const int kSlaveGun3FieldNumber = 5;
  ::google::protobuf::int32 slavegun3() const;
  void set_slavegun3(::google::protobuf::int32 value);

  // int32 SlaveGun4 = 6;
  void clear_slavegun4();
  static const int kSlaveGun4FieldNumber = 6;
  ::google::protobuf::int32 slavegun4() const;
  void set_slavegun4(::google::protobuf::int32 value);

  // int32 SlaveGun5 = 7;
  void clear_slavegun5();
  static const int kSlaveGun5FieldNumber = 7;
  ::google::protobuf::int32 slavegun5() const;
  void set_slavegun5(::google::protobuf::int32 value);

  // int32 SlaveGun6 = 8;
  void clear_slavegun6();
  static const int kSlaveGun6FieldNumber = 8;
  ::google::protobuf::int32 slavegun6() const;
  void set_slavegun6(::google::protobuf::int32 value);

  // .charge.protobuf.BoolEnum Finished = 9;
  void clear_finished();
  static const int kFinishedFieldNumber = 9;
  ::charge::protobuf::BoolEnum finished() const;
  void set_finished(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.GunGroupInfoAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 gunnumber_;
  ::google::protobuf::int32 mastergun_;
  ::google::protobuf::int32 slavegun1_;
  ::google::protobuf::int32 slavegun2_;
  ::google::protobuf::int32 slavegun3_;
  ::google::protobuf::int32 slavegun4_;
  ::google::protobuf::int32 slavegun5_;
  ::google::protobuf::int32 slavegun6_;
  int finished_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnToEmergencyCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TurnToEmergencyCmdReq) */ {
 public:
  TurnToEmergencyCmdReq();
  virtual ~TurnToEmergencyCmdReq();

  TurnToEmergencyCmdReq(const TurnToEmergencyCmdReq& from);

  inline TurnToEmergencyCmdReq& operator=(const TurnToEmergencyCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TurnToEmergencyCmdReq(TurnToEmergencyCmdReq&& from) noexcept
    : TurnToEmergencyCmdReq() {
    *this = ::std::move(from);
  }

  inline TurnToEmergencyCmdReq& operator=(TurnToEmergencyCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnToEmergencyCmdReq& default_instance();

  static inline const TurnToEmergencyCmdReq* internal_default_instance() {
    return reinterpret_cast<const TurnToEmergencyCmdReq*>(
               &_TurnToEmergencyCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(TurnToEmergencyCmdReq* other);
  friend void swap(TurnToEmergencyCmdReq& a, TurnToEmergencyCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TurnToEmergencyCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnToEmergencyCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TurnToEmergencyCmdReq& from);
  void MergeFrom(const TurnToEmergencyCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TurnToEmergencyCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 SetFlag = 2;
  void clear_setflag();
  static const int kSetFlagFieldNumber = 2;
  ::google::protobuf::int32 setflag() const;
  void set_setflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.TurnToEmergencyCmdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 setflag_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnToEmergencyCmdAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.TurnToEmergencyCmdAns) */ {
 public:
  TurnToEmergencyCmdAns();
  virtual ~TurnToEmergencyCmdAns();

  TurnToEmergencyCmdAns(const TurnToEmergencyCmdAns& from);

  inline TurnToEmergencyCmdAns& operator=(const TurnToEmergencyCmdAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TurnToEmergencyCmdAns(TurnToEmergencyCmdAns&& from) noexcept
    : TurnToEmergencyCmdAns() {
    *this = ::std::move(from);
  }

  inline TurnToEmergencyCmdAns& operator=(TurnToEmergencyCmdAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnToEmergencyCmdAns& default_instance();

  static inline const TurnToEmergencyCmdAns* internal_default_instance() {
    return reinterpret_cast<const TurnToEmergencyCmdAns*>(
               &_TurnToEmergencyCmdAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(TurnToEmergencyCmdAns* other);
  friend void swap(TurnToEmergencyCmdAns& a, TurnToEmergencyCmdAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TurnToEmergencyCmdAns* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnToEmergencyCmdAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TurnToEmergencyCmdAns& from);
  void MergeFrom(const TurnToEmergencyCmdAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TurnToEmergencyCmdAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // int32 SetFlag = 2;
  void clear_setflag();
  static const int kSetFlagFieldNumber = 2;
  ::google::protobuf::int32 setflag() const;
  void set_setflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.TurnToEmergencyCmdAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  int confirm_;
  ::google::protobuf::int32 setflag_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClearAccountCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ClearAccountCmdReq) */ {
 public:
  ClearAccountCmdReq();
  virtual ~ClearAccountCmdReq();

  ClearAccountCmdReq(const ClearAccountCmdReq& from);

  inline ClearAccountCmdReq& operator=(const ClearAccountCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClearAccountCmdReq(ClearAccountCmdReq&& from) noexcept
    : ClearAccountCmdReq() {
    *this = ::std::move(from);
  }

  inline ClearAccountCmdReq& operator=(ClearAccountCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearAccountCmdReq& default_instance();

  static inline const ClearAccountCmdReq* internal_default_instance() {
    return reinterpret_cast<const ClearAccountCmdReq*>(
               &_ClearAccountCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(ClearAccountCmdReq* other);
  friend void swap(ClearAccountCmdReq& a, ClearAccountCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClearAccountCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClearAccountCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClearAccountCmdReq& from);
  void MergeFrom(const ClearAccountCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClearAccountCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 ClearFlag = 2;
  void clear_clearflag();
  static const int kClearFlagFieldNumber = 2;
  ::google::protobuf::int32 clearflag() const;
  void set_clearflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ClearAccountCmdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 clearflag_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClearAccountCmdAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ClearAccountCmdAns) */ {
 public:
  ClearAccountCmdAns();
  virtual ~ClearAccountCmdAns();

  ClearAccountCmdAns(const ClearAccountCmdAns& from);

  inline ClearAccountCmdAns& operator=(const ClearAccountCmdAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClearAccountCmdAns(ClearAccountCmdAns&& from) noexcept
    : ClearAccountCmdAns() {
    *this = ::std::move(from);
  }

  inline ClearAccountCmdAns& operator=(ClearAccountCmdAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearAccountCmdAns& default_instance();

  static inline const ClearAccountCmdAns* internal_default_instance() {
    return reinterpret_cast<const ClearAccountCmdAns*>(
               &_ClearAccountCmdAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(ClearAccountCmdAns* other);
  friend void swap(ClearAccountCmdAns& a, ClearAccountCmdAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClearAccountCmdAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ClearAccountCmdAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClearAccountCmdAns& from);
  void MergeFrom(const ClearAccountCmdAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClearAccountCmdAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ClearAccountCmdAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CallAllDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.CallAllDataReq) */ {
 public:
  CallAllDataReq();
  virtual ~CallAllDataReq();

  CallAllDataReq(const CallAllDataReq& from);

  inline CallAllDataReq& operator=(const CallAllDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CallAllDataReq(CallAllDataReq&& from) noexcept
    : CallAllDataReq() {
    *this = ::std::move(from);
  }

  inline CallAllDataReq& operator=(CallAllDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CallAllDataReq& default_instance();

  static inline const CallAllDataReq* internal_default_instance() {
    return reinterpret_cast<const CallAllDataReq*>(
               &_CallAllDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CallAllDataReq* other);
  friend void swap(CallAllDataReq& a, CallAllDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CallAllDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CallAllDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CallAllDataReq& from);
  void MergeFrom(const CallAllDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CallAllDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // string Reserved3 = 103;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 103;
  const ::std::string& reserved3() const;
  void set_reserved3(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved3(::std::string&& value);
  #endif
  void set_reserved3(const char* value);
  void set_reserved3(const char* value, size_t size);
  ::std::string* mutable_reserved3();
  ::std::string* release_reserved3();
  void set_allocated_reserved3(::std::string* reserved3);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // int32 CallFlag = 2;
  void clear_callflag();
  static const int kCallFlagFieldNumber = 2;
  ::google::protobuf::int32 callflag() const;
  void set_callflag(::google::protobuf::int32 value);

  // int32 CanIndex = 3;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 3;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.CallAllDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::internal::ArenaStringPtr reserved3_;
  ::charge::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 callflag_;
  ::google::protobuf::int32 canindex_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkStateChangeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkStateChangeReq) */ {
 public:
  ParkStateChangeReq();
  virtual ~ParkStateChangeReq();

  ParkStateChangeReq(const ParkStateChangeReq& from);

  inline ParkStateChangeReq& operator=(const ParkStateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkStateChangeReq(ParkStateChangeReq&& from) noexcept
    : ParkStateChangeReq() {
    *this = ::std::move(from);
  }

  inline ParkStateChangeReq& operator=(ParkStateChangeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkStateChangeReq& default_instance();

  static inline const ParkStateChangeReq* internal_default_instance() {
    return reinterpret_cast<const ParkStateChangeReq*>(
               &_ParkStateChangeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(ParkStateChangeReq* other);
  friend void swap(ParkStateChangeReq& a, ParkStateChangeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkStateChangeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkStateChangeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkStateChangeReq& from);
  void MergeFrom(const ParkStateChangeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkStateChangeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DeviceID = 2;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // .charge.protobuf.ParkingAlarmType ParkingAlarm = 3;
  bool has_parkingalarm() const;
  void clear_parkingalarm();
  static const int kParkingAlarmFieldNumber = 3;
  const ::charge::protobuf::ParkingAlarmType& parkingalarm() const;
  ::charge::protobuf::ParkingAlarmType* mutable_parkingalarm();
  ::charge::protobuf::ParkingAlarmType* release_parkingalarm();
  void set_allocated_parkingalarm(::charge::protobuf::ParkingAlarmType* parkingalarm);

  // .charge.protobuf.ParkingStatusEnum ParkingState = 4;
  void clear_parkingstate();
  static const int kParkingStateFieldNumber = 4;
  ::charge::protobuf::ParkingStatusEnum parkingstate() const;
  void set_parkingstate(::charge::protobuf::ParkingStatusEnum value);

  // int32 RemainBattery = 5;
  void clear_remainbattery();
  static const int kRemainBatteryFieldNumber = 5;
  ::google::protobuf::int32 remainbattery() const;
  void set_remainbattery(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkStateChangeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  ::charge::protobuf::ParkingAlarmType* parkingalarm_;
  int parkingstate_;
  ::google::protobuf::int32 remainbattery_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkingAlarmType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkingAlarmType) */ {
 public:
  ParkingAlarmType();
  virtual ~ParkingAlarmType();

  ParkingAlarmType(const ParkingAlarmType& from);

  inline ParkingAlarmType& operator=(const ParkingAlarmType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkingAlarmType(ParkingAlarmType&& from) noexcept
    : ParkingAlarmType() {
    *this = ::std::move(from);
  }

  inline ParkingAlarmType& operator=(ParkingAlarmType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkingAlarmType& default_instance();

  static inline const ParkingAlarmType* internal_default_instance() {
    return reinterpret_cast<const ParkingAlarmType*>(
               &_ParkingAlarmType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(ParkingAlarmType* other);
  friend void swap(ParkingAlarmType& a, ParkingAlarmType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkingAlarmType* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkingAlarmType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkingAlarmType& from);
  void MergeFrom(const ParkingAlarmType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkingAlarmType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .charge.protobuf.ParkingAlarmCodeEnum ParkingAlarmCode = 2;
  int parkingalarmcode_size() const;
  void clear_parkingalarmcode();
  static const int kParkingAlarmCodeFieldNumber = 2;
  ::charge::protobuf::ParkingAlarmCodeEnum parkingalarmcode(int index) const;
  void set_parkingalarmcode(int index, ::charge::protobuf::ParkingAlarmCodeEnum value);
  void add_parkingalarmcode(::charge::protobuf::ParkingAlarmCodeEnum value);
  const ::google::protobuf::RepeatedField<int>& parkingalarmcode() const;
  ::google::protobuf::RepeatedField<int>* mutable_parkingalarmcode();

  // int32 SevereLevel = 1;
  void clear_severelevel();
  static const int kSevereLevelFieldNumber = 1;
  ::google::protobuf::int32 severelevel() const;
  void set_severelevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkingAlarmType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> parkingalarmcode_;
  mutable int _parkingalarmcode_cached_byte_size_;
  ::google::protobuf::int32 severelevel_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkStateCallReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkStateCallReq) */ {
 public:
  ParkStateCallReq();
  virtual ~ParkStateCallReq();

  ParkStateCallReq(const ParkStateCallReq& from);

  inline ParkStateCallReq& operator=(const ParkStateCallReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkStateCallReq(ParkStateCallReq&& from) noexcept
    : ParkStateCallReq() {
    *this = ::std::move(from);
  }

  inline ParkStateCallReq& operator=(ParkStateCallReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkStateCallReq& default_instance();

  static inline const ParkStateCallReq* internal_default_instance() {
    return reinterpret_cast<const ParkStateCallReq*>(
               &_ParkStateCallReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(ParkStateCallReq* other);
  friend void swap(ParkStateCallReq& a, ParkStateCallReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkStateCallReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkStateCallReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkStateCallReq& from);
  void MergeFrom(const ParkStateCallReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkStateCallReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DeviceID = 2;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkStateCallReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkParaGetReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkParaGetReq) */ {
 public:
  ParkParaGetReq();
  virtual ~ParkParaGetReq();

  ParkParaGetReq(const ParkParaGetReq& from);

  inline ParkParaGetReq& operator=(const ParkParaGetReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkParaGetReq(ParkParaGetReq&& from) noexcept
    : ParkParaGetReq() {
    *this = ::std::move(from);
  }

  inline ParkParaGetReq& operator=(ParkParaGetReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkParaGetReq& default_instance();

  static inline const ParkParaGetReq* internal_default_instance() {
    return reinterpret_cast<const ParkParaGetReq*>(
               &_ParkParaGetReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(ParkParaGetReq* other);
  friend void swap(ParkParaGetReq& a, ParkParaGetReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkParaGetReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkParaGetReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkParaGetReq& from);
  void MergeFrom(const ParkParaGetReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkParaGetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DeviceID = 2;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::charge::protobuf::DateTime& sendtime() const;
  ::charge::protobuf::DateTime* mutable_sendtime();
  ::charge::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::charge::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkParaGetReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkParaGetAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkParaGetAns) */ {
 public:
  ParkParaGetAns();
  virtual ~ParkParaGetAns();

  ParkParaGetAns(const ParkParaGetAns& from);

  inline ParkParaGetAns& operator=(const ParkParaGetAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkParaGetAns(ParkParaGetAns&& from) noexcept
    : ParkParaGetAns() {
    *this = ::std::move(from);
  }

  inline ParkParaGetAns& operator=(ParkParaGetAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkParaGetAns& default_instance();

  static inline const ParkParaGetAns* internal_default_instance() {
    return reinterpret_cast<const ParkParaGetAns*>(
               &_ParkParaGetAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(ParkParaGetAns* other);
  friend void swap(ParkParaGetAns& a, ParkParaGetAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkParaGetAns* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkParaGetAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkParaGetAns& from);
  void MergeFrom(const ParkParaGetAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkParaGetAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .charge.protobuf.ParkParamInfo ParkingParam = 2;
  bool has_parkingparam() const;
  void clear_parkingparam();
  static const int kParkingParamFieldNumber = 2;
  const ::charge::protobuf::ParkParamInfo& parkingparam() const;
  ::charge::protobuf::ParkParamInfo* mutable_parkingparam();
  ::charge::protobuf::ParkParamInfo* release_parkingparam();
  void set_allocated_parkingparam(::charge::protobuf::ParkParamInfo* parkingparam);

  // .charge.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::charge::protobuf::BoolEnum confirm() const;
  void set_confirm(::charge::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkParaGetAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::charge::protobuf::ParkParamInfo* parkingparam_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParkParamInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.ParkParamInfo) */ {
 public:
  ParkParamInfo();
  virtual ~ParkParamInfo();

  ParkParamInfo(const ParkParamInfo& from);

  inline ParkParamInfo& operator=(const ParkParamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParkParamInfo(ParkParamInfo&& from) noexcept
    : ParkParamInfo() {
    *this = ::std::move(from);
  }

  inline ParkParamInfo& operator=(ParkParamInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParkParamInfo& default_instance();

  static inline const ParkParamInfo* internal_default_instance() {
    return reinterpret_cast<const ParkParamInfo*>(
               &_ParkParamInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(ParkParamInfo* other);
  friend void swap(ParkParamInfo& a, ParkParamInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParkParamInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ParkParamInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParkParamInfo& from);
  void MergeFrom(const ParkParamInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParkParamInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DeviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string Temperature = 2;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 2;
  const ::std::string& temperature() const;
  void set_temperature(const ::std::string& value);
  #if LANG_CXX11
  void set_temperature(::std::string&& value);
  #endif
  void set_temperature(const char* value);
  void set_temperature(const char* value, size_t size);
  ::std::string* mutable_temperature();
  ::std::string* release_temperature();
  void set_allocated_temperature(::std::string* temperature);

  // string Humidity = 3;
  void clear_humidity();
  static const int kHumidityFieldNumber = 3;
  const ::std::string& humidity() const;
  void set_humidity(const ::std::string& value);
  #if LANG_CXX11
  void set_humidity(::std::string&& value);
  #endif
  void set_humidity(const char* value);
  void set_humidity(const char* value, size_t size);
  ::std::string* mutable_humidity();
  ::std::string* release_humidity();
  void set_allocated_humidity(::std::string* humidity);

  // string BatteryCapacity = 4;
  void clear_batterycapacity();
  static const int kBatteryCapacityFieldNumber = 4;
  const ::std::string& batterycapacity() const;
  void set_batterycapacity(const ::std::string& value);
  #if LANG_CXX11
  void set_batterycapacity(::std::string&& value);
  #endif
  void set_batterycapacity(const char* value);
  void set_batterycapacity(const char* value, size_t size);
  ::std::string* mutable_batterycapacity();
  ::std::string* release_batterycapacity();
  void set_allocated_batterycapacity(::std::string* batterycapacity);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:charge.protobuf.ParkParamInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr temperature_;
  ::google::protobuf::internal::ArenaStringPtr humidity_;
  ::google::protobuf::internal::ArenaStringPtr batterycapacity_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DateTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:charge.protobuf.DateTime) */ {
 public:
  DateTime();
  virtual ~DateTime();

  DateTime(const DateTime& from);

  inline DateTime& operator=(const DateTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DateTime(DateTime&& from) noexcept
    : DateTime() {
    *this = ::std::move(from);
  }

  inline DateTime& operator=(DateTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DateTime& default_instance();

  static inline const DateTime* internal_default_instance() {
    return reinterpret_cast<const DateTime*>(
               &_DateTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(DateTime* other);
  friend void swap(DateTime& a, DateTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DateTime* New() const PROTOBUF_FINAL { return New(NULL); }

  DateTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DateTime& from);
  void MergeFrom(const DateTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DateTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:charge.protobuf.DateTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct protobuf_chargeprotobuf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HeartbeatReq

// .charge.protobuf.DateTime CurrentTime = 1;
inline bool HeartbeatReq::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void HeartbeatReq::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::charge::protobuf::DateTime& HeartbeatReq::currenttime() const {
  const ::charge::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.HeartbeatReq.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* HeartbeatReq::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.HeartbeatReq.CurrentTime)
  return currenttime_;
}
inline ::charge::protobuf::DateTime* HeartbeatReq::release_currenttime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.HeartbeatReq.CurrentTime)
  
  ::charge::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void HeartbeatReq::set_allocated_currenttime(::charge::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.HeartbeatReq.CurrentTime)
}

// -------------------------------------------------------------------

// HeartbeatAns

// .charge.protobuf.DateTime CurrentTime = 1;
inline bool HeartbeatAns::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void HeartbeatAns::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::charge::protobuf::DateTime& HeartbeatAns::currenttime() const {
  const ::charge::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.HeartbeatAns.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* HeartbeatAns::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.HeartbeatAns.CurrentTime)
  return currenttime_;
}
inline ::charge::protobuf::DateTime* HeartbeatAns::release_currenttime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.HeartbeatAns.CurrentTime)
  
  ::charge::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void HeartbeatAns::set_allocated_currenttime(::charge::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.HeartbeatAns.CurrentTime)
}

// -------------------------------------------------------------------

// CommAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void CommAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum CommAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CommAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void CommAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CommAns.Confirm)
}

// -------------------------------------------------------------------

// LoginReq

// string Key = 1;
inline void LoginReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::key() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.Key)
  return key_.GetNoArena();
}
inline void LoginReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.Key)
}
#if LANG_CXX11
inline void LoginReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.Key)
}
#endif
inline void LoginReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.Key)
}
inline void LoginReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.Key)
}
inline ::std::string* LoginReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_key() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.Key)
}

// .charge.protobuf.DateTime SendTime = 2;
inline bool LoginReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void LoginReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& LoginReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* LoginReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* LoginReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void LoginReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.SendTime)
}

// string SerialNumber = 3;
inline void LoginReq::clear_serialnumber() {
  serialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::serialnumber() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.SerialNumber)
  return serialnumber_.GetNoArena();
}
inline void LoginReq::set_serialnumber(const ::std::string& value) {
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.SerialNumber)
}
#if LANG_CXX11
inline void LoginReq::set_serialnumber(::std::string&& value) {
  
  serialnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.SerialNumber)
}
#endif
inline void LoginReq::set_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.SerialNumber)
}
inline void LoginReq::set_serialnumber(const char* value, size_t size) {
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.SerialNumber)
}
inline ::std::string* LoginReq::mutable_serialnumber() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.SerialNumber)
  return serialnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_serialnumber() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.SerialNumber)
  
  return serialnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_serialnumber(::std::string* serialnumber) {
  if (serialnumber != NULL) {
    
  } else {
    
  }
  serialnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialnumber);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.SerialNumber)
}

// string CtrlProtoVersion = 4;
inline void LoginReq::clear_ctrlprotoversion() {
  ctrlprotoversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlprotoversion() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.CtrlProtoVersion)
  return ctrlprotoversion_.GetNoArena();
}
inline void LoginReq::set_ctrlprotoversion(const ::std::string& value) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.CtrlProtoVersion)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlprotoversion(::std::string&& value) {
  
  ctrlprotoversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.CtrlProtoVersion)
}
#endif
inline void LoginReq::set_ctrlprotoversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.CtrlProtoVersion)
}
inline void LoginReq::set_ctrlprotoversion(const char* value, size_t size) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.CtrlProtoVersion)
}
inline ::std::string* LoginReq::mutable_ctrlprotoversion() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.CtrlProtoVersion)
  return ctrlprotoversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlprotoversion() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.CtrlProtoVersion)
  
  return ctrlprotoversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion) {
  if (ctrlprotoversion != NULL) {
    
  } else {
    
  }
  ctrlprotoversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlprotoversion);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.CtrlProtoVersion)
}

// string CtrlVendor = 5;
inline void LoginReq::clear_ctrlvendor() {
  ctrlvendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlvendor() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.CtrlVendor)
  return ctrlvendor_.GetNoArena();
}
inline void LoginReq::set_ctrlvendor(const ::std::string& value) {
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.CtrlVendor)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlvendor(::std::string&& value) {
  
  ctrlvendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.CtrlVendor)
}
#endif
inline void LoginReq::set_ctrlvendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.CtrlVendor)
}
inline void LoginReq::set_ctrlvendor(const char* value, size_t size) {
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.CtrlVendor)
}
inline ::std::string* LoginReq::mutable_ctrlvendor() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.CtrlVendor)
  return ctrlvendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlvendor() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.CtrlVendor)
  
  return ctrlvendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlvendor(::std::string* ctrlvendor) {
  if (ctrlvendor != NULL) {
    
  } else {
    
  }
  ctrlvendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlvendor);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.CtrlVendor)
}

// string CtrlSwVersion = 6;
inline void LoginReq::clear_ctrlswversion() {
  ctrlswversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlswversion() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.CtrlSwVersion)
  return ctrlswversion_.GetNoArena();
}
inline void LoginReq::set_ctrlswversion(const ::std::string& value) {
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.CtrlSwVersion)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlswversion(::std::string&& value) {
  
  ctrlswversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.CtrlSwVersion)
}
#endif
inline void LoginReq::set_ctrlswversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.CtrlSwVersion)
}
inline void LoginReq::set_ctrlswversion(const char* value, size_t size) {
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.CtrlSwVersion)
}
inline ::std::string* LoginReq::mutable_ctrlswversion() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.CtrlSwVersion)
  return ctrlswversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlswversion() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.CtrlSwVersion)
  
  return ctrlswversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlswversion(::std::string* ctrlswversion) {
  if (ctrlswversion != NULL) {
    
  } else {
    
  }
  ctrlswversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlswversion);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.CtrlSwVersion)
}

// .charge.protobuf.CtrlHardwareType CtrlHwType = 7;
inline void LoginReq::clear_ctrlhwtype() {
  ctrlhwtype_ = 0;
}
inline ::charge::protobuf::CtrlHardwareType LoginReq::ctrlhwtype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.CtrlHwType)
  return static_cast< ::charge::protobuf::CtrlHardwareType >(ctrlhwtype_);
}
inline void LoginReq::set_ctrlhwtype(::charge::protobuf::CtrlHardwareType value) {
  
  ctrlhwtype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.CtrlHwType)
}

// string DataCenter = 8;
inline void LoginReq::clear_datacenter() {
  datacenter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::datacenter() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.DataCenter)
  return datacenter_.GetNoArena();
}
inline void LoginReq::set_datacenter(const ::std::string& value) {
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.DataCenter)
}
#if LANG_CXX11
inline void LoginReq::set_datacenter(::std::string&& value) {
  
  datacenter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.DataCenter)
}
#endif
inline void LoginReq::set_datacenter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.DataCenter)
}
inline void LoginReq::set_datacenter(const char* value, size_t size) {
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.DataCenter)
}
inline ::std::string* LoginReq::mutable_datacenter() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.DataCenter)
  return datacenter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_datacenter() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.DataCenter)
  
  return datacenter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_datacenter(::std::string* datacenter) {
  if (datacenter != NULL) {
    
  } else {
    
  }
  datacenter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datacenter);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.DataCenter)
}

// int32 CtrlStatus = 9;
inline void LoginReq::clear_ctrlstatus() {
  ctrlstatus_ = 0;
}
inline ::google::protobuf::int32 LoginReq::ctrlstatus() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.CtrlStatus)
  return ctrlstatus_;
}
inline void LoginReq::set_ctrlstatus(::google::protobuf::int32 value) {
  
  ctrlstatus_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.CtrlStatus)
}

// int32 BillCount = 10;
inline void LoginReq::clear_billcount() {
  billcount_ = 0;
}
inline ::google::protobuf::int32 LoginReq::billcount() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.BillCount)
  return billcount_;
}
inline void LoginReq::set_billcount(::google::protobuf::int32 value) {
  
  billcount_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.BillCount)
}

// string Reserved1 = 101;
inline void LoginReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void LoginReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.Reserved1)
}
#if LANG_CXX11
inline void LoginReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.Reserved1)
}
#endif
inline void LoginReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.Reserved1)
}
inline void LoginReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.Reserved1)
}
inline ::std::string* LoginReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.Reserved1)
}

// string Reserved2 = 102;
inline void LoginReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void LoginReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginReq.Reserved2)
}
#if LANG_CXX11
inline void LoginReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.LoginReq.Reserved2)
}
#endif
inline void LoginReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.LoginReq.Reserved2)
}
inline void LoginReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.LoginReq.Reserved2)
}
inline ::std::string* LoginReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginReq.Reserved2)
}

// -------------------------------------------------------------------

// LoginAns

// .charge.protobuf.RegistrationStatus Status = 1;
inline void LoginAns::clear_status() {
  status_ = 0;
}
inline ::charge::protobuf::RegistrationStatus LoginAns::status() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginAns.Status)
  return static_cast< ::charge::protobuf::RegistrationStatus >(status_);
}
inline void LoginAns::set_status(::charge::protobuf::RegistrationStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginAns.Status)
}

// .charge.protobuf.DateTime CurrentTime = 2;
inline bool LoginAns::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void LoginAns::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::charge::protobuf::DateTime& LoginAns::currenttime() const {
  const ::charge::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginAns.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* LoginAns::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.LoginAns.CurrentTime)
  return currenttime_;
}
inline ::charge::protobuf::DateTime* LoginAns::release_currenttime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.LoginAns.CurrentTime)
  
  ::charge::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void LoginAns::set_allocated_currenttime(::charge::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.LoginAns.CurrentTime)
}

// int32 Interval = 3;
inline void LoginAns::clear_interval() {
  interval_ = 0;
}
inline ::google::protobuf::int32 LoginAns::interval() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.LoginAns.Interval)
  return interval_;
}
inline void LoginAns::set_interval(::google::protobuf::int32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.LoginAns.Interval)
}

// -------------------------------------------------------------------

// OfflineReq

// .charge.protobuf.OfflineReason Reason = 1;
inline void OfflineReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::OfflineReason OfflineReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineReq.Reason)
  return static_cast< ::charge::protobuf::OfflineReason >(reason_);
}
inline void OfflineReq::set_reason(::charge::protobuf::OfflineReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.OfflineReq.Reason)
}

// .charge.protobuf.DateTime OfflineTime = 2;
inline bool OfflineReq::has_offlinetime() const {
  return this != internal_default_instance() && offlinetime_ != NULL;
}
inline void OfflineReq::clear_offlinetime() {
  if (GetArenaNoVirtual() == NULL && offlinetime_ != NULL) delete offlinetime_;
  offlinetime_ = NULL;
}
inline const ::charge::protobuf::DateTime& OfflineReq::offlinetime() const {
  const ::charge::protobuf::DateTime* p = offlinetime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineReq.OfflineTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* OfflineReq::mutable_offlinetime() {
  
  if (offlinetime_ == NULL) {
    offlinetime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.OfflineReq.OfflineTime)
  return offlinetime_;
}
inline ::charge::protobuf::DateTime* OfflineReq::release_offlinetime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.OfflineReq.OfflineTime)
  
  ::charge::protobuf::DateTime* temp = offlinetime_;
  offlinetime_ = NULL;
  return temp;
}
inline void OfflineReq::set_allocated_offlinetime(::charge::protobuf::DateTime* offlinetime) {
  delete offlinetime_;
  offlinetime_ = offlinetime;
  if (offlinetime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.OfflineReq.OfflineTime)
}

// string CtrlProtoVersion = 3;
inline void OfflineReq::clear_ctrlprotoversion() {
  ctrlprotoversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::ctrlprotoversion() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineReq.CtrlProtoVersion)
  return ctrlprotoversion_.GetNoArena();
}
inline void OfflineReq::set_ctrlprotoversion(const ::std::string& value) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.OfflineReq.CtrlProtoVersion)
}
#if LANG_CXX11
inline void OfflineReq::set_ctrlprotoversion(::std::string&& value) {
  
  ctrlprotoversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.OfflineReq.CtrlProtoVersion)
}
#endif
inline void OfflineReq::set_ctrlprotoversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.OfflineReq.CtrlProtoVersion)
}
inline void OfflineReq::set_ctrlprotoversion(const char* value, size_t size) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.OfflineReq.CtrlProtoVersion)
}
inline ::std::string* OfflineReq::mutable_ctrlprotoversion() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.OfflineReq.CtrlProtoVersion)
  return ctrlprotoversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_ctrlprotoversion() {
  // @@protoc_insertion_point(field_release:charge.protobuf.OfflineReq.CtrlProtoVersion)
  
  return ctrlprotoversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion) {
  if (ctrlprotoversion != NULL) {
    
  } else {
    
  }
  ctrlprotoversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlprotoversion);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.OfflineReq.CtrlProtoVersion)
}

// string Reserved1 = 101;
inline void OfflineReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void OfflineReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.OfflineReq.Reserved1)
}
#if LANG_CXX11
inline void OfflineReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.OfflineReq.Reserved1)
}
#endif
inline void OfflineReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.OfflineReq.Reserved1)
}
inline void OfflineReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.OfflineReq.Reserved1)
}
inline ::std::string* OfflineReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.OfflineReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.OfflineReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.OfflineReq.Reserved1)
}

// string Reserved2 = 102;
inline void OfflineReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void OfflineReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.OfflineReq.Reserved2)
}
#if LANG_CXX11
inline void OfflineReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.OfflineReq.Reserved2)
}
#endif
inline void OfflineReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.OfflineReq.Reserved2)
}
inline void OfflineReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.OfflineReq.Reserved2)
}
inline ::std::string* OfflineReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.OfflineReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.OfflineReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.OfflineReq.Reserved2)
}

// -------------------------------------------------------------------

// OfflineAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void OfflineAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum OfflineAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.OfflineAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void OfflineAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.OfflineAns.Confirm)
}

// -------------------------------------------------------------------

// StartChargeCmdReq

// int32 CanIndex = 1;
inline void StartChargeCmdReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StartChargeCmdReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.CanIndex)
  return canindex_;
}
inline void StartChargeCmdReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.CanIndex)
}

// .charge.protobuf.StartChargeType Type = 2;
inline void StartChargeCmdReq::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::StartChargeType StartChargeCmdReq::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Type)
  return static_cast< ::charge::protobuf::StartChargeType >(type_);
}
inline void StartChargeCmdReq::set_type(::charge::protobuf::StartChargeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.Type)
}

// string BillCode = 3;
inline void StartChargeCmdReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.BillCode)
  return billcode_.GetNoArena();
}
inline void StartChargeCmdReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.BillCode)
}
#if LANG_CXX11
inline void StartChargeCmdReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdReq.BillCode)
}
#endif
inline void StartChargeCmdReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdReq.BillCode)
}
inline void StartChargeCmdReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdReq.BillCode)
}
inline ::std::string* StartChargeCmdReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.BillCode)
}

// .charge.protobuf.AccountInfo Account = 4;
inline bool StartChargeCmdReq::has_account() const {
  return this != internal_default_instance() && account_ != NULL;
}
inline void StartChargeCmdReq::clear_account() {
  if (GetArenaNoVirtual() == NULL && account_ != NULL) delete account_;
  account_ = NULL;
}
inline const ::charge::protobuf::AccountInfo& StartChargeCmdReq::account() const {
  const ::charge::protobuf::AccountInfo* p = account_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Account)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::AccountInfo*>(
      &::charge::protobuf::_AccountInfo_default_instance_);
}
inline ::charge::protobuf::AccountInfo* StartChargeCmdReq::mutable_account() {
  
  if (account_ == NULL) {
    account_ = new ::charge::protobuf::AccountInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Account)
  return account_;
}
inline ::charge::protobuf::AccountInfo* StartChargeCmdReq::release_account() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.Account)
  
  ::charge::protobuf::AccountInfo* temp = account_;
  account_ = NULL;
  return temp;
}
inline void StartChargeCmdReq::set_allocated_account(::charge::protobuf::AccountInfo* account) {
  delete account_;
  account_ = account;
  if (account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.Account)
}

// .charge.protobuf.CruveType CType = 5;
inline void StartChargeCmdReq::clear_ctype() {
  ctype_ = 0;
}
inline ::charge::protobuf::CruveType StartChargeCmdReq::ctype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.CType)
  return static_cast< ::charge::protobuf::CruveType >(ctype_);
}
inline void StartChargeCmdReq::set_ctype(::charge::protobuf::CruveType value) {
  
  ctype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.CType)
}

// repeated .charge.protobuf.ChargingStrategy Cruve = 6;
inline int StartChargeCmdReq::cruve_size() const {
  return cruve_.size();
}
inline void StartChargeCmdReq::clear_cruve() {
  cruve_.Clear();
}
inline const ::charge::protobuf::ChargingStrategy& StartChargeCmdReq::cruve(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Cruve)
  return cruve_.Get(index);
}
inline ::charge::protobuf::ChargingStrategy* StartChargeCmdReq::mutable_cruve(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Cruve)
  return cruve_.Mutable(index);
}
inline ::charge::protobuf::ChargingStrategy* StartChargeCmdReq::add_cruve() {
  // @@protoc_insertion_point(field_add:charge.protobuf.StartChargeCmdReq.Cruve)
  return cruve_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >*
StartChargeCmdReq::mutable_cruve() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StartChargeCmdReq.Cruve)
  return &cruve_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >&
StartChargeCmdReq::cruve() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StartChargeCmdReq.Cruve)
  return cruve_;
}

// int32 AllowedSecond = 7;
inline void StartChargeCmdReq::clear_allowedsecond() {
  allowedsecond_ = 0;
}
inline ::google::protobuf::int32 StartChargeCmdReq::allowedsecond() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.AllowedSecond)
  return allowedsecond_;
}
inline void StartChargeCmdReq::set_allowedsecond(::google::protobuf::int32 value) {
  
  allowedsecond_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.AllowedSecond)
}

// int32 AllowedkWh = 8;
inline void StartChargeCmdReq::clear_allowedkwh() {
  allowedkwh_ = 0;
}
inline ::google::protobuf::int32 StartChargeCmdReq::allowedkwh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.AllowedkWh)
  return allowedkwh_;
}
inline void StartChargeCmdReq::set_allowedkwh(::google::protobuf::int32 value) {
  
  allowedkwh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.AllowedkWh)
}

// int32 AllowedRmb = 9;
inline void StartChargeCmdReq::clear_allowedrmb() {
  allowedrmb_ = 0;
}
inline ::google::protobuf::int32 StartChargeCmdReq::allowedrmb() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.AllowedRmb)
  return allowedrmb_;
}
inline void StartChargeCmdReq::set_allowedrmb(::google::protobuf::int32 value) {
  
  allowedrmb_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.AllowedRmb)
}

// repeated .charge.protobuf.AccountingStrategy Strategy = 10;
inline int StartChargeCmdReq::strategy_size() const {
  return strategy_.size();
}
inline void StartChargeCmdReq::clear_strategy() {
  strategy_.Clear();
}
inline const ::charge::protobuf::AccountingStrategy& StartChargeCmdReq::strategy(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Strategy)
  return strategy_.Get(index);
}
inline ::charge::protobuf::AccountingStrategy* StartChargeCmdReq::mutable_strategy(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Strategy)
  return strategy_.Mutable(index);
}
inline ::charge::protobuf::AccountingStrategy* StartChargeCmdReq::add_strategy() {
  // @@protoc_insertion_point(field_add:charge.protobuf.StartChargeCmdReq.Strategy)
  return strategy_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >*
StartChargeCmdReq::mutable_strategy() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StartChargeCmdReq.Strategy)
  return &strategy_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >&
StartChargeCmdReq::strategy() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StartChargeCmdReq.Strategy)
  return strategy_;
}

// .charge.protobuf.QueueSequence Sequence = 11;
inline bool StartChargeCmdReq::has_sequence() const {
  return this != internal_default_instance() && sequence_ != NULL;
}
inline void StartChargeCmdReq::clear_sequence() {
  if (GetArenaNoVirtual() == NULL && sequence_ != NULL) delete sequence_;
  sequence_ = NULL;
}
inline const ::charge::protobuf::QueueSequence& StartChargeCmdReq::sequence() const {
  const ::charge::protobuf::QueueSequence* p = sequence_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Sequence)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::QueueSequence*>(
      &::charge::protobuf::_QueueSequence_default_instance_);
}
inline ::charge::protobuf::QueueSequence* StartChargeCmdReq::mutable_sequence() {
  
  if (sequence_ == NULL) {
    sequence_ = new ::charge::protobuf::QueueSequence;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Sequence)
  return sequence_;
}
inline ::charge::protobuf::QueueSequence* StartChargeCmdReq::release_sequence() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.Sequence)
  
  ::charge::protobuf::QueueSequence* temp = sequence_;
  sequence_ = NULL;
  return temp;
}
inline void StartChargeCmdReq::set_allocated_sequence(::charge::protobuf::QueueSequence* sequence) {
  delete sequence_;
  sequence_ = sequence;
  if (sequence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.Sequence)
}

// string Reserved1 = 101;
inline void StartChargeCmdReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StartChargeCmdReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.Reserved1)
}
#if LANG_CXX11
inline void StartChargeCmdReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdReq.Reserved1)
}
#endif
inline void StartChargeCmdReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdReq.Reserved1)
}
inline void StartChargeCmdReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdReq.Reserved1)
}
inline ::std::string* StartChargeCmdReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.Reserved1)
}

// string Reserved2 = 102;
inline void StartChargeCmdReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StartChargeCmdReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.Reserved2)
}
#if LANG_CXX11
inline void StartChargeCmdReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdReq.Reserved2)
}
#endif
inline void StartChargeCmdReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdReq.Reserved2)
}
inline void StartChargeCmdReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdReq.Reserved2)
}
inline ::std::string* StartChargeCmdReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.Reserved2)
}

// string Reserved3 = 103;
inline void StartChargeCmdReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void StartChargeCmdReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdReq.Reserved3)
}
#if LANG_CXX11
inline void StartChargeCmdReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdReq.Reserved3)
}
#endif
inline void StartChargeCmdReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdReq.Reserved3)
}
inline void StartChargeCmdReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdReq.Reserved3)
}
inline ::std::string* StartChargeCmdReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdReq.Reserved3)
}

// -------------------------------------------------------------------

// StartChargeCmdAns

// int32 CanIndex = 1;
inline void StartChargeCmdAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StartChargeCmdAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.CanIndex)
  return canindex_;
}
inline void StartChargeCmdAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.CanIndex)
}

// string BillCode = 2;
inline void StartChargeCmdAns::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdAns::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.BillCode)
  return billcode_.GetNoArena();
}
inline void StartChargeCmdAns::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.BillCode)
}
#if LANG_CXX11
inline void StartChargeCmdAns::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdAns.BillCode)
}
#endif
inline void StartChargeCmdAns::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdAns.BillCode)
}
inline void StartChargeCmdAns::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdAns.BillCode)
}
inline ::std::string* StartChargeCmdAns::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdAns.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdAns::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdAns.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdAns::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdAns.BillCode)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void StartChargeCmdAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum StartChargeCmdAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void StartChargeCmdAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.Result)
}

// .charge.protobuf.FailReason Reason = 4;
inline void StartChargeCmdAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason StartChargeCmdAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void StartChargeCmdAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.Reason)
}

// .charge.protobuf.DateTime SendTime = 5;
inline bool StartChargeCmdAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void StartChargeCmdAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& StartChargeCmdAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* StartChargeCmdAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* StartChargeCmdAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void StartChargeCmdAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdAns.SendTime)
}

// string Reserved1 = 101;
inline void StartChargeCmdAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StartChargeCmdAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.Reserved1)
}
#if LANG_CXX11
inline void StartChargeCmdAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdAns.Reserved1)
}
#endif
inline void StartChargeCmdAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdAns.Reserved1)
}
inline void StartChargeCmdAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdAns.Reserved1)
}
inline ::std::string* StartChargeCmdAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdAns.Reserved1)
}

// string Reserved2 = 102;
inline void StartChargeCmdAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeCmdAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeCmdAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StartChargeCmdAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeCmdAns.Reserved2)
}
#if LANG_CXX11
inline void StartChargeCmdAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeCmdAns.Reserved2)
}
#endif
inline void StartChargeCmdAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeCmdAns.Reserved2)
}
inline void StartChargeCmdAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeCmdAns.Reserved2)
}
inline ::std::string* StartChargeCmdAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeCmdAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeCmdAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeCmdAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeCmdAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeCmdAns.Reserved2)
}

// -------------------------------------------------------------------

// StopChargeCmdReq

// int32 CanIndex = 1;
inline void StopChargeCmdReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StopChargeCmdReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.CanIndex)
  return canindex_;
}
inline void StopChargeCmdReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.CanIndex)
}

// string BillCode = 2;
inline void StopChargeCmdReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.BillCode)
  return billcode_.GetNoArena();
}
inline void StopChargeCmdReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.BillCode)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.BillCode)
}
#endif
inline void StopChargeCmdReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.BillCode)
}
inline void StopChargeCmdReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.BillCode)
}
inline ::std::string* StopChargeCmdReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.BillCode)
}

// .charge.protobuf.ChargeRequestType StopType = 3;
inline void StopChargeCmdReq::clear_stoptype() {
  stoptype_ = 0;
}
inline ::charge::protobuf::ChargeRequestType StopChargeCmdReq::stoptype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.StopType)
  return static_cast< ::charge::protobuf::ChargeRequestType >(stoptype_);
}
inline void StopChargeCmdReq::set_stoptype(::charge::protobuf::ChargeRequestType value) {
  
  stoptype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.StopType)
}

// .charge.protobuf.ChargeDischarge ChargeType = 4;
inline void StopChargeCmdReq::clear_chargetype() {
  chargetype_ = 0;
}
inline ::charge::protobuf::ChargeDischarge StopChargeCmdReq::chargetype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.ChargeType)
  return static_cast< ::charge::protobuf::ChargeDischarge >(chargetype_);
}
inline void StopChargeCmdReq::set_chargetype(::charge::protobuf::ChargeDischarge value) {
  
  chargetype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.ChargeType)
}

// string Vin = 5;
inline void StopChargeCmdReq::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.Vin)
  return vin_.GetNoArena();
}
inline void StopChargeCmdReq::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.Vin)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.Vin)
}
#endif
inline void StopChargeCmdReq::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.Vin)
}
inline void StopChargeCmdReq::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.Vin)
}
inline ::std::string* StopChargeCmdReq::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.Vin)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.Vin)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.Vin)
}

// string Plate = 6;
inline void StopChargeCmdReq::clear_plate() {
  plate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::plate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.Plate)
  return plate_.GetNoArena();
}
inline void StopChargeCmdReq::set_plate(const ::std::string& value) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.Plate)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_plate(::std::string&& value) {
  
  plate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.Plate)
}
#endif
inline void StopChargeCmdReq::set_plate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.Plate)
}
inline void StopChargeCmdReq::set_plate(const char* value, size_t size) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.Plate)
}
inline ::std::string* StopChargeCmdReq::mutable_plate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.Plate)
  return plate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_plate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.Plate)
  
  return plate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_plate(::std::string* plate) {
  if (plate != NULL) {
    
  } else {
    
  }
  plate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.Plate)
}

// .charge.protobuf.CardInfo Card = 7;
inline bool StopChargeCmdReq::has_card() const {
  return this != internal_default_instance() && card_ != NULL;
}
inline void StopChargeCmdReq::clear_card() {
  if (GetArenaNoVirtual() == NULL && card_ != NULL) delete card_;
  card_ = NULL;
}
inline const ::charge::protobuf::CardInfo& StopChargeCmdReq::card() const {
  const ::charge::protobuf::CardInfo* p = card_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.Card)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::CardInfo*>(
      &::charge::protobuf::_CardInfo_default_instance_);
}
inline ::charge::protobuf::CardInfo* StopChargeCmdReq::mutable_card() {
  
  if (card_ == NULL) {
    card_ = new ::charge::protobuf::CardInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.Card)
  return card_;
}
inline ::charge::protobuf::CardInfo* StopChargeCmdReq::release_card() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.Card)
  
  ::charge::protobuf::CardInfo* temp = card_;
  card_ = NULL;
  return temp;
}
inline void StopChargeCmdReq::set_allocated_card(::charge::protobuf::CardInfo* card) {
  delete card_;
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.Card)
}

// string UserCode = 8;
inline void StopChargeCmdReq::clear_usercode() {
  usercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::usercode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.UserCode)
  return usercode_.GetNoArena();
}
inline void StopChargeCmdReq::set_usercode(const ::std::string& value) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.UserCode)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_usercode(::std::string&& value) {
  
  usercode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.UserCode)
}
#endif
inline void StopChargeCmdReq::set_usercode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.UserCode)
}
inline void StopChargeCmdReq::set_usercode(const char* value, size_t size) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.UserCode)
}
inline ::std::string* StopChargeCmdReq::mutable_usercode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.UserCode)
  return usercode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_usercode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.UserCode)
  
  return usercode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_usercode(::std::string* usercode) {
  if (usercode != NULL) {
    
  } else {
    
  }
  usercode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usercode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.UserCode)
}

// string Reserved1 = 101;
inline void StopChargeCmdReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StopChargeCmdReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.Reserved1)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.Reserved1)
}
#endif
inline void StopChargeCmdReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.Reserved1)
}
inline void StopChargeCmdReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.Reserved1)
}
inline ::std::string* StopChargeCmdReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.Reserved1)
}

// string Reserved2 = 102;
inline void StopChargeCmdReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StopChargeCmdReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdReq.Reserved2)
}
#if LANG_CXX11
inline void StopChargeCmdReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdReq.Reserved2)
}
#endif
inline void StopChargeCmdReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdReq.Reserved2)
}
inline void StopChargeCmdReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdReq.Reserved2)
}
inline ::std::string* StopChargeCmdReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdReq.Reserved2)
}

// -------------------------------------------------------------------

// StopChargeCmdAns

// int32 CanIndex = 1;
inline void StopChargeCmdAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StopChargeCmdAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.CanIndex)
  return canindex_;
}
inline void StopChargeCmdAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.CanIndex)
}

// string BillCode = 2;
inline void StopChargeCmdAns::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdAns::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.BillCode)
  return billcode_.GetNoArena();
}
inline void StopChargeCmdAns::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.BillCode)
}
#if LANG_CXX11
inline void StopChargeCmdAns::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdAns.BillCode)
}
#endif
inline void StopChargeCmdAns::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdAns.BillCode)
}
inline void StopChargeCmdAns::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdAns.BillCode)
}
inline ::std::string* StopChargeCmdAns::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdAns.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdAns::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdAns.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdAns::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdAns.BillCode)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void StopChargeCmdAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum StopChargeCmdAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void StopChargeCmdAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.Result)
}

// .charge.protobuf.FailReason Reason = 4;
inline void StopChargeCmdAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason StopChargeCmdAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void StopChargeCmdAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.Reason)
}

// .charge.protobuf.DateTime SendTime = 5;
inline bool StopChargeCmdAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void StopChargeCmdAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& StopChargeCmdAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* StopChargeCmdAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* StopChargeCmdAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void StopChargeCmdAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdAns.SendTime)
}

// string Reserved1 = 101;
inline void StopChargeCmdAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StopChargeCmdAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.Reserved1)
}
#if LANG_CXX11
inline void StopChargeCmdAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdAns.Reserved1)
}
#endif
inline void StopChargeCmdAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdAns.Reserved1)
}
inline void StopChargeCmdAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdAns.Reserved1)
}
inline ::std::string* StopChargeCmdAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdAns.Reserved1)
}

// string Reserved2 = 102;
inline void StopChargeCmdAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeCmdAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeCmdAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StopChargeCmdAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeCmdAns.Reserved2)
}
#if LANG_CXX11
inline void StopChargeCmdAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeCmdAns.Reserved2)
}
#endif
inline void StopChargeCmdAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeCmdAns.Reserved2)
}
inline void StopChargeCmdAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeCmdAns.Reserved2)
}
inline ::std::string* StopChargeCmdAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeCmdAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeCmdAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeCmdAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeCmdAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeCmdAns.Reserved2)
}

// -------------------------------------------------------------------

// StartChargeReq

// int32 CanIndex = 1;
inline void StartChargeReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StartChargeReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.CanIndex)
  return canindex_;
}
inline void StartChargeReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.CanIndex)
}

// .charge.protobuf.ChargeRequestType Type = 2;
inline void StartChargeReq::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::ChargeRequestType StartChargeReq::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Type)
  return static_cast< ::charge::protobuf::ChargeRequestType >(type_);
}
inline void StartChargeReq::set_type(::charge::protobuf::ChargeRequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Type)
}

// .charge.protobuf.DateTime SendTime = 3;
inline bool StartChargeReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void StartChargeReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& StartChargeReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* StartChargeReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* StartChargeReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void StartChargeReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.SendTime)
}

// string Vin = 4;
inline void StartChargeReq::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Vin)
  return vin_.GetNoArena();
}
inline void StartChargeReq::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Vin)
}
#if LANG_CXX11
inline void StartChargeReq::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.Vin)
}
#endif
inline void StartChargeReq::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.Vin)
}
inline void StartChargeReq::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.Vin)
}
inline ::std::string* StartChargeReq::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Vin)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Vin)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Vin)
}

// string Plate = 5;
inline void StartChargeReq::clear_plate() {
  plate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::plate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Plate)
  return plate_.GetNoArena();
}
inline void StartChargeReq::set_plate(const ::std::string& value) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Plate)
}
#if LANG_CXX11
inline void StartChargeReq::set_plate(::std::string&& value) {
  
  plate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.Plate)
}
#endif
inline void StartChargeReq::set_plate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.Plate)
}
inline void StartChargeReq::set_plate(const char* value, size_t size) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.Plate)
}
inline ::std::string* StartChargeReq::mutable_plate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Plate)
  return plate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_plate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Plate)
  
  return plate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_plate(::std::string* plate) {
  if (plate != NULL) {
    
  } else {
    
  }
  plate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Plate)
}

// .charge.protobuf.CardInfo Card = 6;
inline bool StartChargeReq::has_card() const {
  return this != internal_default_instance() && card_ != NULL;
}
inline void StartChargeReq::clear_card() {
  if (GetArenaNoVirtual() == NULL && card_ != NULL) delete card_;
  card_ = NULL;
}
inline const ::charge::protobuf::CardInfo& StartChargeReq::card() const {
  const ::charge::protobuf::CardInfo* p = card_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Card)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::CardInfo*>(
      &::charge::protobuf::_CardInfo_default_instance_);
}
inline ::charge::protobuf::CardInfo* StartChargeReq::mutable_card() {
  
  if (card_ == NULL) {
    card_ = new ::charge::protobuf::CardInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Card)
  return card_;
}
inline ::charge::protobuf::CardInfo* StartChargeReq::release_card() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Card)
  
  ::charge::protobuf::CardInfo* temp = card_;
  card_ = NULL;
  return temp;
}
inline void StartChargeReq::set_allocated_card(::charge::protobuf::CardInfo* card) {
  delete card_;
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Card)
}

// string UserCode = 7;
inline void StartChargeReq::clear_usercode() {
  usercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::usercode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.UserCode)
  return usercode_.GetNoArena();
}
inline void StartChargeReq::set_usercode(const ::std::string& value) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.UserCode)
}
#if LANG_CXX11
inline void StartChargeReq::set_usercode(::std::string&& value) {
  
  usercode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.UserCode)
}
#endif
inline void StartChargeReq::set_usercode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.UserCode)
}
inline void StartChargeReq::set_usercode(const char* value, size_t size) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.UserCode)
}
inline ::std::string* StartChargeReq::mutable_usercode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.UserCode)
  return usercode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_usercode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.UserCode)
  
  return usercode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_usercode(::std::string* usercode) {
  if (usercode != NULL) {
    
  } else {
    
  }
  usercode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usercode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.UserCode)
}

// string Reserved1 = 101;
inline void StartChargeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StartChargeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Reserved1)
}
#if LANG_CXX11
inline void StartChargeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.Reserved1)
}
#endif
inline void StartChargeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.Reserved1)
}
inline void StartChargeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.Reserved1)
}
inline ::std::string* StartChargeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Reserved1)
}

// string Reserved2 = 102;
inline void StartChargeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StartChargeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Reserved2)
}
#if LANG_CXX11
inline void StartChargeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.Reserved2)
}
#endif
inline void StartChargeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.Reserved2)
}
inline void StartChargeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.Reserved2)
}
inline ::std::string* StartChargeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Reserved2)
}

// string Reserved3 = 103;
inline void StartChargeReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void StartChargeReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeReq.Reserved3)
}
#if LANG_CXX11
inline void StartChargeReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeReq.Reserved3)
}
#endif
inline void StartChargeReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeReq.Reserved3)
}
inline void StartChargeReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeReq.Reserved3)
}
inline ::std::string* StartChargeReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeReq.Reserved3)
}

// -------------------------------------------------------------------

// StartChargeAns

// int32 CanIndex = 1;
inline void StartChargeAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StartChargeAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.CanIndex)
  return canindex_;
}
inline void StartChargeAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.CanIndex)
}

// .charge.protobuf.ChargeRequestType Type = 2;
inline void StartChargeAns::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::ChargeRequestType StartChargeAns::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.Type)
  return static_cast< ::charge::protobuf::ChargeRequestType >(type_);
}
inline void StartChargeAns::set_type(::charge::protobuf::ChargeRequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.Type)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void StartChargeAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum StartChargeAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void StartChargeAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.Result)
}

// int32 Reason = 4;
inline void StartChargeAns::clear_reason() {
  reason_ = 0;
}
inline ::google::protobuf::int32 StartChargeAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.Reason)
  return reason_;
}
inline void StartChargeAns::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.Reason)
}

// string Reserved1 = 101;
inline void StartChargeAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StartChargeAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.Reserved1)
}
#if LANG_CXX11
inline void StartChargeAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeAns.Reserved1)
}
#endif
inline void StartChargeAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeAns.Reserved1)
}
inline void StartChargeAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeAns.Reserved1)
}
inline ::std::string* StartChargeAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeAns.Reserved1)
}

// string Reserved2 = 102;
inline void StartChargeAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartChargeAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StartChargeAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StartChargeAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StartChargeAns.Reserved2)
}
#if LANG_CXX11
inline void StartChargeAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StartChargeAns.Reserved2)
}
#endif
inline void StartChargeAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StartChargeAns.Reserved2)
}
inline void StartChargeAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StartChargeAns.Reserved2)
}
inline ::std::string* StartChargeAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StartChargeAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartChargeAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StartChargeAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartChargeAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StartChargeAns.Reserved2)
}

// -------------------------------------------------------------------

// StopChargeReq

// int32 CanIndex = 1;
inline void StopChargeReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StopChargeReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.CanIndex)
  return canindex_;
}
inline void StopChargeReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.CanIndex)
}

// string BillCode = 2;
inline void StopChargeReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.BillCode)
  return billcode_.GetNoArena();
}
inline void StopChargeReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.BillCode)
}
#if LANG_CXX11
inline void StopChargeReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.BillCode)
}
#endif
inline void StopChargeReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.BillCode)
}
inline void StopChargeReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.BillCode)
}
inline ::std::string* StopChargeReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.BillCode)
}

// .charge.protobuf.ChargeRequestType StopType = 3;
inline void StopChargeReq::clear_stoptype() {
  stoptype_ = 0;
}
inline ::charge::protobuf::ChargeRequestType StopChargeReq::stoptype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.StopType)
  return static_cast< ::charge::protobuf::ChargeRequestType >(stoptype_);
}
inline void StopChargeReq::set_stoptype(::charge::protobuf::ChargeRequestType value) {
  
  stoptype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.StopType)
}

// .charge.protobuf.ChargeDischarge ChargeType = 4;
inline void StopChargeReq::clear_chargetype() {
  chargetype_ = 0;
}
inline ::charge::protobuf::ChargeDischarge StopChargeReq::chargetype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.ChargeType)
  return static_cast< ::charge::protobuf::ChargeDischarge >(chargetype_);
}
inline void StopChargeReq::set_chargetype(::charge::protobuf::ChargeDischarge value) {
  
  chargetype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.ChargeType)
}

// .charge.protobuf.DateTime SendTime = 5;
inline bool StopChargeReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void StopChargeReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& StopChargeReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* StopChargeReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* StopChargeReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void StopChargeReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.SendTime)
}

// string Vin = 6;
inline void StopChargeReq::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.Vin)
  return vin_.GetNoArena();
}
inline void StopChargeReq::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.Vin)
}
#if LANG_CXX11
inline void StopChargeReq::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.Vin)
}
#endif
inline void StopChargeReq::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.Vin)
}
inline void StopChargeReq::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.Vin)
}
inline ::std::string* StopChargeReq::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.Vin)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.Vin)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.Vin)
}

// string Plate = 7;
inline void StopChargeReq::clear_plate() {
  plate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::plate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.Plate)
  return plate_.GetNoArena();
}
inline void StopChargeReq::set_plate(const ::std::string& value) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.Plate)
}
#if LANG_CXX11
inline void StopChargeReq::set_plate(::std::string&& value) {
  
  plate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.Plate)
}
#endif
inline void StopChargeReq::set_plate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.Plate)
}
inline void StopChargeReq::set_plate(const char* value, size_t size) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.Plate)
}
inline ::std::string* StopChargeReq::mutable_plate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.Plate)
  return plate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_plate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.Plate)
  
  return plate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_plate(::std::string* plate) {
  if (plate != NULL) {
    
  } else {
    
  }
  plate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.Plate)
}

// .charge.protobuf.CardInfo Card = 8;
inline bool StopChargeReq::has_card() const {
  return this != internal_default_instance() && card_ != NULL;
}
inline void StopChargeReq::clear_card() {
  if (GetArenaNoVirtual() == NULL && card_ != NULL) delete card_;
  card_ = NULL;
}
inline const ::charge::protobuf::CardInfo& StopChargeReq::card() const {
  const ::charge::protobuf::CardInfo* p = card_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.Card)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::CardInfo*>(
      &::charge::protobuf::_CardInfo_default_instance_);
}
inline ::charge::protobuf::CardInfo* StopChargeReq::mutable_card() {
  
  if (card_ == NULL) {
    card_ = new ::charge::protobuf::CardInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.Card)
  return card_;
}
inline ::charge::protobuf::CardInfo* StopChargeReq::release_card() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.Card)
  
  ::charge::protobuf::CardInfo* temp = card_;
  card_ = NULL;
  return temp;
}
inline void StopChargeReq::set_allocated_card(::charge::protobuf::CardInfo* card) {
  delete card_;
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.Card)
}

// string UserCode = 9;
inline void StopChargeReq::clear_usercode() {
  usercode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::usercode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.UserCode)
  return usercode_.GetNoArena();
}
inline void StopChargeReq::set_usercode(const ::std::string& value) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.UserCode)
}
#if LANG_CXX11
inline void StopChargeReq::set_usercode(::std::string&& value) {
  
  usercode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.UserCode)
}
#endif
inline void StopChargeReq::set_usercode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.UserCode)
}
inline void StopChargeReq::set_usercode(const char* value, size_t size) {
  
  usercode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.UserCode)
}
inline ::std::string* StopChargeReq::mutable_usercode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.UserCode)
  return usercode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_usercode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.UserCode)
  
  return usercode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_usercode(::std::string* usercode) {
  if (usercode != NULL) {
    
  } else {
    
  }
  usercode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usercode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.UserCode)
}

// string Reserved1 = 101;
inline void StopChargeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StopChargeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.Reserved1)
}
#if LANG_CXX11
inline void StopChargeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.Reserved1)
}
#endif
inline void StopChargeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.Reserved1)
}
inline void StopChargeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.Reserved1)
}
inline ::std::string* StopChargeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.Reserved1)
}

// string Reserved2 = 102;
inline void StopChargeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StopChargeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeReq.Reserved2)
}
#if LANG_CXX11
inline void StopChargeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeReq.Reserved2)
}
#endif
inline void StopChargeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeReq.Reserved2)
}
inline void StopChargeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeReq.Reserved2)
}
inline ::std::string* StopChargeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeReq.Reserved2)
}

// -------------------------------------------------------------------

// StopChargeAns

// int32 CanIndex = 1;
inline void StopChargeAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StopChargeAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.CanIndex)
  return canindex_;
}
inline void StopChargeAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.CanIndex)
}

// string BillCode = 2;
inline void StopChargeAns::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeAns::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.BillCode)
  return billcode_.GetNoArena();
}
inline void StopChargeAns::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.BillCode)
}
#if LANG_CXX11
inline void StopChargeAns::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeAns.BillCode)
}
#endif
inline void StopChargeAns::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeAns.BillCode)
}
inline void StopChargeAns::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeAns.BillCode)
}
inline ::std::string* StopChargeAns::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeAns.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeAns::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeAns.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeAns::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeAns.BillCode)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void StopChargeAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum StopChargeAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void StopChargeAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.Result)
}

// .charge.protobuf.FailReason Reason = 4;
inline void StopChargeAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason StopChargeAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void StopChargeAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.Reason)
}

// string Reserved1 = 101;
inline void StopChargeAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StopChargeAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.Reserved1)
}
#if LANG_CXX11
inline void StopChargeAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeAns.Reserved1)
}
#endif
inline void StopChargeAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeAns.Reserved1)
}
inline void StopChargeAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeAns.Reserved1)
}
inline ::std::string* StopChargeAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeAns.Reserved1)
}

// string Reserved2 = 102;
inline void StopChargeAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopChargeAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StopChargeAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StopChargeAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StopChargeAns.Reserved2)
}
#if LANG_CXX11
inline void StopChargeAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StopChargeAns.Reserved2)
}
#endif
inline void StopChargeAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StopChargeAns.Reserved2)
}
inline void StopChargeAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StopChargeAns.Reserved2)
}
inline ::std::string* StopChargeAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StopChargeAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopChargeAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StopChargeAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopChargeAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StopChargeAns.Reserved2)
}

// -------------------------------------------------------------------

// SuspendChargeReq

// int32 CanIndex = 1;
inline void SuspendChargeReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 SuspendChargeReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeReq.CanIndex)
  return canindex_;
}
inline void SuspendChargeReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeReq.CanIndex)
}

// string BillCode = 2;
inline void SuspendChargeReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeReq.BillCode)
  return billcode_.GetNoArena();
}
inline void SuspendChargeReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeReq.BillCode)
}
#if LANG_CXX11
inline void SuspendChargeReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeReq.BillCode)
}
#endif
inline void SuspendChargeReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeReq.BillCode)
}
inline void SuspendChargeReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeReq.BillCode)
}
inline ::std::string* SuspendChargeReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeReq.BillCode)
}

// string Reserved1 = 101;
inline void SuspendChargeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void SuspendChargeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeReq.Reserved1)
}
#if LANG_CXX11
inline void SuspendChargeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeReq.Reserved1)
}
#endif
inline void SuspendChargeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeReq.Reserved1)
}
inline void SuspendChargeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeReq.Reserved1)
}
inline ::std::string* SuspendChargeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeReq.Reserved1)
}

// string Reserved2 = 102;
inline void SuspendChargeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void SuspendChargeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeReq.Reserved2)
}
#if LANG_CXX11
inline void SuspendChargeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeReq.Reserved2)
}
#endif
inline void SuspendChargeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeReq.Reserved2)
}
inline void SuspendChargeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeReq.Reserved2)
}
inline ::std::string* SuspendChargeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeReq.Reserved2)
}

// -------------------------------------------------------------------

// SuspendChargeAns

// int32 CanIndex = 1;
inline void SuspendChargeAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 SuspendChargeAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.CanIndex)
  return canindex_;
}
inline void SuspendChargeAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.CanIndex)
}

// string BillCode = 2;
inline void SuspendChargeAns::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeAns::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.BillCode)
  return billcode_.GetNoArena();
}
inline void SuspendChargeAns::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.BillCode)
}
#if LANG_CXX11
inline void SuspendChargeAns::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeAns.BillCode)
}
#endif
inline void SuspendChargeAns::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeAns.BillCode)
}
inline void SuspendChargeAns::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeAns.BillCode)
}
inline ::std::string* SuspendChargeAns::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeAns.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeAns::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeAns.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeAns::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeAns.BillCode)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void SuspendChargeAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum SuspendChargeAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void SuspendChargeAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.Result)
}

// .charge.protobuf.FailReason Reason = 4;
inline void SuspendChargeAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason SuspendChargeAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void SuspendChargeAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.Reason)
}

// .charge.protobuf.DateTime SendTime = 5;
inline bool SuspendChargeAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void SuspendChargeAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& SuspendChargeAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* SuspendChargeAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* SuspendChargeAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void SuspendChargeAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeAns.SendTime)
}

// string Reserved1 = 101;
inline void SuspendChargeAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void SuspendChargeAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.Reserved1)
}
#if LANG_CXX11
inline void SuspendChargeAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeAns.Reserved1)
}
#endif
inline void SuspendChargeAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeAns.Reserved1)
}
inline void SuspendChargeAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeAns.Reserved1)
}
inline ::std::string* SuspendChargeAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeAns.Reserved1)
}

// string Reserved2 = 102;
inline void SuspendChargeAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SuspendChargeAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SuspendChargeAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void SuspendChargeAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SuspendChargeAns.Reserved2)
}
#if LANG_CXX11
inline void SuspendChargeAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SuspendChargeAns.Reserved2)
}
#endif
inline void SuspendChargeAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SuspendChargeAns.Reserved2)
}
inline void SuspendChargeAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SuspendChargeAns.Reserved2)
}
inline ::std::string* SuspendChargeAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SuspendChargeAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SuspendChargeAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SuspendChargeAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SuspendChargeAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SuspendChargeAns.Reserved2)
}

// -------------------------------------------------------------------

// ResumeChargeReq

// int32 CanIndex = 1;
inline void ResumeChargeReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 ResumeChargeReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeReq.CanIndex)
  return canindex_;
}
inline void ResumeChargeReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeReq.CanIndex)
}

// string BillCode = 2;
inline void ResumeChargeReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeReq.BillCode)
  return billcode_.GetNoArena();
}
inline void ResumeChargeReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeReq.BillCode)
}
#if LANG_CXX11
inline void ResumeChargeReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeReq.BillCode)
}
#endif
inline void ResumeChargeReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeReq.BillCode)
}
inline void ResumeChargeReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeReq.BillCode)
}
inline ::std::string* ResumeChargeReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeReq.BillCode)
}

// string Reserved1 = 101;
inline void ResumeChargeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ResumeChargeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeReq.Reserved1)
}
#if LANG_CXX11
inline void ResumeChargeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeReq.Reserved1)
}
#endif
inline void ResumeChargeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeReq.Reserved1)
}
inline void ResumeChargeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeReq.Reserved1)
}
inline ::std::string* ResumeChargeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeReq.Reserved1)
}

// string Reserved2 = 102;
inline void ResumeChargeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ResumeChargeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeReq.Reserved2)
}
#if LANG_CXX11
inline void ResumeChargeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeReq.Reserved2)
}
#endif
inline void ResumeChargeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeReq.Reserved2)
}
inline void ResumeChargeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeReq.Reserved2)
}
inline ::std::string* ResumeChargeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeReq.Reserved2)
}

// -------------------------------------------------------------------

// ResumeChargeAns

// int32 CanIndex = 1;
inline void ResumeChargeAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 ResumeChargeAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.CanIndex)
  return canindex_;
}
inline void ResumeChargeAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.CanIndex)
}

// string Code = 2;
inline void ResumeChargeAns::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeAns::code() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.Code)
  return code_.GetNoArena();
}
inline void ResumeChargeAns::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.Code)
}
#if LANG_CXX11
inline void ResumeChargeAns::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeAns.Code)
}
#endif
inline void ResumeChargeAns::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeAns.Code)
}
inline void ResumeChargeAns::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeAns.Code)
}
inline ::std::string* ResumeChargeAns::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeAns.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeAns::release_code() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeAns.Code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeAns::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeAns.Code)
}

// .charge.protobuf.BoolEnum Result = 3;
inline void ResumeChargeAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum ResumeChargeAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void ResumeChargeAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.Result)
}

// .charge.protobuf.FailReason Reason = 4;
inline void ResumeChargeAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason ResumeChargeAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void ResumeChargeAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.Reason)
}

// .charge.protobuf.DateTime SendTime = 5;
inline bool ResumeChargeAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ResumeChargeAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ResumeChargeAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ResumeChargeAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ResumeChargeAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ResumeChargeAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeAns.SendTime)
}

// string Reserved1 = 101;
inline void ResumeChargeAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ResumeChargeAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.Reserved1)
}
#if LANG_CXX11
inline void ResumeChargeAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeAns.Reserved1)
}
#endif
inline void ResumeChargeAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeAns.Reserved1)
}
inline void ResumeChargeAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeAns.Reserved1)
}
inline ::std::string* ResumeChargeAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeAns.Reserved1)
}

// string Reserved2 = 102;
inline void ResumeChargeAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeChargeAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ResumeChargeAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ResumeChargeAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ResumeChargeAns.Reserved2)
}
#if LANG_CXX11
inline void ResumeChargeAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ResumeChargeAns.Reserved2)
}
#endif
inline void ResumeChargeAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ResumeChargeAns.Reserved2)
}
inline void ResumeChargeAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ResumeChargeAns.Reserved2)
}
inline ::std::string* ResumeChargeAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ResumeChargeAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeChargeAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ResumeChargeAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeChargeAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ResumeChargeAns.Reserved2)
}

// -------------------------------------------------------------------

// BillUploadReq

// int32 CanIndex = 1;
inline void BillUploadReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 BillUploadReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadReq.CanIndex)
  return canindex_;
}
inline void BillUploadReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadReq.CanIndex)
}

// .charge.protobuf.BillInfo Bill = 2;
inline bool BillUploadReq::has_bill() const {
  return this != internal_default_instance() && bill_ != NULL;
}
inline void BillUploadReq::clear_bill() {
  if (GetArenaNoVirtual() == NULL && bill_ != NULL) delete bill_;
  bill_ = NULL;
}
inline const ::charge::protobuf::BillInfo& BillUploadReq::bill() const {
  const ::charge::protobuf::BillInfo* p = bill_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadReq.Bill)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::BillInfo*>(
      &::charge::protobuf::_BillInfo_default_instance_);
}
inline ::charge::protobuf::BillInfo* BillUploadReq::mutable_bill() {
  
  if (bill_ == NULL) {
    bill_ = new ::charge::protobuf::BillInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadReq.Bill)
  return bill_;
}
inline ::charge::protobuf::BillInfo* BillUploadReq::release_bill() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadReq.Bill)
  
  ::charge::protobuf::BillInfo* temp = bill_;
  bill_ = NULL;
  return temp;
}
inline void BillUploadReq::set_allocated_bill(::charge::protobuf::BillInfo* bill) {
  delete bill_;
  bill_ = bill;
  if (bill) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadReq.Bill)
}

// .charge.protobuf.DateTime SendTime = 3;
inline bool BillUploadReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BillUploadReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BillUploadReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BillUploadReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* BillUploadReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BillUploadReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadReq.SendTime)
}

// string Reserved1 = 101;
inline void BillUploadReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillUploadReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadReq.Reserved1)
}
#if LANG_CXX11
inline void BillUploadReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadReq.Reserved1)
}
#endif
inline void BillUploadReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadReq.Reserved1)
}
inline void BillUploadReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadReq.Reserved1)
}
inline ::std::string* BillUploadReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadReq.Reserved1)
}

// string Reserved2 = 102;
inline void BillUploadReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillUploadReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadReq.Reserved2)
}
#if LANG_CXX11
inline void BillUploadReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadReq.Reserved2)
}
#endif
inline void BillUploadReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadReq.Reserved2)
}
inline void BillUploadReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadReq.Reserved2)
}
inline ::std::string* BillUploadReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadReq.Reserved2)
}

// -------------------------------------------------------------------

// BillUploadAns

// int32 CanIndex = 1;
inline void BillUploadAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 BillUploadAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.CanIndex)
  return canindex_;
}
inline void BillUploadAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.CanIndex)
}

// string BillCode = 2;
inline void BillUploadAns::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadAns::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.BillCode)
  return billcode_.GetNoArena();
}
inline void BillUploadAns::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.BillCode)
}
#if LANG_CXX11
inline void BillUploadAns::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadAns.BillCode)
}
#endif
inline void BillUploadAns::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadAns.BillCode)
}
inline void BillUploadAns::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadAns.BillCode)
}
inline ::std::string* BillUploadAns::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadAns.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadAns::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadAns.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadAns::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadAns.BillCode)
}

// .charge.protobuf.BoolEnum Confirm = 3;
inline void BillUploadAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum BillUploadAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void BillUploadAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.Confirm)
}

// string CtrlBillCode = 4;
inline void BillUploadAns::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadAns::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void BillUploadAns::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.CtrlBillCode)
}
#if LANG_CXX11
inline void BillUploadAns::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadAns.CtrlBillCode)
}
#endif
inline void BillUploadAns::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadAns.CtrlBillCode)
}
inline void BillUploadAns::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadAns.CtrlBillCode)
}
inline ::std::string* BillUploadAns::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadAns.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadAns::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadAns.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadAns::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadAns.CtrlBillCode)
}

// string Reserved1 = 101;
inline void BillUploadAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillUploadAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.Reserved1)
}
#if LANG_CXX11
inline void BillUploadAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadAns.Reserved1)
}
#endif
inline void BillUploadAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadAns.Reserved1)
}
inline void BillUploadAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadAns.Reserved1)
}
inline ::std::string* BillUploadAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadAns.Reserved1)
}

// string Reserved2 = 102;
inline void BillUploadAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillUploadAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillUploadAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillUploadAns.Reserved2)
}
#if LANG_CXX11
inline void BillUploadAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillUploadAns.Reserved2)
}
#endif
inline void BillUploadAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillUploadAns.Reserved2)
}
inline void BillUploadAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillUploadAns.Reserved2)
}
inline ::std::string* BillUploadAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillUploadAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillUploadAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillUploadAns.Reserved2)
}

// -------------------------------------------------------------------

// ChargerStateChangeReq

// repeated .charge.protobuf.ChargerState State = 1;
inline int ChargerStateChangeReq::state_size() const {
  return state_.size();
}
inline void ChargerStateChangeReq::clear_state() {
  state_.Clear();
}
inline const ::charge::protobuf::ChargerState& ChargerStateChangeReq::state(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeReq.State)
  return state_.Get(index);
}
inline ::charge::protobuf::ChargerState* ChargerStateChangeReq::mutable_state(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateChangeReq.State)
  return state_.Mutable(index);
}
inline ::charge::protobuf::ChargerState* ChargerStateChangeReq::add_state() {
  // @@protoc_insertion_point(field_add:charge.protobuf.ChargerStateChangeReq.State)
  return state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargerState >*
ChargerStateChangeReq::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.ChargerStateChangeReq.State)
  return &state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargerState >&
ChargerStateChangeReq::state() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.ChargerStateChangeReq.State)
  return state_;
}

// .charge.protobuf.DateTime SendTime = 2;
inline bool ChargerStateChangeReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ChargerStateChangeReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ChargerStateChangeReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ChargerStateChangeReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateChangeReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ChargerStateChangeReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerStateChangeReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ChargerStateChangeReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerStateChangeReq.SendTime)
}

// .charge.protobuf.SendReason Reason = 3;
inline void ChargerStateChangeReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::SendReason ChargerStateChangeReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeReq.Reason)
  return static_cast< ::charge::protobuf::SendReason >(reason_);
}
inline void ChargerStateChangeReq::set_reason(::charge::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateChangeReq.Reason)
}

// string Reserved1 = 101;
inline void ChargerStateChangeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerStateChangeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ChargerStateChangeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateChangeReq.Reserved1)
}
#if LANG_CXX11
inline void ChargerStateChangeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerStateChangeReq.Reserved1)
}
#endif
inline void ChargerStateChangeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerStateChangeReq.Reserved1)
}
inline void ChargerStateChangeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerStateChangeReq.Reserved1)
}
inline ::std::string* ChargerStateChangeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateChangeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerStateChangeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerStateChangeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerStateChangeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerStateChangeReq.Reserved1)
}

// string Reserved2 = 102;
inline void ChargerStateChangeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerStateChangeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ChargerStateChangeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateChangeReq.Reserved2)
}
#if LANG_CXX11
inline void ChargerStateChangeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerStateChangeReq.Reserved2)
}
#endif
inline void ChargerStateChangeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerStateChangeReq.Reserved2)
}
inline void ChargerStateChangeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerStateChangeReq.Reserved2)
}
inline ::std::string* ChargerStateChangeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateChangeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerStateChangeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerStateChangeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerStateChangeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerStateChangeReq.Reserved2)
}

// -------------------------------------------------------------------

// ChargerStateChangeAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void ChargerStateChangeAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum ChargerStateChangeAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateChangeAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void ChargerStateChangeAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateChangeAns.Confirm)
}

// -------------------------------------------------------------------

// ChargerStateReq

// repeated int32 CanIndex = 1;
inline int ChargerStateReq::canindex_size() const {
  return canindex_.size();
}
inline void ChargerStateReq::clear_canindex() {
  canindex_.Clear();
}
inline ::google::protobuf::int32 ChargerStateReq::canindex(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateReq.CanIndex)
  return canindex_.Get(index);
}
inline void ChargerStateReq::set_canindex(int index, ::google::protobuf::int32 value) {
  canindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateReq.CanIndex)
}
inline void ChargerStateReq::add_canindex(::google::protobuf::int32 value) {
  canindex_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.ChargerStateReq.CanIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChargerStateReq::canindex() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.ChargerStateReq.CanIndex)
  return canindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChargerStateReq::mutable_canindex() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.ChargerStateReq.CanIndex)
  return &canindex_;
}

// string Reserved1 = 101;
inline void ChargerStateReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerStateReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ChargerStateReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateReq.Reserved1)
}
#if LANG_CXX11
inline void ChargerStateReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerStateReq.Reserved1)
}
#endif
inline void ChargerStateReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerStateReq.Reserved1)
}
inline void ChargerStateReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerStateReq.Reserved1)
}
inline ::std::string* ChargerStateReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerStateReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerStateReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerStateReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerStateReq.Reserved1)
}

// string Reserved2 = 102;
inline void ChargerStateReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerStateReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ChargerStateReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateReq.Reserved2)
}
#if LANG_CXX11
inline void ChargerStateReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerStateReq.Reserved2)
}
#endif
inline void ChargerStateReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerStateReq.Reserved2)
}
inline void ChargerStateReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerStateReq.Reserved2)
}
inline ::std::string* ChargerStateReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerStateReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerStateReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerStateReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerStateReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerStateReq.Reserved2)
}

// -------------------------------------------------------------------

// ChargerStateAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void ChargerStateAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum ChargerStateAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerStateAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void ChargerStateAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerStateAns.Confirm)
}

// -------------------------------------------------------------------

// AccountDetailReq

// .charge.protobuf.AccountType Type = 1;
inline void AccountDetailReq::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::AccountType AccountDetailReq::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.Type)
  return static_cast< ::charge::protobuf::AccountType >(type_);
}
inline void AccountDetailReq::set_type(::charge::protobuf::AccountType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.Type)
}

// int32 CanIndex = 2;
inline void AccountDetailReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 AccountDetailReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.CanIndex)
  return canindex_;
}
inline void AccountDetailReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.CanIndex)
}

// string AccountID = 3;
inline void AccountDetailReq::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailReq::accountid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.AccountID)
  return accountid_.GetNoArena();
}
inline void AccountDetailReq::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.AccountID)
}
#if LANG_CXX11
inline void AccountDetailReq::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailReq.AccountID)
}
#endif
inline void AccountDetailReq::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailReq.AccountID)
}
inline void AccountDetailReq::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailReq.AccountID)
}
inline ::std::string* AccountDetailReq::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailReq.AccountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailReq::release_accountid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailReq.AccountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailReq::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailReq.AccountID)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool AccountDetailReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void AccountDetailReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountDetailReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountDetailReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* AccountDetailReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void AccountDetailReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailReq.SendTime)
}

// string Reserved1 = 101;
inline void AccountDetailReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AccountDetailReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.Reserved1)
}
#if LANG_CXX11
inline void AccountDetailReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailReq.Reserved1)
}
#endif
inline void AccountDetailReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailReq.Reserved1)
}
inline void AccountDetailReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailReq.Reserved1)
}
inline ::std::string* AccountDetailReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailReq.Reserved1)
}

// string Reserved2 = 102;
inline void AccountDetailReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AccountDetailReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.Reserved2)
}
#if LANG_CXX11
inline void AccountDetailReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailReq.Reserved2)
}
#endif
inline void AccountDetailReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailReq.Reserved2)
}
inline void AccountDetailReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailReq.Reserved2)
}
inline ::std::string* AccountDetailReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailReq.Reserved2)
}

// string Reserved3 = 103;
inline void AccountDetailReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void AccountDetailReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailReq.Reserved3)
}
#if LANG_CXX11
inline void AccountDetailReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailReq.Reserved3)
}
#endif
inline void AccountDetailReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailReq.Reserved3)
}
inline void AccountDetailReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailReq.Reserved3)
}
inline ::std::string* AccountDetailReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailReq.Reserved3)
}

// -------------------------------------------------------------------

// AccountDetailAns

// int32 CanIndex = 1;
inline void AccountDetailAns::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 AccountDetailAns::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.CanIndex)
  return canindex_;
}
inline void AccountDetailAns::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.CanIndex)
}

// string AccountID = 2;
inline void AccountDetailAns::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailAns::accountid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.AccountID)
  return accountid_.GetNoArena();
}
inline void AccountDetailAns::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.AccountID)
}
#if LANG_CXX11
inline void AccountDetailAns::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailAns.AccountID)
}
#endif
inline void AccountDetailAns::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailAns.AccountID)
}
inline void AccountDetailAns::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailAns.AccountID)
}
inline ::std::string* AccountDetailAns::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailAns.AccountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailAns::release_accountid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailAns.AccountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailAns::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailAns.AccountID)
}

// double Money = 3;
inline void AccountDetailAns::clear_money() {
  money_ = 0;
}
inline double AccountDetailAns::money() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Money)
  return money_;
}
inline void AccountDetailAns::set_money(double value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.Money)
}

// double SFee = 4;
inline void AccountDetailAns::clear_sfee() {
  sfee_ = 0;
}
inline double AccountDetailAns::sfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.SFee)
  return sfee_;
}
inline void AccountDetailAns::set_sfee(double value) {
  
  sfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.SFee)
}

// double PFee = 5;
inline void AccountDetailAns::clear_pfee() {
  pfee_ = 0;
}
inline double AccountDetailAns::pfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.PFee)
  return pfee_;
}
inline void AccountDetailAns::set_pfee(double value) {
  
  pfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.PFee)
}

// double BFee = 6;
inline void AccountDetailAns::clear_bfee() {
  bfee_ = 0;
}
inline double AccountDetailAns::bfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.BFee)
  return bfee_;
}
inline void AccountDetailAns::set_bfee(double value) {
  
  bfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.BFee)
}

// double Ious = 7;
inline void AccountDetailAns::clear_ious() {
  ious_ = 0;
}
inline double AccountDetailAns::ious() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Ious)
  return ious_;
}
inline void AccountDetailAns::set_ious(double value) {
  
  ious_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.Ious)
}

// repeated .charge.protobuf.AccountingStrategy Strategy = 8;
inline int AccountDetailAns::strategy_size() const {
  return strategy_.size();
}
inline void AccountDetailAns::clear_strategy() {
  strategy_.Clear();
}
inline const ::charge::protobuf::AccountingStrategy& AccountDetailAns::strategy(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Strategy)
  return strategy_.Get(index);
}
inline ::charge::protobuf::AccountingStrategy* AccountDetailAns::mutable_strategy(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailAns.Strategy)
  return strategy_.Mutable(index);
}
inline ::charge::protobuf::AccountingStrategy* AccountDetailAns::add_strategy() {
  // @@protoc_insertion_point(field_add:charge.protobuf.AccountDetailAns.Strategy)
  return strategy_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >*
AccountDetailAns::mutable_strategy() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.AccountDetailAns.Strategy)
  return &strategy_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::AccountingStrategy >&
AccountDetailAns::strategy() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.AccountDetailAns.Strategy)
  return strategy_;
}

// string Reserved1 = 101;
inline void AccountDetailAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AccountDetailAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.Reserved1)
}
#if LANG_CXX11
inline void AccountDetailAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailAns.Reserved1)
}
#endif
inline void AccountDetailAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailAns.Reserved1)
}
inline void AccountDetailAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailAns.Reserved1)
}
inline ::std::string* AccountDetailAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailAns.Reserved1)
}

// string Reserved2 = 102;
inline void AccountDetailAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AccountDetailAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.Reserved2)
}
#if LANG_CXX11
inline void AccountDetailAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailAns.Reserved2)
}
#endif
inline void AccountDetailAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailAns.Reserved2)
}
inline void AccountDetailAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailAns.Reserved2)
}
inline ::std::string* AccountDetailAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailAns.Reserved2)
}

// string Reserved3 = 103;
inline void AccountDetailAns::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountDetailAns::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountDetailAns.Reserved3)
  return reserved3_.GetNoArena();
}
inline void AccountDetailAns::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountDetailAns.Reserved3)
}
#if LANG_CXX11
inline void AccountDetailAns::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountDetailAns.Reserved3)
}
#endif
inline void AccountDetailAns::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountDetailAns.Reserved3)
}
inline void AccountDetailAns::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountDetailAns.Reserved3)
}
inline ::std::string* AccountDetailAns::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountDetailAns.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountDetailAns::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountDetailAns.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountDetailAns::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountDetailAns.Reserved3)
}

// -------------------------------------------------------------------

// AccountSyncReq

// .charge.protobuf.DateTime SyncTime = 1;
inline bool AccountSyncReq::has_synctime() const {
  return this != internal_default_instance() && synctime_ != NULL;
}
inline void AccountSyncReq::clear_synctime() {
  if (GetArenaNoVirtual() == NULL && synctime_ != NULL) delete synctime_;
  synctime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountSyncReq::synctime() const {
  const ::charge::protobuf::DateTime* p = synctime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.SyncTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountSyncReq::mutable_synctime() {
  
  if (synctime_ == NULL) {
    synctime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncReq.SyncTime)
  return synctime_;
}
inline ::charge::protobuf::DateTime* AccountSyncReq::release_synctime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncReq.SyncTime)
  
  ::charge::protobuf::DateTime* temp = synctime_;
  synctime_ = NULL;
  return temp;
}
inline void AccountSyncReq::set_allocated_synctime(::charge::protobuf::DateTime* synctime) {
  delete synctime_;
  synctime_ = synctime;
  if (synctime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncReq.SyncTime)
}

// .charge.protobuf.SyncAccountType Type = 2;
inline void AccountSyncReq::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::SyncAccountType AccountSyncReq::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.Type)
  return static_cast< ::charge::protobuf::SyncAccountType >(type_);
}
inline void AccountSyncReq::set_type(::charge::protobuf::SyncAccountType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncReq.Type)
}

// int32 Size = 3;
inline void AccountSyncReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 AccountSyncReq::size() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.Size)
  return size_;
}
inline void AccountSyncReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncReq.Size)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool AccountSyncReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void AccountSyncReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountSyncReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountSyncReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* AccountSyncReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void AccountSyncReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncReq.SendTime)
}

// string Reserved1 = 101;
inline void AccountSyncReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountSyncReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AccountSyncReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncReq.Reserved1)
}
#if LANG_CXX11
inline void AccountSyncReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountSyncReq.Reserved1)
}
#endif
inline void AccountSyncReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountSyncReq.Reserved1)
}
inline void AccountSyncReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountSyncReq.Reserved1)
}
inline ::std::string* AccountSyncReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountSyncReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSyncReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncReq.Reserved1)
}

// string Reserved2 = 102;
inline void AccountSyncReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountSyncReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AccountSyncReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncReq.Reserved2)
}
#if LANG_CXX11
inline void AccountSyncReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountSyncReq.Reserved2)
}
#endif
inline void AccountSyncReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountSyncReq.Reserved2)
}
inline void AccountSyncReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountSyncReq.Reserved2)
}
inline ::std::string* AccountSyncReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountSyncReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSyncReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncReq.Reserved2)
}

// -------------------------------------------------------------------

// AccountSyncAns

// .charge.protobuf.DateTime SyncTime = 1;
inline bool AccountSyncAns::has_synctime() const {
  return this != internal_default_instance() && synctime_ != NULL;
}
inline void AccountSyncAns::clear_synctime() {
  if (GetArenaNoVirtual() == NULL && synctime_ != NULL) delete synctime_;
  synctime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountSyncAns::synctime() const {
  const ::charge::protobuf::DateTime* p = synctime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.SyncTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountSyncAns::mutable_synctime() {
  
  if (synctime_ == NULL) {
    synctime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncAns.SyncTime)
  return synctime_;
}
inline ::charge::protobuf::DateTime* AccountSyncAns::release_synctime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncAns.SyncTime)
  
  ::charge::protobuf::DateTime* temp = synctime_;
  synctime_ = NULL;
  return temp;
}
inline void AccountSyncAns::set_allocated_synctime(::charge::protobuf::DateTime* synctime) {
  delete synctime_;
  synctime_ = synctime;
  if (synctime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncAns.SyncTime)
}

// .charge.protobuf.SyncAccountType Type = 2;
inline void AccountSyncAns::clear_type() {
  type_ = 0;
}
inline ::charge::protobuf::SyncAccountType AccountSyncAns::type() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.Type)
  return static_cast< ::charge::protobuf::SyncAccountType >(type_);
}
inline void AccountSyncAns::set_type(::charge::protobuf::SyncAccountType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncAns.Type)
}

// repeated .charge.protobuf.CardInfo Card = 3;
inline int AccountSyncAns::card_size() const {
  return card_.size();
}
inline void AccountSyncAns::clear_card() {
  card_.Clear();
}
inline const ::charge::protobuf::CardInfo& AccountSyncAns::card(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.Card)
  return card_.Get(index);
}
inline ::charge::protobuf::CardInfo* AccountSyncAns::mutable_card(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncAns.Card)
  return card_.Mutable(index);
}
inline ::charge::protobuf::CardInfo* AccountSyncAns::add_card() {
  // @@protoc_insertion_point(field_add:charge.protobuf.AccountSyncAns.Card)
  return card_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CardInfo >*
AccountSyncAns::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.AccountSyncAns.Card)
  return &card_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CardInfo >&
AccountSyncAns::card() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.AccountSyncAns.Card)
  return card_;
}

// repeated .charge.protobuf.CarInfo Car = 4;
inline int AccountSyncAns::car_size() const {
  return car_.size();
}
inline void AccountSyncAns::clear_car() {
  car_.Clear();
}
inline const ::charge::protobuf::CarInfo& AccountSyncAns::car(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.Car)
  return car_.Get(index);
}
inline ::charge::protobuf::CarInfo* AccountSyncAns::mutable_car(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncAns.Car)
  return car_.Mutable(index);
}
inline ::charge::protobuf::CarInfo* AccountSyncAns::add_car() {
  // @@protoc_insertion_point(field_add:charge.protobuf.AccountSyncAns.Car)
  return car_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CarInfo >*
AccountSyncAns::mutable_car() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.AccountSyncAns.Car)
  return &car_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::CarInfo >&
AccountSyncAns::car() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.AccountSyncAns.Car)
  return car_;
}

// string Reserved1 = 101;
inline void AccountSyncAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountSyncAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AccountSyncAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncAns.Reserved1)
}
#if LANG_CXX11
inline void AccountSyncAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountSyncAns.Reserved1)
}
#endif
inline void AccountSyncAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountSyncAns.Reserved1)
}
inline void AccountSyncAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountSyncAns.Reserved1)
}
inline ::std::string* AccountSyncAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountSyncAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSyncAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncAns.Reserved1)
}

// string Reserved2 = 102;
inline void AccountSyncAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountSyncAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountSyncAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AccountSyncAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountSyncAns.Reserved2)
}
#if LANG_CXX11
inline void AccountSyncAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountSyncAns.Reserved2)
}
#endif
inline void AccountSyncAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountSyncAns.Reserved2)
}
inline void AccountSyncAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountSyncAns.Reserved2)
}
inline ::std::string* AccountSyncAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountSyncAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountSyncAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountSyncAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountSyncAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountSyncAns.Reserved2)
}

// -------------------------------------------------------------------

// PowerCruveCmdReq

// int32 CanIndex = 1;
inline void PowerCruveCmdReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 PowerCruveCmdReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.CanIndex)
  return canindex_;
}
inline void PowerCruveCmdReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdReq.CanIndex)
}

// string Code = 2;
inline void PowerCruveCmdReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PowerCruveCmdReq::code() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.Code)
  return code_.GetNoArena();
}
inline void PowerCruveCmdReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdReq.Code)
}
#if LANG_CXX11
inline void PowerCruveCmdReq::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.PowerCruveCmdReq.Code)
}
#endif
inline void PowerCruveCmdReq::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.PowerCruveCmdReq.Code)
}
inline void PowerCruveCmdReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.PowerCruveCmdReq.Code)
}
inline ::std::string* PowerCruveCmdReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.PowerCruveCmdReq.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PowerCruveCmdReq::release_code() {
  // @@protoc_insertion_point(field_release:charge.protobuf.PowerCruveCmdReq.Code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PowerCruveCmdReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.PowerCruveCmdReq.Code)
}

// .charge.protobuf.CruveType CType = 3;
inline void PowerCruveCmdReq::clear_ctype() {
  ctype_ = 0;
}
inline ::charge::protobuf::CruveType PowerCruveCmdReq::ctype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.CType)
  return static_cast< ::charge::protobuf::CruveType >(ctype_);
}
inline void PowerCruveCmdReq::set_ctype(::charge::protobuf::CruveType value) {
  
  ctype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdReq.CType)
}

// repeated .charge.protobuf.ChargingStrategy Strategy = 4;
inline int PowerCruveCmdReq::strategy_size() const {
  return strategy_.size();
}
inline void PowerCruveCmdReq::clear_strategy() {
  strategy_.Clear();
}
inline const ::charge::protobuf::ChargingStrategy& PowerCruveCmdReq::strategy(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.Strategy)
  return strategy_.Get(index);
}
inline ::charge::protobuf::ChargingStrategy* PowerCruveCmdReq::mutable_strategy(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.PowerCruveCmdReq.Strategy)
  return strategy_.Mutable(index);
}
inline ::charge::protobuf::ChargingStrategy* PowerCruveCmdReq::add_strategy() {
  // @@protoc_insertion_point(field_add:charge.protobuf.PowerCruveCmdReq.Strategy)
  return strategy_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >*
PowerCruveCmdReq::mutable_strategy() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.PowerCruveCmdReq.Strategy)
  return &strategy_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargingStrategy >&
PowerCruveCmdReq::strategy() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.PowerCruveCmdReq.Strategy)
  return strategy_;
}

// string Reserved1 = 101;
inline void PowerCruveCmdReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PowerCruveCmdReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void PowerCruveCmdReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdReq.Reserved1)
}
#if LANG_CXX11
inline void PowerCruveCmdReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.PowerCruveCmdReq.Reserved1)
}
#endif
inline void PowerCruveCmdReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.PowerCruveCmdReq.Reserved1)
}
inline void PowerCruveCmdReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.PowerCruveCmdReq.Reserved1)
}
inline ::std::string* PowerCruveCmdReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.PowerCruveCmdReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PowerCruveCmdReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.PowerCruveCmdReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PowerCruveCmdReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.PowerCruveCmdReq.Reserved1)
}

// string Reserved2 = 102;
inline void PowerCruveCmdReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PowerCruveCmdReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void PowerCruveCmdReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdReq.Reserved2)
}
#if LANG_CXX11
inline void PowerCruveCmdReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.PowerCruveCmdReq.Reserved2)
}
#endif
inline void PowerCruveCmdReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.PowerCruveCmdReq.Reserved2)
}
inline void PowerCruveCmdReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.PowerCruveCmdReq.Reserved2)
}
inline ::std::string* PowerCruveCmdReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.PowerCruveCmdReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PowerCruveCmdReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.PowerCruveCmdReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PowerCruveCmdReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.PowerCruveCmdReq.Reserved2)
}

// -------------------------------------------------------------------

// PowerCruveCmdAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void PowerCruveCmdAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum PowerCruveCmdAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void PowerCruveCmdAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdAns.Confirm)
}

// .charge.protobuf.FailReason Reason = 2;
inline void PowerCruveCmdAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason PowerCruveCmdAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.PowerCruveCmdAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void PowerCruveCmdAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.PowerCruveCmdAns.Reason)
}

// -------------------------------------------------------------------

// BmsParamNotifyReq

// int32 CanIndex = 1;
inline void BmsParamNotifyReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 BmsParamNotifyReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.CanIndex)
  return canindex_;
}
inline void BmsParamNotifyReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyReq.CanIndex)
}

// string Vin = 2;
inline void BmsParamNotifyReq::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsParamNotifyReq::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.Vin)
  return vin_.GetNoArena();
}
inline void BmsParamNotifyReq::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyReq.Vin)
}
#if LANG_CXX11
inline void BmsParamNotifyReq::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsParamNotifyReq.Vin)
}
#endif
inline void BmsParamNotifyReq::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsParamNotifyReq.Vin)
}
inline void BmsParamNotifyReq::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsParamNotifyReq.Vin)
}
inline ::std::string* BmsParamNotifyReq::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.Vin)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsParamNotifyReq::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.Vin)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsParamNotifyReq::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.Vin)
}

// .charge.protobuf.SendReason Reason = 3;
inline void BmsParamNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::SendReason BmsParamNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.Reason)
  return static_cast< ::charge::protobuf::SendReason >(reason_);
}
inline void BmsParamNotifyReq::set_reason(::charge::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyReq.Reason)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool BmsParamNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BmsParamNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BmsParamNotifyReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BmsParamNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* BmsParamNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BmsParamNotifyReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.SendTime)
}

// .charge.protobuf.BmsShakehands ShakehandsInfo = 5;
inline bool BmsParamNotifyReq::has_shakehandsinfo() const {
  return this != internal_default_instance() && shakehandsinfo_ != NULL;
}
inline void BmsParamNotifyReq::clear_shakehandsinfo() {
  if (GetArenaNoVirtual() == NULL && shakehandsinfo_ != NULL) delete shakehandsinfo_;
  shakehandsinfo_ = NULL;
}
inline const ::charge::protobuf::BmsShakehands& BmsParamNotifyReq::shakehandsinfo() const {
  const ::charge::protobuf::BmsShakehands* p = shakehandsinfo_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.ShakehandsInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::BmsShakehands*>(
      &::charge::protobuf::_BmsShakehands_default_instance_);
}
inline ::charge::protobuf::BmsShakehands* BmsParamNotifyReq::mutable_shakehandsinfo() {
  
  if (shakehandsinfo_ == NULL) {
    shakehandsinfo_ = new ::charge::protobuf::BmsShakehands;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.ShakehandsInfo)
  return shakehandsinfo_;
}
inline ::charge::protobuf::BmsShakehands* BmsParamNotifyReq::release_shakehandsinfo() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.ShakehandsInfo)
  
  ::charge::protobuf::BmsShakehands* temp = shakehandsinfo_;
  shakehandsinfo_ = NULL;
  return temp;
}
inline void BmsParamNotifyReq::set_allocated_shakehandsinfo(::charge::protobuf::BmsShakehands* shakehandsinfo) {
  delete shakehandsinfo_;
  shakehandsinfo_ = shakehandsinfo;
  if (shakehandsinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.ShakehandsInfo)
}

// .charge.protobuf.BmsConfig ConfigInfo = 6;
inline bool BmsParamNotifyReq::has_configinfo() const {
  return this != internal_default_instance() && configinfo_ != NULL;
}
inline void BmsParamNotifyReq::clear_configinfo() {
  if (GetArenaNoVirtual() == NULL && configinfo_ != NULL) delete configinfo_;
  configinfo_ = NULL;
}
inline const ::charge::protobuf::BmsConfig& BmsParamNotifyReq::configinfo() const {
  const ::charge::protobuf::BmsConfig* p = configinfo_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.ConfigInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::BmsConfig*>(
      &::charge::protobuf::_BmsConfig_default_instance_);
}
inline ::charge::protobuf::BmsConfig* BmsParamNotifyReq::mutable_configinfo() {
  
  if (configinfo_ == NULL) {
    configinfo_ = new ::charge::protobuf::BmsConfig;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.ConfigInfo)
  return configinfo_;
}
inline ::charge::protobuf::BmsConfig* BmsParamNotifyReq::release_configinfo() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.ConfigInfo)
  
  ::charge::protobuf::BmsConfig* temp = configinfo_;
  configinfo_ = NULL;
  return temp;
}
inline void BmsParamNotifyReq::set_allocated_configinfo(::charge::protobuf::BmsConfig* configinfo) {
  delete configinfo_;
  configinfo_ = configinfo;
  if (configinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.ConfigInfo)
}

// .charge.protobuf.BmsChargeFinish ChargeFinishInfo = 7;
inline bool BmsParamNotifyReq::has_chargefinishinfo() const {
  return this != internal_default_instance() && chargefinishinfo_ != NULL;
}
inline void BmsParamNotifyReq::clear_chargefinishinfo() {
  if (GetArenaNoVirtual() == NULL && chargefinishinfo_ != NULL) delete chargefinishinfo_;
  chargefinishinfo_ = NULL;
}
inline const ::charge::protobuf::BmsChargeFinish& BmsParamNotifyReq::chargefinishinfo() const {
  const ::charge::protobuf::BmsChargeFinish* p = chargefinishinfo_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.ChargeFinishInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::BmsChargeFinish*>(
      &::charge::protobuf::_BmsChargeFinish_default_instance_);
}
inline ::charge::protobuf::BmsChargeFinish* BmsParamNotifyReq::mutable_chargefinishinfo() {
  
  if (chargefinishinfo_ == NULL) {
    chargefinishinfo_ = new ::charge::protobuf::BmsChargeFinish;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.ChargeFinishInfo)
  return chargefinishinfo_;
}
inline ::charge::protobuf::BmsChargeFinish* BmsParamNotifyReq::release_chargefinishinfo() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.ChargeFinishInfo)
  
  ::charge::protobuf::BmsChargeFinish* temp = chargefinishinfo_;
  chargefinishinfo_ = NULL;
  return temp;
}
inline void BmsParamNotifyReq::set_allocated_chargefinishinfo(::charge::protobuf::BmsChargeFinish* chargefinishinfo) {
  delete chargefinishinfo_;
  chargefinishinfo_ = chargefinishinfo;
  if (chargefinishinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.ChargeFinishInfo)
}

// string Reserved1 = 101;
inline void BmsParamNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsParamNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BmsParamNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void BmsParamNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsParamNotifyReq.Reserved1)
}
#endif
inline void BmsParamNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsParamNotifyReq.Reserved1)
}
inline void BmsParamNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsParamNotifyReq.Reserved1)
}
inline ::std::string* BmsParamNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsParamNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsParamNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void BmsParamNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsParamNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BmsParamNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void BmsParamNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsParamNotifyReq.Reserved2)
}
#endif
inline void BmsParamNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsParamNotifyReq.Reserved2)
}
inline void BmsParamNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsParamNotifyReq.Reserved2)
}
inline ::std::string* BmsParamNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsParamNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsParamNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsParamNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsParamNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsParamNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// BmsParamNotifyAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void BmsParamNotifyAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsParamNotifyAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsParamNotifyAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void BmsParamNotifyAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsParamNotifyAns.Confirm)
}

// -------------------------------------------------------------------

// TelemetryReq

// repeated int32 CanIndex = 1;
inline int TelemetryReq::canindex_size() const {
  return canindex_.size();
}
inline void TelemetryReq::clear_canindex() {
  canindex_.Clear();
}
inline ::google::protobuf::int32 TelemetryReq::canindex(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryReq.CanIndex)
  return canindex_.Get(index);
}
inline void TelemetryReq::set_canindex(int index, ::google::protobuf::int32 value) {
  canindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryReq.CanIndex)
}
inline void TelemetryReq::add_canindex(::google::protobuf::int32 value) {
  canindex_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.TelemetryReq.CanIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TelemetryReq::canindex() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.TelemetryReq.CanIndex)
  return canindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TelemetryReq::mutable_canindex() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.TelemetryReq.CanIndex)
  return &canindex_;
}

// string Reserved1 = 101;
inline void TelemetryReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void TelemetryReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryReq.Reserved1)
}
#if LANG_CXX11
inline void TelemetryReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryReq.Reserved1)
}
#endif
inline void TelemetryReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryReq.Reserved1)
}
inline void TelemetryReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryReq.Reserved1)
}
inline ::std::string* TelemetryReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryReq.Reserved1)
}

// string Reserved2 = 102;
inline void TelemetryReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void TelemetryReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryReq.Reserved2)
}
#if LANG_CXX11
inline void TelemetryReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryReq.Reserved2)
}
#endif
inline void TelemetryReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryReq.Reserved2)
}
inline void TelemetryReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryReq.Reserved2)
}
inline ::std::string* TelemetryReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryReq.Reserved2)
}

// -------------------------------------------------------------------

// TelemetryAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void TelemetryAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum TelemetryAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void TelemetryAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryAns.Confirm)
}

// -------------------------------------------------------------------

// StateReq

// repeated int32 CanIndex = 1;
inline int StateReq::canindex_size() const {
  return canindex_.size();
}
inline void StateReq::clear_canindex() {
  canindex_.Clear();
}
inline ::google::protobuf::int32 StateReq::canindex(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateReq.CanIndex)
  return canindex_.Get(index);
}
inline void StateReq::set_canindex(int index, ::google::protobuf::int32 value) {
  canindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateReq.CanIndex)
}
inline void StateReq::add_canindex(::google::protobuf::int32 value) {
  canindex_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.StateReq.CanIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StateReq::canindex() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StateReq.CanIndex)
  return canindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StateReq::mutable_canindex() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StateReq.CanIndex)
  return &canindex_;
}

// string Reserved1 = 101;
inline void StateReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StateReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateReq.Reserved1)
}
#if LANG_CXX11
inline void StateReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateReq.Reserved1)
}
#endif
inline void StateReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateReq.Reserved1)
}
inline void StateReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateReq.Reserved1)
}
inline ::std::string* StateReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateReq.Reserved1)
}

// string Reserved2 = 102;
inline void StateReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StateReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateReq.Reserved2)
}
#if LANG_CXX11
inline void StateReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateReq.Reserved2)
}
#endif
inline void StateReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateReq.Reserved2)
}
inline void StateReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateReq.Reserved2)
}
inline ::std::string* StateReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateReq.Reserved2)
}

// -------------------------------------------------------------------

// StateAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void StateAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum StateAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void StateAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StateAns.Confirm)
}

// -------------------------------------------------------------------

// BmsReq

// repeated int32 CanIndex = 1;
inline int BmsReq::canindex_size() const {
  return canindex_.size();
}
inline void BmsReq::clear_canindex() {
  canindex_.Clear();
}
inline ::google::protobuf::int32 BmsReq::canindex(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsReq.CanIndex)
  return canindex_.Get(index);
}
inline void BmsReq::set_canindex(int index, ::google::protobuf::int32 value) {
  canindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsReq.CanIndex)
}
inline void BmsReq::add_canindex(::google::protobuf::int32 value) {
  canindex_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.BmsReq.CanIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BmsReq::canindex() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.BmsReq.CanIndex)
  return canindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BmsReq::mutable_canindex() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.BmsReq.CanIndex)
  return &canindex_;
}

// string Reserved1 = 101;
inline void BmsReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BmsReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsReq.Reserved1)
}
#if LANG_CXX11
inline void BmsReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsReq.Reserved1)
}
#endif
inline void BmsReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsReq.Reserved1)
}
inline void BmsReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsReq.Reserved1)
}
inline ::std::string* BmsReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsReq.Reserved1)
}

// string Reserved2 = 102;
inline void BmsReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BmsReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsReq.Reserved2)
}
#if LANG_CXX11
inline void BmsReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsReq.Reserved2)
}
#endif
inline void BmsReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsReq.Reserved2)
}
inline void BmsReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsReq.Reserved2)
}
inline ::std::string* BmsReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsReq.Reserved2)
}

// -------------------------------------------------------------------

// BmsAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void BmsAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void BmsAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsAns.Confirm)
}

// -------------------------------------------------------------------

// TelemetryNotifyReq

// int32 CanIndex = 1;
inline void TelemetryNotifyReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 TelemetryNotifyReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.CanIndex)
  return canindex_;
}
inline void TelemetryNotifyReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.CanIndex)
}

// int32 DeviceType = 2;
inline void TelemetryNotifyReq::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 TelemetryNotifyReq::devicetype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.DeviceType)
  return devicetype_;
}
inline void TelemetryNotifyReq::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.DeviceType)
}

// .charge.protobuf.SendReason Reason = 3;
inline void TelemetryNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::SendReason TelemetryNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.Reason)
  return static_cast< ::charge::protobuf::SendReason >(reason_);
}
inline void TelemetryNotifyReq::set_reason(::charge::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.Reason)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool TelemetryNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void TelemetryNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& TelemetryNotifyReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* TelemetryNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryNotifyReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* TelemetryNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryNotifyReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void TelemetryNotifyReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryNotifyReq.SendTime)
}

// repeated .charge.protobuf.MeasureType Type = 5;
inline int TelemetryNotifyReq::type_size() const {
  return type_.size();
}
inline void TelemetryNotifyReq::clear_type() {
  type_.Clear();
}
inline ::charge::protobuf::MeasureType TelemetryNotifyReq::type(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.Type)
  return static_cast< ::charge::protobuf::MeasureType >(type_.Get(index));
}
inline void TelemetryNotifyReq::set_type(int index, ::charge::protobuf::MeasureType value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.Type)
}
inline void TelemetryNotifyReq::add_type(::charge::protobuf::MeasureType value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.TelemetryNotifyReq.Type)
}
inline const ::google::protobuf::RepeatedField<int>&
TelemetryNotifyReq::type() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.TelemetryNotifyReq.Type)
  return type_;
}
inline ::google::protobuf::RepeatedField<int>*
TelemetryNotifyReq::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.TelemetryNotifyReq.Type)
  return &type_;
}

// repeated double Value = 6;
inline int TelemetryNotifyReq::value_size() const {
  return value_.size();
}
inline void TelemetryNotifyReq::clear_value() {
  value_.Clear();
}
inline double TelemetryNotifyReq::value(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.Value)
  return value_.Get(index);
}
inline void TelemetryNotifyReq::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.Value)
}
inline void TelemetryNotifyReq::add_value(double value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.TelemetryNotifyReq.Value)
}
inline const ::google::protobuf::RepeatedField< double >&
TelemetryNotifyReq::value() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.TelemetryNotifyReq.Value)
  return value_;
}
inline ::google::protobuf::RepeatedField< double >*
TelemetryNotifyReq::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.TelemetryNotifyReq.Value)
  return &value_;
}

// string BillCode = 7;
inline void TelemetryNotifyReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryNotifyReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.BillCode)
  return billcode_.GetNoArena();
}
inline void TelemetryNotifyReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.BillCode)
}
#if LANG_CXX11
inline void TelemetryNotifyReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryNotifyReq.BillCode)
}
#endif
inline void TelemetryNotifyReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryNotifyReq.BillCode)
}
inline void TelemetryNotifyReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryNotifyReq.BillCode)
}
inline ::std::string* TelemetryNotifyReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryNotifyReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryNotifyReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryNotifyReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryNotifyReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryNotifyReq.BillCode)
}

// string CtrlBillCode = 8;
inline void TelemetryNotifyReq::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryNotifyReq::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void TelemetryNotifyReq::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
}
#if LANG_CXX11
inline void TelemetryNotifyReq::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
}
#endif
inline void TelemetryNotifyReq::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
}
inline void TelemetryNotifyReq::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
}
inline ::std::string* TelemetryNotifyReq::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryNotifyReq::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryNotifyReq::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryNotifyReq.CtrlBillCode)
}

// string Reserved1 = 101;
inline void TelemetryNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void TelemetryNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void TelemetryNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryNotifyReq.Reserved1)
}
#endif
inline void TelemetryNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryNotifyReq.Reserved1)
}
inline void TelemetryNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryNotifyReq.Reserved1)
}
inline ::std::string* TelemetryNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void TelemetryNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelemetryNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void TelemetryNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void TelemetryNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TelemetryNotifyReq.Reserved2)
}
#endif
inline void TelemetryNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TelemetryNotifyReq.Reserved2)
}
inline void TelemetryNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TelemetryNotifyReq.Reserved2)
}
inline ::std::string* TelemetryNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TelemetryNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelemetryNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TelemetryNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelemetryNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TelemetryNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// TelemetryNotifyAns

// repeated .charge.protobuf.BoolEnum Confirm = 1;
inline int TelemetryNotifyAns::confirm_size() const {
  return confirm_.size();
}
inline void TelemetryNotifyAns::clear_confirm() {
  confirm_.Clear();
}
inline ::charge::protobuf::BoolEnum TelemetryNotifyAns::confirm(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TelemetryNotifyAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_.Get(index));
}
inline void TelemetryNotifyAns::set_confirm(int index, ::charge::protobuf::BoolEnum value) {
  confirm_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TelemetryNotifyAns.Confirm)
}
inline void TelemetryNotifyAns::add_confirm(::charge::protobuf::BoolEnum value) {
  confirm_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.TelemetryNotifyAns.Confirm)
}
inline const ::google::protobuf::RepeatedField<int>&
TelemetryNotifyAns::confirm() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.TelemetryNotifyAns.Confirm)
  return confirm_;
}
inline ::google::protobuf::RepeatedField<int>*
TelemetryNotifyAns::mutable_confirm() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.TelemetryNotifyAns.Confirm)
  return &confirm_;
}

// -------------------------------------------------------------------

// StateNotifyReq

// int32 CanIndex = 1;
inline void StateNotifyReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 StateNotifyReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.CanIndex)
  return canindex_;
}
inline void StateNotifyReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.CanIndex)
}

// int32 DeviceType = 2;
inline void StateNotifyReq::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 StateNotifyReq::devicetype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.DeviceType)
  return devicetype_;
}
inline void StateNotifyReq::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.DeviceType)
}

// .charge.protobuf.SendReason Reason = 3;
inline void StateNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::SendReason StateNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.Reason)
  return static_cast< ::charge::protobuf::SendReason >(reason_);
}
inline void StateNotifyReq::set_reason(::charge::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.Reason)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool StateNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void StateNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& StateNotifyReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* StateNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateNotifyReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* StateNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateNotifyReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void StateNotifyReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateNotifyReq.SendTime)
}

// repeated .charge.protobuf.StateType Type = 5;
inline int StateNotifyReq::type_size() const {
  return type_.size();
}
inline void StateNotifyReq::clear_type() {
  type_.Clear();
}
inline ::charge::protobuf::StateType StateNotifyReq::type(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.Type)
  return static_cast< ::charge::protobuf::StateType >(type_.Get(index));
}
inline void StateNotifyReq::set_type(int index, ::charge::protobuf::StateType value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.Type)
}
inline void StateNotifyReq::add_type(::charge::protobuf::StateType value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.StateNotifyReq.Type)
}
inline const ::google::protobuf::RepeatedField<int>&
StateNotifyReq::type() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StateNotifyReq.Type)
  return type_;
}
inline ::google::protobuf::RepeatedField<int>*
StateNotifyReq::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StateNotifyReq.Type)
  return &type_;
}

// repeated int32 Value = 6;
inline int StateNotifyReq::value_size() const {
  return value_.size();
}
inline void StateNotifyReq::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int32 StateNotifyReq::value(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.Value)
  return value_.Get(index);
}
inline void StateNotifyReq::set_value(int index, ::google::protobuf::int32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.Value)
}
inline void StateNotifyReq::add_value(::google::protobuf::int32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.StateNotifyReq.Value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StateNotifyReq::value() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StateNotifyReq.Value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StateNotifyReq::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StateNotifyReq.Value)
  return &value_;
}

// string BillCode = 7;
inline void StateNotifyReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateNotifyReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.BillCode)
  return billcode_.GetNoArena();
}
inline void StateNotifyReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.BillCode)
}
#if LANG_CXX11
inline void StateNotifyReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateNotifyReq.BillCode)
}
#endif
inline void StateNotifyReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateNotifyReq.BillCode)
}
inline void StateNotifyReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateNotifyReq.BillCode)
}
inline ::std::string* StateNotifyReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateNotifyReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateNotifyReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateNotifyReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateNotifyReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateNotifyReq.BillCode)
}

// string CtrlBillCode = 8;
inline void StateNotifyReq::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateNotifyReq::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void StateNotifyReq::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.CtrlBillCode)
}
#if LANG_CXX11
inline void StateNotifyReq::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateNotifyReq.CtrlBillCode)
}
#endif
inline void StateNotifyReq::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateNotifyReq.CtrlBillCode)
}
inline void StateNotifyReq::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateNotifyReq.CtrlBillCode)
}
inline ::std::string* StateNotifyReq::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateNotifyReq.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateNotifyReq::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateNotifyReq.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateNotifyReq::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateNotifyReq.CtrlBillCode)
}

// string Reserved1 = 101;
inline void StateNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void StateNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void StateNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateNotifyReq.Reserved1)
}
#endif
inline void StateNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateNotifyReq.Reserved1)
}
inline void StateNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateNotifyReq.Reserved1)
}
inline ::std::string* StateNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void StateNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void StateNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void StateNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.StateNotifyReq.Reserved2)
}
#endif
inline void StateNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.StateNotifyReq.Reserved2)
}
inline void StateNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.StateNotifyReq.Reserved2)
}
inline ::std::string* StateNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.StateNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.StateNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.StateNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// StateNotifyAns

// repeated .charge.protobuf.BoolEnum Confirm = 1;
inline int StateNotifyAns::confirm_size() const {
  return confirm_.size();
}
inline void StateNotifyAns::clear_confirm() {
  confirm_.Clear();
}
inline ::charge::protobuf::BoolEnum StateNotifyAns::confirm(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.StateNotifyAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_.Get(index));
}
inline void StateNotifyAns::set_confirm(int index, ::charge::protobuf::BoolEnum value) {
  confirm_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.StateNotifyAns.Confirm)
}
inline void StateNotifyAns::add_confirm(::charge::protobuf::BoolEnum value) {
  confirm_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.StateNotifyAns.Confirm)
}
inline const ::google::protobuf::RepeatedField<int>&
StateNotifyAns::confirm() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.StateNotifyAns.Confirm)
  return confirm_;
}
inline ::google::protobuf::RepeatedField<int>*
StateNotifyAns::mutable_confirm() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.StateNotifyAns.Confirm)
  return &confirm_;
}

// -------------------------------------------------------------------

// BmsNotifyReq

// int32 CanIndex = 1;
inline void BmsNotifyReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 BmsNotifyReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.CanIndex)
  return canindex_;
}
inline void BmsNotifyReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.CanIndex)
}

// string Vin = 2;
inline void BmsNotifyReq::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsNotifyReq::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.Vin)
  return vin_.GetNoArena();
}
inline void BmsNotifyReq::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.Vin)
}
#if LANG_CXX11
inline void BmsNotifyReq::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsNotifyReq.Vin)
}
#endif
inline void BmsNotifyReq::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsNotifyReq.Vin)
}
inline void BmsNotifyReq::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsNotifyReq.Vin)
}
inline ::std::string* BmsNotifyReq::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.Vin)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsNotifyReq::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.Vin)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsNotifyReq::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.Vin)
}

// .charge.protobuf.SendReason Reason = 3;
inline void BmsNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::SendReason BmsNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.Reason)
  return static_cast< ::charge::protobuf::SendReason >(reason_);
}
inline void BmsNotifyReq::set_reason(::charge::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.Reason)
}

// .charge.protobuf.DateTime SendTime = 4;
inline bool BmsNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BmsNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BmsNotifyReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BmsNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* BmsNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BmsNotifyReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.SendTime)
}

// .charge.protobuf.BmsCharging ChargingInfo = 5;
inline bool BmsNotifyReq::has_charginginfo() const {
  return this != internal_default_instance() && charginginfo_ != NULL;
}
inline void BmsNotifyReq::clear_charginginfo() {
  if (GetArenaNoVirtual() == NULL && charginginfo_ != NULL) delete charginginfo_;
  charginginfo_ = NULL;
}
inline const ::charge::protobuf::BmsCharging& BmsNotifyReq::charginginfo() const {
  const ::charge::protobuf::BmsCharging* p = charginginfo_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.ChargingInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::BmsCharging*>(
      &::charge::protobuf::_BmsCharging_default_instance_);
}
inline ::charge::protobuf::BmsCharging* BmsNotifyReq::mutable_charginginfo() {
  
  if (charginginfo_ == NULL) {
    charginginfo_ = new ::charge::protobuf::BmsCharging;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.ChargingInfo)
  return charginginfo_;
}
inline ::charge::protobuf::BmsCharging* BmsNotifyReq::release_charginginfo() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.ChargingInfo)
  
  ::charge::protobuf::BmsCharging* temp = charginginfo_;
  charginginfo_ = NULL;
  return temp;
}
inline void BmsNotifyReq::set_allocated_charginginfo(::charge::protobuf::BmsCharging* charginginfo) {
  delete charginginfo_;
  charginginfo_ = charginginfo;
  if (charginginfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.ChargingInfo)
}

// string BillCode = 6;
inline void BmsNotifyReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsNotifyReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.BillCode)
  return billcode_.GetNoArena();
}
inline void BmsNotifyReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.BillCode)
}
#if LANG_CXX11
inline void BmsNotifyReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsNotifyReq.BillCode)
}
#endif
inline void BmsNotifyReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsNotifyReq.BillCode)
}
inline void BmsNotifyReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsNotifyReq.BillCode)
}
inline ::std::string* BmsNotifyReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsNotifyReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsNotifyReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.BillCode)
}

// string CtrlBillCode = 7;
inline void BmsNotifyReq::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsNotifyReq::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void BmsNotifyReq::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.CtrlBillCode)
}
#if LANG_CXX11
inline void BmsNotifyReq::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsNotifyReq.CtrlBillCode)
}
#endif
inline void BmsNotifyReq::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsNotifyReq.CtrlBillCode)
}
inline void BmsNotifyReq::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsNotifyReq.CtrlBillCode)
}
inline ::std::string* BmsNotifyReq::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsNotifyReq::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsNotifyReq::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.CtrlBillCode)
}

// string Reserved1 = 101;
inline void BmsNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BmsNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void BmsNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsNotifyReq.Reserved1)
}
#endif
inline void BmsNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsNotifyReq.Reserved1)
}
inline void BmsNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsNotifyReq.Reserved1)
}
inline ::std::string* BmsNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void BmsNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BmsNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void BmsNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsNotifyReq.Reserved2)
}
#endif
inline void BmsNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsNotifyReq.Reserved2)
}
inline void BmsNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsNotifyReq.Reserved2)
}
inline ::std::string* BmsNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// BmsNotifyAns

// repeated .charge.protobuf.BoolEnum Confirm = 1;
inline int BmsNotifyAns::confirm_size() const {
  return confirm_.size();
}
inline void BmsNotifyAns::clear_confirm() {
  confirm_.Clear();
}
inline ::charge::protobuf::BoolEnum BmsNotifyAns::confirm(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsNotifyAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_.Get(index));
}
inline void BmsNotifyAns::set_confirm(int index, ::charge::protobuf::BoolEnum value) {
  confirm_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsNotifyAns.Confirm)
}
inline void BmsNotifyAns::add_confirm(::charge::protobuf::BoolEnum value) {
  confirm_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.BmsNotifyAns.Confirm)
}
inline const ::google::protobuf::RepeatedField<int>&
BmsNotifyAns::confirm() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.BmsNotifyAns.Confirm)
  return confirm_;
}
inline ::google::protobuf::RepeatedField<int>*
BmsNotifyAns::mutable_confirm() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.BmsNotifyAns.Confirm)
  return &confirm_;
}

// -------------------------------------------------------------------

// BillsNotConfirmedReq

// int32 CanIndex = 1;
inline void BillsNotConfirmedReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 BillsNotConfirmedReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillsNotConfirmedReq.CanIndex)
  return canindex_;
}
inline void BillsNotConfirmedReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillsNotConfirmedReq.CanIndex)
}

// string Reserved1 = 101;
inline void BillsNotConfirmedReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillsNotConfirmedReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillsNotConfirmedReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillsNotConfirmedReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillsNotConfirmedReq.Reserved1)
}
#if LANG_CXX11
inline void BillsNotConfirmedReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillsNotConfirmedReq.Reserved1)
}
#endif
inline void BillsNotConfirmedReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillsNotConfirmedReq.Reserved1)
}
inline void BillsNotConfirmedReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillsNotConfirmedReq.Reserved1)
}
inline ::std::string* BillsNotConfirmedReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillsNotConfirmedReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillsNotConfirmedReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillsNotConfirmedReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillsNotConfirmedReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillsNotConfirmedReq.Reserved1)
}

// string Reserved2 = 102;
inline void BillsNotConfirmedReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillsNotConfirmedReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillsNotConfirmedReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillsNotConfirmedReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillsNotConfirmedReq.Reserved2)
}
#if LANG_CXX11
inline void BillsNotConfirmedReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillsNotConfirmedReq.Reserved2)
}
#endif
inline void BillsNotConfirmedReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillsNotConfirmedReq.Reserved2)
}
inline void BillsNotConfirmedReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillsNotConfirmedReq.Reserved2)
}
inline ::std::string* BillsNotConfirmedReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillsNotConfirmedReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillsNotConfirmedReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillsNotConfirmedReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillsNotConfirmedReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillsNotConfirmedReq.Reserved2)
}

// -------------------------------------------------------------------

// BillsNotConfirmedAns

// .charge.protobuf.BoolEnum Finished = 1;
inline void BillsNotConfirmedAns::clear_finished() {
  finished_ = 0;
}
inline ::charge::protobuf::BoolEnum BillsNotConfirmedAns::finished() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillsNotConfirmedAns.Finished)
  return static_cast< ::charge::protobuf::BoolEnum >(finished_);
}
inline void BillsNotConfirmedAns::set_finished(::charge::protobuf::BoolEnum value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillsNotConfirmedAns.Finished)
}

// .charge.protobuf.DateTime SendTime = 2;
inline bool BillsNotConfirmedAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BillsNotConfirmedAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BillsNotConfirmedAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BillsNotConfirmedAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BillsNotConfirmedAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillsNotConfirmedAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* BillsNotConfirmedAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillsNotConfirmedAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BillsNotConfirmedAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillsNotConfirmedAns.SendTime)
}

// -------------------------------------------------------------------

// SpecificBillReq

// int32 CanIndex = 1;
inline void SpecificBillReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 SpecificBillReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillReq.CanIndex)
  return canindex_;
}
inline void SpecificBillReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillReq.CanIndex)
}

// string BillCode = 2;
inline void SpecificBillReq::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpecificBillReq::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillReq.BillCode)
  return billcode_.GetNoArena();
}
inline void SpecificBillReq::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillReq.BillCode)
}
#if LANG_CXX11
inline void SpecificBillReq::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SpecificBillReq.BillCode)
}
#endif
inline void SpecificBillReq::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SpecificBillReq.BillCode)
}
inline void SpecificBillReq::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SpecificBillReq.BillCode)
}
inline ::std::string* SpecificBillReq::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SpecificBillReq.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpecificBillReq::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SpecificBillReq.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpecificBillReq::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SpecificBillReq.BillCode)
}

// string Reserved1 = 101;
inline void SpecificBillReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpecificBillReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void SpecificBillReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillReq.Reserved1)
}
#if LANG_CXX11
inline void SpecificBillReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SpecificBillReq.Reserved1)
}
#endif
inline void SpecificBillReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SpecificBillReq.Reserved1)
}
inline void SpecificBillReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SpecificBillReq.Reserved1)
}
inline ::std::string* SpecificBillReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SpecificBillReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpecificBillReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SpecificBillReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpecificBillReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SpecificBillReq.Reserved1)
}

// string Reserved2 = 102;
inline void SpecificBillReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpecificBillReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void SpecificBillReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillReq.Reserved2)
}
#if LANG_CXX11
inline void SpecificBillReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SpecificBillReq.Reserved2)
}
#endif
inline void SpecificBillReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SpecificBillReq.Reserved2)
}
inline void SpecificBillReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SpecificBillReq.Reserved2)
}
inline ::std::string* SpecificBillReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SpecificBillReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpecificBillReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SpecificBillReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpecificBillReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SpecificBillReq.Reserved2)
}

// -------------------------------------------------------------------

// SpecificBillAns

// .charge.protobuf.BoolEnum Result = 1;
inline void SpecificBillAns::clear_result() {
  result_ = 0;
}
inline ::charge::protobuf::BoolEnum SpecificBillAns::result() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillAns.Result)
  return static_cast< ::charge::protobuf::BoolEnum >(result_);
}
inline void SpecificBillAns::set_result(::charge::protobuf::BoolEnum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillAns.Result)
}

// .charge.protobuf.BoolEnum Confirmed = 2;
inline void SpecificBillAns::clear_confirmed() {
  confirmed_ = 0;
}
inline ::charge::protobuf::BoolEnum SpecificBillAns::confirmed() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillAns.Confirmed)
  return static_cast< ::charge::protobuf::BoolEnum >(confirmed_);
}
inline void SpecificBillAns::set_confirmed(::charge::protobuf::BoolEnum value) {
  
  confirmed_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillAns.Confirmed)
}

// .charge.protobuf.DateTime SendTime = 3;
inline bool SpecificBillAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void SpecificBillAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& SpecificBillAns::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* SpecificBillAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SpecificBillAns.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* SpecificBillAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SpecificBillAns.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void SpecificBillAns::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SpecificBillAns.SendTime)
}

// .charge.protobuf.FailReason Reason = 4;
inline void SpecificBillAns::clear_reason() {
  reason_ = 0;
}
inline ::charge::protobuf::FailReason SpecificBillAns::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SpecificBillAns.Reason)
  return static_cast< ::charge::protobuf::FailReason >(reason_);
}
inline void SpecificBillAns::set_reason(::charge::protobuf::FailReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.SpecificBillAns.Reason)
}

// -------------------------------------------------------------------

// ErrorAns

// .charge.protobuf.ErrorCode Error = 1;
inline void ErrorAns::clear_error() {
  error_ = 0;
}
inline ::charge::protobuf::ErrorCode ErrorAns::error() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ErrorAns.Error)
  return static_cast< ::charge::protobuf::ErrorCode >(error_);
}
inline void ErrorAns::set_error(::charge::protobuf::ErrorCode value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ErrorAns.Error)
}

// -------------------------------------------------------------------

// AccountInfo

// string AccountID = 1;
inline void AccountInfo::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountInfo::accountid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.AccountID)
  return accountid_.GetNoArena();
}
inline void AccountInfo::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.AccountID)
}
#if LANG_CXX11
inline void AccountInfo::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.AccountInfo.AccountID)
}
#endif
inline void AccountInfo::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.AccountInfo.AccountID)
}
inline void AccountInfo::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.AccountInfo.AccountID)
}
inline ::std::string* AccountInfo::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountInfo.AccountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountInfo::release_accountid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountInfo.AccountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountInfo::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountInfo.AccountID)
}

// double Money = 2;
inline void AccountInfo::clear_money() {
  money_ = 0;
}
inline double AccountInfo::money() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.Money)
  return money_;
}
inline void AccountInfo::set_money(double value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.Money)
}

// double SFee = 3;
inline void AccountInfo::clear_sfee() {
  sfee_ = 0;
}
inline double AccountInfo::sfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.SFee)
  return sfee_;
}
inline void AccountInfo::set_sfee(double value) {
  
  sfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.SFee)
}

// double BFee = 4;
inline void AccountInfo::clear_bfee() {
  bfee_ = 0;
}
inline double AccountInfo::bfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.BFee)
  return bfee_;
}
inline void AccountInfo::set_bfee(double value) {
  
  bfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.BFee)
}

// double PFee = 5;
inline void AccountInfo::clear_pfee() {
  pfee_ = 0;
}
inline double AccountInfo::pfee() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.PFee)
  return pfee_;
}
inline void AccountInfo::set_pfee(double value) {
  
  pfee_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.PFee)
}

// double Ious = 6;
inline void AccountInfo::clear_ious() {
  ious_ = 0;
}
inline double AccountInfo::ious() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountInfo.Ious)
  return ious_;
}
inline void AccountInfo::set_ious(double value) {
  
  ious_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountInfo.Ious)
}

// -------------------------------------------------------------------

// AccountingStrategy

// .charge.protobuf.DateTime BeginTime = 1;
inline bool AccountingStrategy::has_begintime() const {
  return this != internal_default_instance() && begintime_ != NULL;
}
inline void AccountingStrategy::clear_begintime() {
  if (GetArenaNoVirtual() == NULL && begintime_ != NULL) delete begintime_;
  begintime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountingStrategy::begintime() const {
  const ::charge::protobuf::DateTime* p = begintime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountingStrategy.BeginTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountingStrategy::mutable_begintime() {
  
  if (begintime_ == NULL) {
    begintime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountingStrategy.BeginTime)
  return begintime_;
}
inline ::charge::protobuf::DateTime* AccountingStrategy::release_begintime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountingStrategy.BeginTime)
  
  ::charge::protobuf::DateTime* temp = begintime_;
  begintime_ = NULL;
  return temp;
}
inline void AccountingStrategy::set_allocated_begintime(::charge::protobuf::DateTime* begintime) {
  delete begintime_;
  begintime_ = begintime;
  if (begintime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountingStrategy.BeginTime)
}

// .charge.protobuf.DateTime EndTime = 2;
inline bool AccountingStrategy::has_endtime() const {
  return this != internal_default_instance() && endtime_ != NULL;
}
inline void AccountingStrategy::clear_endtime() {
  if (GetArenaNoVirtual() == NULL && endtime_ != NULL) delete endtime_;
  endtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& AccountingStrategy::endtime() const {
  const ::charge::protobuf::DateTime* p = endtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountingStrategy.EndTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* AccountingStrategy::mutable_endtime() {
  
  if (endtime_ == NULL) {
    endtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.AccountingStrategy.EndTime)
  return endtime_;
}
inline ::charge::protobuf::DateTime* AccountingStrategy::release_endtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.AccountingStrategy.EndTime)
  
  ::charge::protobuf::DateTime* temp = endtime_;
  endtime_ = NULL;
  return temp;
}
inline void AccountingStrategy::set_allocated_endtime(::charge::protobuf::DateTime* endtime) {
  delete endtime_;
  endtime_ = endtime;
  if (endtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.AccountingStrategy.EndTime)
}

// double kWhPrice = 3;
inline void AccountingStrategy::clear_kwhprice() {
  kwhprice_ = 0;
}
inline double AccountingStrategy::kwhprice() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountingStrategy.kWhPrice)
  return kwhprice_;
}
inline void AccountingStrategy::set_kwhprice(double value) {
  
  kwhprice_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountingStrategy.kWhPrice)
}

// double ServicePrice = 4;
inline void AccountingStrategy::clear_serviceprice() {
  serviceprice_ = 0;
}
inline double AccountingStrategy::serviceprice() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.AccountingStrategy.ServicePrice)
  return serviceprice_;
}
inline void AccountingStrategy::set_serviceprice(double value) {
  
  serviceprice_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.AccountingStrategy.ServicePrice)
}

// -------------------------------------------------------------------

// BillInfo

// string BillCode = 1;
inline void BillInfo::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.BillCode)
  return billcode_.GetNoArena();
}
inline void BillInfo::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.BillCode)
}
#if LANG_CXX11
inline void BillInfo::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.BillCode)
}
#endif
inline void BillInfo::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.BillCode)
}
inline void BillInfo::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.BillCode)
}
inline ::std::string* BillInfo::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.BillCode)
}

// .charge.protobuf.BillStatus Status = 2;
inline void BillInfo::clear_status() {
  status_ = 0;
}
inline ::charge::protobuf::BillStatus BillInfo::status() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Status)
  return static_cast< ::charge::protobuf::BillStatus >(status_);
}
inline void BillInfo::set_status(::charge::protobuf::BillStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Status)
}

// string CtrlBillCode = 20;
inline void BillInfo::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void BillInfo::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.CtrlBillCode)
}
#if LANG_CXX11
inline void BillInfo::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.CtrlBillCode)
}
#endif
inline void BillInfo::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.CtrlBillCode)
}
inline void BillInfo::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.CtrlBillCode)
}
inline ::std::string* BillInfo::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.CtrlBillCode)
}

// int32 BillType = 3;
inline void BillInfo::clear_billtype() {
  billtype_ = 0;
}
inline ::google::protobuf::int32 BillInfo::billtype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.BillType)
  return billtype_;
}
inline void BillInfo::set_billtype(::google::protobuf::int32 value) {
  
  billtype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.BillType)
}

// int32 Reason = 4;
inline void BillInfo::clear_reason() {
  reason_ = 0;
}
inline ::google::protobuf::int32 BillInfo::reason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Reason)
  return reason_;
}
inline void BillInfo::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Reason)
}

// .charge.protobuf.DateTime BeginTime = 5;
inline bool BillInfo::has_begintime() const {
  return this != internal_default_instance() && begintime_ != NULL;
}
inline void BillInfo::clear_begintime() {
  if (GetArenaNoVirtual() == NULL && begintime_ != NULL) delete begintime_;
  begintime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BillInfo::begintime() const {
  const ::charge::protobuf::DateTime* p = begintime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.BeginTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BillInfo::mutable_begintime() {
  
  if (begintime_ == NULL) {
    begintime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.BeginTime)
  return begintime_;
}
inline ::charge::protobuf::DateTime* BillInfo::release_begintime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.BeginTime)
  
  ::charge::protobuf::DateTime* temp = begintime_;
  begintime_ = NULL;
  return temp;
}
inline void BillInfo::set_allocated_begintime(::charge::protobuf::DateTime* begintime) {
  delete begintime_;
  begintime_ = begintime;
  if (begintime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.BeginTime)
}

// .charge.protobuf.DateTime EndTime = 6;
inline bool BillInfo::has_endtime() const {
  return this != internal_default_instance() && endtime_ != NULL;
}
inline void BillInfo::clear_endtime() {
  if (GetArenaNoVirtual() == NULL && endtime_ != NULL) delete endtime_;
  endtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& BillInfo::endtime() const {
  const ::charge::protobuf::DateTime* p = endtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.EndTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* BillInfo::mutable_endtime() {
  
  if (endtime_ == NULL) {
    endtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.EndTime)
  return endtime_;
}
inline ::charge::protobuf::DateTime* BillInfo::release_endtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.EndTime)
  
  ::charge::protobuf::DateTime* temp = endtime_;
  endtime_ = NULL;
  return temp;
}
inline void BillInfo::set_allocated_endtime(::charge::protobuf::DateTime* endtime) {
  delete endtime_;
  endtime_ = endtime;
  if (endtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.EndTime)
}

// double BeginMeter = 7;
inline void BillInfo::clear_beginmeter() {
  beginmeter_ = 0;
}
inline double BillInfo::beginmeter() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.BeginMeter)
  return beginmeter_;
}
inline void BillInfo::set_beginmeter(double value) {
  
  beginmeter_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.BeginMeter)
}

// double EndMeter = 8;
inline void BillInfo::clear_endmeter() {
  endmeter_ = 0;
}
inline double BillInfo::endmeter() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.EndMeter)
  return endmeter_;
}
inline void BillInfo::set_endmeter(double value) {
  
  endmeter_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.EndMeter)
}

// int32 BeginSoc = 9;
inline void BillInfo::clear_beginsoc() {
  beginsoc_ = 0;
}
inline ::google::protobuf::int32 BillInfo::beginsoc() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.BeginSoc)
  return beginsoc_;
}
inline void BillInfo::set_beginsoc(::google::protobuf::int32 value) {
  
  beginsoc_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.BeginSoc)
}

// int32 EndSoc = 10;
inline void BillInfo::clear_endsoc() {
  endsoc_ = 0;
}
inline ::google::protobuf::int32 BillInfo::endsoc() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.EndSoc)
  return endsoc_;
}
inline void BillInfo::set_endsoc(::google::protobuf::int32 value) {
  
  endsoc_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.EndSoc)
}

// .charge.protobuf.StartChargeType ChargeType = 11;
inline void BillInfo::clear_chargetype() {
  chargetype_ = 0;
}
inline ::charge::protobuf::StartChargeType BillInfo::chargetype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.ChargeType)
  return static_cast< ::charge::protobuf::StartChargeType >(chargetype_);
}
inline void BillInfo::set_chargetype(::charge::protobuf::StartChargeType value) {
  
  chargetype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.ChargeType)
}

// .charge.protobuf.StartChargeWay ChargeWay = 12;
inline void BillInfo::clear_chargeway() {
  chargeway_ = 0;
}
inline ::charge::protobuf::StartChargeWay BillInfo::chargeway() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.ChargeWay)
  return static_cast< ::charge::protobuf::StartChargeWay >(chargeway_);
}
inline void BillInfo::set_chargeway(::charge::protobuf::StartChargeWay value) {
  
  chargeway_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.ChargeWay)
}

// string CardNo = 13;
inline void BillInfo::clear_cardno() {
  cardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::cardno() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.CardNo)
  return cardno_.GetNoArena();
}
inline void BillInfo::set_cardno(const ::std::string& value) {
  
  cardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.CardNo)
}
#if LANG_CXX11
inline void BillInfo::set_cardno(::std::string&& value) {
  
  cardno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.CardNo)
}
#endif
inline void BillInfo::set_cardno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.CardNo)
}
inline void BillInfo::set_cardno(const char* value, size_t size) {
  
  cardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.CardNo)
}
inline ::std::string* BillInfo::mutable_cardno() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.CardNo)
  return cardno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_cardno() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.CardNo)
  
  return cardno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_cardno(::std::string* cardno) {
  if (cardno != NULL) {
    
  } else {
    
  }
  cardno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardno);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.CardNo)
}

// string VIN = 14;
inline void BillInfo::clear_vin() {
  vin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::vin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.VIN)
  return vin_.GetNoArena();
}
inline void BillInfo::set_vin(const ::std::string& value) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.VIN)
}
#if LANG_CXX11
inline void BillInfo::set_vin(::std::string&& value) {
  
  vin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.VIN)
}
#endif
inline void BillInfo::set_vin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.VIN)
}
inline void BillInfo::set_vin(const char* value, size_t size) {
  
  vin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.VIN)
}
inline ::std::string* BillInfo::mutable_vin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.VIN)
  return vin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_vin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.VIN)
  
  return vin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_vin(::std::string* vin) {
  if (vin != NULL) {
    
  } else {
    
  }
  vin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.VIN)
}

// string Plate = 15;
inline void BillInfo::clear_plate() {
  plate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::plate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Plate)
  return plate_.GetNoArena();
}
inline void BillInfo::set_plate(const ::std::string& value) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Plate)
}
#if LANG_CXX11
inline void BillInfo::set_plate(::std::string&& value) {
  
  plate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.Plate)
}
#endif
inline void BillInfo::set_plate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.Plate)
}
inline void BillInfo::set_plate(const char* value, size_t size) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.Plate)
}
inline ::std::string* BillInfo::mutable_plate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.Plate)
  return plate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_plate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.Plate)
  
  return plate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_plate(::std::string* plate) {
  if (plate != NULL) {
    
  } else {
    
  }
  plate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.Plate)
}

// repeated .charge.protobuf.ChargeFrozen ChargeFrozen = 16;
inline int BillInfo::chargefrozen_size() const {
  return chargefrozen_.size();
}
inline void BillInfo::clear_chargefrozen() {
  chargefrozen_.Clear();
}
inline const ::charge::protobuf::ChargeFrozen& BillInfo::chargefrozen(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.ChargeFrozen)
  return chargefrozen_.Get(index);
}
inline ::charge::protobuf::ChargeFrozen* BillInfo::mutable_chargefrozen(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.ChargeFrozen)
  return chargefrozen_.Mutable(index);
}
inline ::charge::protobuf::ChargeFrozen* BillInfo::add_chargefrozen() {
  // @@protoc_insertion_point(field_add:charge.protobuf.BillInfo.ChargeFrozen)
  return chargefrozen_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargeFrozen >*
BillInfo::mutable_chargefrozen() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.BillInfo.ChargeFrozen)
  return &chargefrozen_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::ChargeFrozen >&
BillInfo::chargefrozen() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.BillInfo.ChargeFrozen)
  return chargefrozen_;
}

// repeated .charge.protobuf.DischargeFrozen DischargeFrozen = 17;
inline int BillInfo::dischargefrozen_size() const {
  return dischargefrozen_.size();
}
inline void BillInfo::clear_dischargefrozen() {
  dischargefrozen_.Clear();
}
inline const ::charge::protobuf::DischargeFrozen& BillInfo::dischargefrozen(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.DischargeFrozen)
  return dischargefrozen_.Get(index);
}
inline ::charge::protobuf::DischargeFrozen* BillInfo::mutable_dischargefrozen(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.DischargeFrozen)
  return dischargefrozen_.Mutable(index);
}
inline ::charge::protobuf::DischargeFrozen* BillInfo::add_dischargefrozen() {
  // @@protoc_insertion_point(field_add:charge.protobuf.BillInfo.DischargeFrozen)
  return dischargefrozen_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::DischargeFrozen >*
BillInfo::mutable_dischargefrozen() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.BillInfo.DischargeFrozen)
  return &dischargefrozen_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::DischargeFrozen >&
BillInfo::dischargefrozen() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.BillInfo.DischargeFrozen)
  return dischargefrozen_;
}

// int32 QueueNumber = 18;
inline void BillInfo::clear_queuenumber() {
  queuenumber_ = 0;
}
inline ::google::protobuf::int32 BillInfo::queuenumber() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.QueueNumber)
  return queuenumber_;
}
inline void BillInfo::set_queuenumber(::google::protobuf::int32 value) {
  
  queuenumber_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.QueueNumber)
}

// .charge.protobuf.BoolEnum Emergency = 19;
inline void BillInfo::clear_emergency() {
  emergency_ = 0;
}
inline ::charge::protobuf::BoolEnum BillInfo::emergency() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Emergency)
  return static_cast< ::charge::protobuf::BoolEnum >(emergency_);
}
inline void BillInfo::set_emergency(::charge::protobuf::BoolEnum value) {
  
  emergency_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Emergency)
}

// int32 GunNum = 21;
inline void BillInfo::clear_gunnum() {
  gunnum_ = 0;
}
inline ::google::protobuf::int32 BillInfo::gunnum() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.GunNum)
  return gunnum_;
}
inline void BillInfo::set_gunnum(::google::protobuf::int32 value) {
  
  gunnum_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.GunNum)
}

// string Reserved1 = 101;
inline void BillInfo::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillInfo::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Reserved1)
}
#if LANG_CXX11
inline void BillInfo::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.Reserved1)
}
#endif
inline void BillInfo::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.Reserved1)
}
inline void BillInfo::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.Reserved1)
}
inline ::std::string* BillInfo::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.Reserved1)
}

// string Reserved2 = 102;
inline void BillInfo::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillInfo::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Reserved2)
}
#if LANG_CXX11
inline void BillInfo::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.Reserved2)
}
#endif
inline void BillInfo::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.Reserved2)
}
inline void BillInfo::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.Reserved2)
}
inline ::std::string* BillInfo::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.Reserved2)
}

// string Reserved3 = 103;
inline void BillInfo::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillInfo::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BillInfo.Reserved3)
  return reserved3_.GetNoArena();
}
inline void BillInfo::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BillInfo.Reserved3)
}
#if LANG_CXX11
inline void BillInfo::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BillInfo.Reserved3)
}
#endif
inline void BillInfo::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BillInfo.Reserved3)
}
inline void BillInfo::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BillInfo.Reserved3)
}
inline ::std::string* BillInfo::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BillInfo.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillInfo::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BillInfo.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillInfo::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BillInfo.Reserved3)
}

// -------------------------------------------------------------------

// CarInfo

// string CarID = 1;
inline void CarInfo::clear_carid() {
  carid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CarInfo::carid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CarInfo.CarID)
  return carid_.GetNoArena();
}
inline void CarInfo::set_carid(const ::std::string& value) {
  
  carid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CarInfo.CarID)
}
#if LANG_CXX11
inline void CarInfo::set_carid(::std::string&& value) {
  
  carid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CarInfo.CarID)
}
#endif
inline void CarInfo::set_carid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  carid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CarInfo.CarID)
}
inline void CarInfo::set_carid(const char* value, size_t size) {
  
  carid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CarInfo.CarID)
}
inline ::std::string* CarInfo::mutable_carid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CarInfo.CarID)
  return carid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CarInfo::release_carid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CarInfo.CarID)
  
  return carid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarInfo::set_allocated_carid(::std::string* carid) {
  if (carid != NULL) {
    
  } else {
    
  }
  carid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CarInfo.CarID)
}

// string CarVIN = 2;
inline void CarInfo::clear_carvin() {
  carvin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CarInfo::carvin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CarInfo.CarVIN)
  return carvin_.GetNoArena();
}
inline void CarInfo::set_carvin(const ::std::string& value) {
  
  carvin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CarInfo.CarVIN)
}
#if LANG_CXX11
inline void CarInfo::set_carvin(::std::string&& value) {
  
  carvin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CarInfo.CarVIN)
}
#endif
inline void CarInfo::set_carvin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  carvin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CarInfo.CarVIN)
}
inline void CarInfo::set_carvin(const char* value, size_t size) {
  
  carvin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CarInfo.CarVIN)
}
inline ::std::string* CarInfo::mutable_carvin() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CarInfo.CarVIN)
  return carvin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CarInfo::release_carvin() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CarInfo.CarVIN)
  
  return carvin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarInfo::set_allocated_carvin(::std::string* carvin) {
  if (carvin != NULL) {
    
  } else {
    
  }
  carvin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carvin);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CarInfo.CarVIN)
}

// int32 PRI = 3;
inline void CarInfo::clear_pri() {
  pri_ = 0;
}
inline ::google::protobuf::int32 CarInfo::pri() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CarInfo.PRI)
  return pri_;
}
inline void CarInfo::set_pri(::google::protobuf::int32 value) {
  
  pri_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CarInfo.PRI)
}

// string Plate = 4;
inline void CarInfo::clear_plate() {
  plate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CarInfo::plate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CarInfo.Plate)
  return plate_.GetNoArena();
}
inline void CarInfo::set_plate(const ::std::string& value) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CarInfo.Plate)
}
#if LANG_CXX11
inline void CarInfo::set_plate(::std::string&& value) {
  
  plate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CarInfo.Plate)
}
#endif
inline void CarInfo::set_plate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CarInfo.Plate)
}
inline void CarInfo::set_plate(const char* value, size_t size) {
  
  plate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CarInfo.Plate)
}
inline ::std::string* CarInfo::mutable_plate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CarInfo.Plate)
  return plate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CarInfo::release_plate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CarInfo.Plate)
  
  return plate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarInfo::set_allocated_plate(::std::string* plate) {
  if (plate != NULL) {
    
  } else {
    
  }
  plate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CarInfo.Plate)
}

// .charge.protobuf.BoolEnum IsDel = 5;
inline void CarInfo::clear_isdel() {
  isdel_ = 0;
}
inline ::charge::protobuf::BoolEnum CarInfo::isdel() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CarInfo.IsDel)
  return static_cast< ::charge::protobuf::BoolEnum >(isdel_);
}
inline void CarInfo::set_isdel(::charge::protobuf::BoolEnum value) {
  
  isdel_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CarInfo.IsDel)
}

// -------------------------------------------------------------------

// CardInfo

// string CardID = 1;
inline void CardInfo::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardInfo::cardid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CardInfo.CardID)
  return cardid_.GetNoArena();
}
inline void CardInfo::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CardInfo.CardID)
}
#if LANG_CXX11
inline void CardInfo::set_cardid(::std::string&& value) {
  
  cardid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CardInfo.CardID)
}
#endif
inline void CardInfo::set_cardid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CardInfo.CardID)
}
inline void CardInfo::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CardInfo.CardID)
}
inline ::std::string* CardInfo::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CardInfo.CardID)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardInfo::release_cardid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CardInfo.CardID)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardInfo::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CardInfo.CardID)
}

// string CardCode = 2;
inline void CardInfo::clear_cardcode() {
  cardcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardInfo::cardcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CardInfo.CardCode)
  return cardcode_.GetNoArena();
}
inline void CardInfo::set_cardcode(const ::std::string& value) {
  
  cardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CardInfo.CardCode)
}
#if LANG_CXX11
inline void CardInfo::set_cardcode(::std::string&& value) {
  
  cardcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CardInfo.CardCode)
}
#endif
inline void CardInfo::set_cardcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CardInfo.CardCode)
}
inline void CardInfo::set_cardcode(const char* value, size_t size) {
  
  cardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CardInfo.CardCode)
}
inline ::std::string* CardInfo::mutable_cardcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CardInfo.CardCode)
  return cardcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardInfo::release_cardcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CardInfo.CardCode)
  
  return cardcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardInfo::set_allocated_cardcode(::std::string* cardcode) {
  if (cardcode != NULL) {
    
  } else {
    
  }
  cardcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CardInfo.CardCode)
}

// .charge.protobuf.BoolEnum IsDel = 3;
inline void CardInfo::clear_isdel() {
  isdel_ = 0;
}
inline ::charge::protobuf::BoolEnum CardInfo::isdel() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CardInfo.IsDel)
  return static_cast< ::charge::protobuf::BoolEnum >(isdel_);
}
inline void CardInfo::set_isdel(::charge::protobuf::BoolEnum value) {
  
  isdel_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CardInfo.IsDel)
}

// double Balabce = 4;
inline void CardInfo::clear_balabce() {
  balabce_ = 0;
}
inline double CardInfo::balabce() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CardInfo.Balabce)
  return balabce_;
}
inline void CardInfo::set_balabce(double value) {
  
  balabce_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CardInfo.Balabce)
}

// -------------------------------------------------------------------

// ChargerState

// int32 CanIndex = 1;
inline void ChargerState::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 ChargerState::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.CanIndex)
  return canindex_;
}
inline void ChargerState::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerState.CanIndex)
}

// .charge.protobuf.ChargerStateEnum State = 2;
inline void ChargerState::clear_state() {
  state_ = 0;
}
inline ::charge::protobuf::ChargerStateEnum ChargerState::state() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.State)
  return static_cast< ::charge::protobuf::ChargerStateEnum >(state_);
}
inline void ChargerState::set_state(::charge::protobuf::ChargerStateEnum value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerState.State)
}

// .charge.protobuf.DateTime Timestamp = 3;
inline bool ChargerState::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void ChargerState::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::charge::protobuf::DateTime& ChargerState::timestamp() const {
  const ::charge::protobuf::DateTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.Timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ChargerState::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerState.Timestamp)
  return timestamp_;
}
inline ::charge::protobuf::DateTime* ChargerState::release_timestamp() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerState.Timestamp)
  
  ::charge::protobuf::DateTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void ChargerState::set_allocated_timestamp(::charge::protobuf::DateTime* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerState.Timestamp)
}

// int32 QueueSequence = 4;
inline void ChargerState::clear_queuesequence() {
  queuesequence_ = 0;
}
inline ::google::protobuf::int32 ChargerState::queuesequence() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.QueueSequence)
  return queuesequence_;
}
inline void ChargerState::set_queuesequence(::google::protobuf::int32 value) {
  
  queuesequence_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerState.QueueSequence)
}

// string BillCode = 5;
inline void ChargerState::clear_billcode() {
  billcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerState::billcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.BillCode)
  return billcode_.GetNoArena();
}
inline void ChargerState::set_billcode(const ::std::string& value) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerState.BillCode)
}
#if LANG_CXX11
inline void ChargerState::set_billcode(::std::string&& value) {
  
  billcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerState.BillCode)
}
#endif
inline void ChargerState::set_billcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerState.BillCode)
}
inline void ChargerState::set_billcode(const char* value, size_t size) {
  
  billcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerState.BillCode)
}
inline ::std::string* ChargerState::mutable_billcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerState.BillCode)
  return billcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerState::release_billcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerState.BillCode)
  
  return billcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerState::set_allocated_billcode(::std::string* billcode) {
  if (billcode != NULL) {
    
  } else {
    
  }
  billcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerState.BillCode)
}

// string CtrlBillCode = 6;
inline void ChargerState::clear_ctrlbillcode() {
  ctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChargerState::ctrlbillcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargerState.CtrlBillCode)
  return ctrlbillcode_.GetNoArena();
}
inline void ChargerState::set_ctrlbillcode(const ::std::string& value) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargerState.CtrlBillCode)
}
#if LANG_CXX11
inline void ChargerState::set_ctrlbillcode(::std::string&& value) {
  
  ctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ChargerState.CtrlBillCode)
}
#endif
inline void ChargerState::set_ctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ChargerState.CtrlBillCode)
}
inline void ChargerState::set_ctrlbillcode(const char* value, size_t size) {
  
  ctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ChargerState.CtrlBillCode)
}
inline ::std::string* ChargerState::mutable_ctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargerState.CtrlBillCode)
  return ctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChargerState::release_ctrlbillcode() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargerState.CtrlBillCode)
  
  return ctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChargerState::set_allocated_ctrlbillcode(::std::string* ctrlbillcode) {
  if (ctrlbillcode != NULL) {
    
  } else {
    
  }
  ctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargerState.CtrlBillCode)
}

// -------------------------------------------------------------------

// ChargingStrategy

// .charge.protobuf.DateTime BeginTime = 1;
inline bool ChargingStrategy::has_begintime() const {
  return this != internal_default_instance() && begintime_ != NULL;
}
inline void ChargingStrategy::clear_begintime() {
  if (GetArenaNoVirtual() == NULL && begintime_ != NULL) delete begintime_;
  begintime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ChargingStrategy::begintime() const {
  const ::charge::protobuf::DateTime* p = begintime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargingStrategy.BeginTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ChargingStrategy::mutable_begintime() {
  
  if (begintime_ == NULL) {
    begintime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargingStrategy.BeginTime)
  return begintime_;
}
inline ::charge::protobuf::DateTime* ChargingStrategy::release_begintime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargingStrategy.BeginTime)
  
  ::charge::protobuf::DateTime* temp = begintime_;
  begintime_ = NULL;
  return temp;
}
inline void ChargingStrategy::set_allocated_begintime(::charge::protobuf::DateTime* begintime) {
  delete begintime_;
  begintime_ = begintime;
  if (begintime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargingStrategy.BeginTime)
}

// .charge.protobuf.DateTime EndTime = 2;
inline bool ChargingStrategy::has_endtime() const {
  return this != internal_default_instance() && endtime_ != NULL;
}
inline void ChargingStrategy::clear_endtime() {
  if (GetArenaNoVirtual() == NULL && endtime_ != NULL) delete endtime_;
  endtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ChargingStrategy::endtime() const {
  const ::charge::protobuf::DateTime* p = endtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargingStrategy.EndTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ChargingStrategy::mutable_endtime() {
  
  if (endtime_ == NULL) {
    endtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargingStrategy.EndTime)
  return endtime_;
}
inline ::charge::protobuf::DateTime* ChargingStrategy::release_endtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargingStrategy.EndTime)
  
  ::charge::protobuf::DateTime* temp = endtime_;
  endtime_ = NULL;
  return temp;
}
inline void ChargingStrategy::set_allocated_endtime(::charge::protobuf::DateTime* endtime) {
  delete endtime_;
  endtime_ = endtime;
  if (endtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargingStrategy.EndTime)
}

// double SuggestValue = 3;
inline void ChargingStrategy::clear_suggestvalue() {
  suggestvalue_ = 0;
}
inline double ChargingStrategy::suggestvalue() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargingStrategy.SuggestValue)
  return suggestvalue_;
}
inline void ChargingStrategy::set_suggestvalue(double value) {
  
  suggestvalue_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargingStrategy.SuggestValue)
}

// -------------------------------------------------------------------

// ChargeFrozen

// .charge.protobuf.DateTime FrozenTime = 1;
inline bool ChargeFrozen::has_frozentime() const {
  return this != internal_default_instance() && frozentime_ != NULL;
}
inline void ChargeFrozen::clear_frozentime() {
  if (GetArenaNoVirtual() == NULL && frozentime_ != NULL) delete frozentime_;
  frozentime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ChargeFrozen::frozentime() const {
  const ::charge::protobuf::DateTime* p = frozentime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargeFrozen.FrozenTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ChargeFrozen::mutable_frozentime() {
  
  if (frozentime_ == NULL) {
    frozentime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ChargeFrozen.FrozenTime)
  return frozentime_;
}
inline ::charge::protobuf::DateTime* ChargeFrozen::release_frozentime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ChargeFrozen.FrozenTime)
  
  ::charge::protobuf::DateTime* temp = frozentime_;
  frozentime_ = NULL;
  return temp;
}
inline void ChargeFrozen::set_allocated_frozentime(::charge::protobuf::DateTime* frozentime) {
  delete frozentime_;
  frozentime_ = frozentime;
  if (frozentime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ChargeFrozen.FrozenTime)
}

// double kWh = 2;
inline void ChargeFrozen::clear_kwh() {
  kwh_ = 0;
}
inline double ChargeFrozen::kwh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ChargeFrozen.kWh)
  return kwh_;
}
inline void ChargeFrozen::set_kwh(double value) {
  
  kwh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ChargeFrozen.kWh)
}

// -------------------------------------------------------------------

// DischargeFrozen

// .charge.protobuf.DateTime FrozenTime = 1;
inline bool DischargeFrozen::has_frozentime() const {
  return this != internal_default_instance() && frozentime_ != NULL;
}
inline void DischargeFrozen::clear_frozentime() {
  if (GetArenaNoVirtual() == NULL && frozentime_ != NULL) delete frozentime_;
  frozentime_ = NULL;
}
inline const ::charge::protobuf::DateTime& DischargeFrozen::frozentime() const {
  const ::charge::protobuf::DateTime* p = frozentime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.DischargeFrozen.FrozenTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* DischargeFrozen::mutable_frozentime() {
  
  if (frozentime_ == NULL) {
    frozentime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.DischargeFrozen.FrozenTime)
  return frozentime_;
}
inline ::charge::protobuf::DateTime* DischargeFrozen::release_frozentime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.DischargeFrozen.FrozenTime)
  
  ::charge::protobuf::DateTime* temp = frozentime_;
  frozentime_ = NULL;
  return temp;
}
inline void DischargeFrozen::set_allocated_frozentime(::charge::protobuf::DateTime* frozentime) {
  delete frozentime_;
  frozentime_ = frozentime;
  if (frozentime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.DischargeFrozen.FrozenTime)
}

// double kWh = 2;
inline void DischargeFrozen::clear_kwh() {
  kwh_ = 0;
}
inline double DischargeFrozen::kwh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.DischargeFrozen.kWh)
  return kwh_;
}
inline void DischargeFrozen::set_kwh(double value) {
  
  kwh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.DischargeFrozen.kWh)
}

// -------------------------------------------------------------------

// MasterSlaveInfo

// int32 GunNumber = 1;
inline void MasterSlaveInfo::clear_gunnumber() {
  gunnumber_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::gunnumber() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.GunNumber)
  return gunnumber_;
}
inline void MasterSlaveInfo::set_gunnumber(::google::protobuf::int32 value) {
  
  gunnumber_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.GunNumber)
}

// int32 MasterGun = 2;
inline void MasterSlaveInfo::clear_mastergun() {
  mastergun_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::mastergun() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.MasterGun)
  return mastergun_;
}
inline void MasterSlaveInfo::set_mastergun(::google::protobuf::int32 value) {
  
  mastergun_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.MasterGun)
}

// int32 SlaveGun1 = 3;
inline void MasterSlaveInfo::clear_slavegun1() {
  slavegun1_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun1)
  return slavegun1_;
}
inline void MasterSlaveInfo::set_slavegun1(::google::protobuf::int32 value) {
  
  slavegun1_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun1)
}

// int32 SlaveGun2 = 4;
inline void MasterSlaveInfo::clear_slavegun2() {
  slavegun2_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun2)
  return slavegun2_;
}
inline void MasterSlaveInfo::set_slavegun2(::google::protobuf::int32 value) {
  
  slavegun2_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun2)
}

// int32 SlaveGun3 = 5;
inline void MasterSlaveInfo::clear_slavegun3() {
  slavegun3_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun3)
  return slavegun3_;
}
inline void MasterSlaveInfo::set_slavegun3(::google::protobuf::int32 value) {
  
  slavegun3_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun3)
}

// int32 SlaveGun4 = 6;
inline void MasterSlaveInfo::clear_slavegun4() {
  slavegun4_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun4() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun4)
  return slavegun4_;
}
inline void MasterSlaveInfo::set_slavegun4(::google::protobuf::int32 value) {
  
  slavegun4_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun4)
}

// int32 SlaveGun5 = 7;
inline void MasterSlaveInfo::clear_slavegun5() {
  slavegun5_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun5() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun5)
  return slavegun5_;
}
inline void MasterSlaveInfo::set_slavegun5(::google::protobuf::int32 value) {
  
  slavegun5_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun5)
}

// int32 SlaveGun6 = 8;
inline void MasterSlaveInfo::clear_slavegun6() {
  slavegun6_ = 0;
}
inline ::google::protobuf::int32 MasterSlaveInfo::slavegun6() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.MasterSlaveInfo.SlaveGun6)
  return slavegun6_;
}
inline void MasterSlaveInfo::set_slavegun6(::google::protobuf::int32 value) {
  
  slavegun6_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.MasterSlaveInfo.SlaveGun6)
}

// -------------------------------------------------------------------

// BmsShakehands

// double VolMaxAllowed = 1;
inline void BmsShakehands::clear_volmaxallowed() {
  volmaxallowed_ = 0;
}
inline double BmsShakehands::volmaxallowed() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.VolMaxAllowed)
  return volmaxallowed_;
}
inline void BmsShakehands::set_volmaxallowed(double value) {
  
  volmaxallowed_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.VolMaxAllowed)
}

// int32 BatteryType = 2;
inline void BmsShakehands::clear_batterytype() {
  batterytype_ = 0;
}
inline ::google::protobuf::int32 BmsShakehands::batterytype() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.BatteryType)
  return batterytype_;
}
inline void BmsShakehands::set_batterytype(::google::protobuf::int32 value) {
  
  batterytype_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.BatteryType)
}

// double CapacityRated = 3;
inline void BmsShakehands::clear_capacityrated() {
  capacityrated_ = 0;
}
inline double BmsShakehands::capacityrated() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.CapacityRated)
  return capacityrated_;
}
inline void BmsShakehands::set_capacityrated(double value) {
  
  capacityrated_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.CapacityRated)
}

// double VoltageRated = 4;
inline void BmsShakehands::clear_voltagerated() {
  voltagerated_ = 0;
}
inline double BmsShakehands::voltagerated() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.VoltageRated)
  return voltagerated_;
}
inline void BmsShakehands::set_voltagerated(double value) {
  
  voltagerated_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.VoltageRated)
}

// string BatteryVendor = 5;
inline void BmsShakehands::clear_batteryvendor() {
  batteryvendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsShakehands::batteryvendor() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.BatteryVendor)
  return batteryvendor_.GetNoArena();
}
inline void BmsShakehands::set_batteryvendor(const ::std::string& value) {
  
  batteryvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.BatteryVendor)
}
#if LANG_CXX11
inline void BmsShakehands::set_batteryvendor(::std::string&& value) {
  
  batteryvendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsShakehands.BatteryVendor)
}
#endif
inline void BmsShakehands::set_batteryvendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  batteryvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsShakehands.BatteryVendor)
}
inline void BmsShakehands::set_batteryvendor(const char* value, size_t size) {
  
  batteryvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsShakehands.BatteryVendor)
}
inline ::std::string* BmsShakehands::mutable_batteryvendor() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsShakehands.BatteryVendor)
  return batteryvendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsShakehands::release_batteryvendor() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsShakehands.BatteryVendor)
  
  return batteryvendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsShakehands::set_allocated_batteryvendor(::std::string* batteryvendor) {
  if (batteryvendor != NULL) {
    
  } else {
    
  }
  batteryvendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batteryvendor);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsShakehands.BatteryVendor)
}

// int32 BatterySequence = 6;
inline void BmsShakehands::clear_batterysequence() {
  batterysequence_ = 0;
}
inline ::google::protobuf::int32 BmsShakehands::batterysequence() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.BatterySequence)
  return batterysequence_;
}
inline void BmsShakehands::set_batterysequence(::google::protobuf::int32 value) {
  
  batterysequence_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.BatterySequence)
}

// string ProduceDate = 7;
inline void BmsShakehands::clear_producedate() {
  producedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsShakehands::producedate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.ProduceDate)
  return producedate_.GetNoArena();
}
inline void BmsShakehands::set_producedate(const ::std::string& value) {
  
  producedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.ProduceDate)
}
#if LANG_CXX11
inline void BmsShakehands::set_producedate(::std::string&& value) {
  
  producedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsShakehands.ProduceDate)
}
#endif
inline void BmsShakehands::set_producedate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  producedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsShakehands.ProduceDate)
}
inline void BmsShakehands::set_producedate(const char* value, size_t size) {
  
  producedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsShakehands.ProduceDate)
}
inline ::std::string* BmsShakehands::mutable_producedate() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsShakehands.ProduceDate)
  return producedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsShakehands::release_producedate() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsShakehands.ProduceDate)
  
  return producedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsShakehands::set_allocated_producedate(::std::string* producedate) {
  if (producedate != NULL) {
    
  } else {
    
  }
  producedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producedate);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsShakehands.ProduceDate)
}

// int32 ChargeCount = 8;
inline void BmsShakehands::clear_chargecount() {
  chargecount_ = 0;
}
inline ::google::protobuf::int32 BmsShakehands::chargecount() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.ChargeCount)
  return chargecount_;
}
inline void BmsShakehands::set_chargecount(::google::protobuf::int32 value) {
  
  chargecount_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.ChargeCount)
}

// int32 RightIdentifier = 9;
inline void BmsShakehands::clear_rightidentifier() {
  rightidentifier_ = 0;
}
inline ::google::protobuf::int32 BmsShakehands::rightidentifier() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.RightIdentifier)
  return rightidentifier_;
}
inline void BmsShakehands::set_rightidentifier(::google::protobuf::int32 value) {
  
  rightidentifier_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.RightIdentifier)
}

// string BmsVersion = 10;
inline void BmsShakehands::clear_bmsversion() {
  bmsversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BmsShakehands::bmsversion() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsShakehands.BmsVersion)
  return bmsversion_.GetNoArena();
}
inline void BmsShakehands::set_bmsversion(const ::std::string& value) {
  
  bmsversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsShakehands.BmsVersion)
}
#if LANG_CXX11
inline void BmsShakehands::set_bmsversion(::std::string&& value) {
  
  bmsversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.BmsShakehands.BmsVersion)
}
#endif
inline void BmsShakehands::set_bmsversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bmsversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.BmsShakehands.BmsVersion)
}
inline void BmsShakehands::set_bmsversion(const char* value, size_t size) {
  
  bmsversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.BmsShakehands.BmsVersion)
}
inline ::std::string* BmsShakehands::mutable_bmsversion() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.BmsShakehands.BmsVersion)
  return bmsversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BmsShakehands::release_bmsversion() {
  // @@protoc_insertion_point(field_release:charge.protobuf.BmsShakehands.BmsVersion)
  
  return bmsversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BmsShakehands::set_allocated_bmsversion(::std::string* bmsversion) {
  if (bmsversion != NULL) {
    
  } else {
    
  }
  bmsversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bmsversion);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.BmsShakehands.BmsVersion)
}

// -------------------------------------------------------------------

// BmsConfig

// double VIndAllowedMax = 1;
inline void BmsConfig::clear_vindallowedmax() {
  vindallowedmax_ = 0;
}
inline double BmsConfig::vindallowedmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.VIndAllowedMax)
  return vindallowedmax_;
}
inline void BmsConfig::set_vindallowedmax(double value) {
  
  vindallowedmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.VIndAllowedMax)
}

// double IAllowedMax = 2;
inline void BmsConfig::clear_iallowedmax() {
  iallowedmax_ = 0;
}
inline double BmsConfig::iallowedmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.IAllowedMax)
  return iallowedmax_;
}
inline void BmsConfig::set_iallowedmax(double value) {
  
  iallowedmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.IAllowedMax)
}

// double EnergyRated = 3;
inline void BmsConfig::clear_energyrated() {
  energyrated_ = 0;
}
inline double BmsConfig::energyrated() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.EnergyRated)
  return energyrated_;
}
inline void BmsConfig::set_energyrated(double value) {
  
  energyrated_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.EnergyRated)
}

// double VAllowedMax = 4;
inline void BmsConfig::clear_vallowedmax() {
  vallowedmax_ = 0;
}
inline double BmsConfig::vallowedmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.VAllowedMax)
  return vallowedmax_;
}
inline void BmsConfig::set_vallowedmax(double value) {
  
  vallowedmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.VAllowedMax)
}

// double TAllowedMax = 5;
inline void BmsConfig::clear_tallowedmax() {
  tallowedmax_ = 0;
}
inline double BmsConfig::tallowedmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.TAllowedMax)
  return tallowedmax_;
}
inline void BmsConfig::set_tallowedmax(double value) {
  
  tallowedmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.TAllowedMax)
}

// double StartSoc = 6;
inline void BmsConfig::clear_startsoc() {
  startsoc_ = 0;
}
inline double BmsConfig::startsoc() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.StartSoc)
  return startsoc_;
}
inline void BmsConfig::set_startsoc(double value) {
  
  startsoc_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.StartSoc)
}

// double VCurrent = 7;
inline void BmsConfig::clear_vcurrent() {
  vcurrent_ = 0;
}
inline double BmsConfig::vcurrent() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.VCurrent)
  return vcurrent_;
}
inline void BmsConfig::set_vcurrent(double value) {
  
  vcurrent_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.VCurrent)
}

// double VCOutputMax = 8;
inline void BmsConfig::clear_vcoutputmax() {
  vcoutputmax_ = 0;
}
inline double BmsConfig::vcoutputmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.VCOutputMax)
  return vcoutputmax_;
}
inline void BmsConfig::set_vcoutputmax(double value) {
  
  vcoutputmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.VCOutputMax)
}

// double VCOutputMin = 9;
inline void BmsConfig::clear_vcoutputmin() {
  vcoutputmin_ = 0;
}
inline double BmsConfig::vcoutputmin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.VCOutputMin)
  return vcoutputmin_;
}
inline void BmsConfig::set_vcoutputmin(double value) {
  
  vcoutputmin_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.VCOutputMin)
}

// double ICOutputMax = 10;
inline void BmsConfig::clear_icoutputmax() {
  icoutputmax_ = 0;
}
inline double BmsConfig::icoutputmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.ICOutputMax)
  return icoutputmax_;
}
inline void BmsConfig::set_icoutputmax(double value) {
  
  icoutputmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.ICOutputMax)
}

// double ICOutputMin = 11;
inline void BmsConfig::clear_icoutputmin() {
  icoutputmin_ = 0;
}
inline double BmsConfig::icoutputmin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsConfig.ICOutputMin)
  return icoutputmin_;
}
inline void BmsConfig::set_icoutputmin(double value) {
  
  icoutputmin_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsConfig.ICOutputMin)
}

// -------------------------------------------------------------------

// BmsChargeFinish

// double EndSoc = 1;
inline void BmsChargeFinish::clear_endsoc() {
  endsoc_ = 0;
}
inline double BmsChargeFinish::endsoc() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.EndSoc)
  return endsoc_;
}
inline void BmsChargeFinish::set_endsoc(double value) {
  
  endsoc_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.EndSoc)
}

// double VMinIndividal = 2;
inline void BmsChargeFinish::clear_vminindividal() {
  vminindividal_ = 0;
}
inline double BmsChargeFinish::vminindividal() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.VMinIndividal)
  return vminindividal_;
}
inline void BmsChargeFinish::set_vminindividal(double value) {
  
  vminindividal_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.VMinIndividal)
}

// double VMaxIndividal = 3;
inline void BmsChargeFinish::clear_vmaxindividal() {
  vmaxindividal_ = 0;
}
inline double BmsChargeFinish::vmaxindividal() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.VMaxIndividal)
  return vmaxindividal_;
}
inline void BmsChargeFinish::set_vmaxindividal(double value) {
  
  vmaxindividal_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.VMaxIndividal)
}

// double TemperatureMin = 4;
inline void BmsChargeFinish::clear_temperaturemin() {
  temperaturemin_ = 0;
}
inline double BmsChargeFinish::temperaturemin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.TemperatureMin)
  return temperaturemin_;
}
inline void BmsChargeFinish::set_temperaturemin(double value) {
  
  temperaturemin_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.TemperatureMin)
}

// double TemperatureMax = 5;
inline void BmsChargeFinish::clear_temperaturemax() {
  temperaturemax_ = 0;
}
inline double BmsChargeFinish::temperaturemax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.TemperatureMax)
  return temperaturemax_;
}
inline void BmsChargeFinish::set_temperaturemax(double value) {
  
  temperaturemax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.TemperatureMax)
}

// int32 ChargeDuration = 6;
inline void BmsChargeFinish::clear_chargeduration() {
  chargeduration_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::chargeduration() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.ChargeDuration)
  return chargeduration_;
}
inline void BmsChargeFinish::set_chargeduration(::google::protobuf::int32 value) {
  
  chargeduration_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.ChargeDuration)
}

// double OutputEnergy = 7;
inline void BmsChargeFinish::clear_outputenergy() {
  outputenergy_ = 0;
}
inline double BmsChargeFinish::outputenergy() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.OutputEnergy)
  return outputenergy_;
}
inline void BmsChargeFinish::set_outputenergy(double value) {
  
  outputenergy_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.OutputEnergy)
}

// int32 BmsStopReason = 8;
inline void BmsChargeFinish::clear_bmsstopreason() {
  bmsstopreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::bmsstopreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.BmsStopReason)
  return bmsstopreason_;
}
inline void BmsChargeFinish::set_bmsstopreason(::google::protobuf::int32 value) {
  
  bmsstopreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.BmsStopReason)
}

// int32 BmsFaultReason = 9;
inline void BmsChargeFinish::clear_bmsfaultreason() {
  bmsfaultreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::bmsfaultreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.BmsFaultReason)
  return bmsfaultreason_;
}
inline void BmsChargeFinish::set_bmsfaultreason(::google::protobuf::int32 value) {
  
  bmsfaultreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.BmsFaultReason)
}

// int32 BmsErrorReason = 10;
inline void BmsChargeFinish::clear_bmserrorreason() {
  bmserrorreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::bmserrorreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.BmsErrorReason)
  return bmserrorreason_;
}
inline void BmsChargeFinish::set_bmserrorreason(::google::protobuf::int32 value) {
  
  bmserrorreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.BmsErrorReason)
}

// int32 ChargerStopReason = 11;
inline void BmsChargeFinish::clear_chargerstopreason() {
  chargerstopreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::chargerstopreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.ChargerStopReason)
  return chargerstopreason_;
}
inline void BmsChargeFinish::set_chargerstopreason(::google::protobuf::int32 value) {
  
  chargerstopreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.ChargerStopReason)
}

// int32 ChargerFaultReason = 12;
inline void BmsChargeFinish::clear_chargerfaultreason() {
  chargerfaultreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::chargerfaultreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.ChargerFaultReason)
  return chargerfaultreason_;
}
inline void BmsChargeFinish::set_chargerfaultreason(::google::protobuf::int32 value) {
  
  chargerfaultreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.ChargerFaultReason)
}

// int32 ChargerErrorReason = 13;
inline void BmsChargeFinish::clear_chargererrorreason() {
  chargererrorreason_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::chargererrorreason() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.ChargerErrorReason)
  return chargererrorreason_;
}
inline void BmsChargeFinish::set_chargererrorreason(::google::protobuf::int32 value) {
  
  chargererrorreason_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.ChargerErrorReason)
}

// int32 BmsEFrame = 14;
inline void BmsChargeFinish::clear_bmseframe() {
  bmseframe_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::bmseframe() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.BmsEFrame)
  return bmseframe_;
}
inline void BmsChargeFinish::set_bmseframe(::google::protobuf::int32 value) {
  
  bmseframe_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.BmsEFrame)
}

// int32 ChargerEFrame = 15;
inline void BmsChargeFinish::clear_chargereframe() {
  chargereframe_ = 0;
}
inline ::google::protobuf::int32 BmsChargeFinish::chargereframe() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsChargeFinish.ChargerEFrame)
  return chargereframe_;
}
inline void BmsChargeFinish::set_chargereframe(::google::protobuf::int32 value) {
  
  chargereframe_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsChargeFinish.ChargerEFrame)
}

// -------------------------------------------------------------------

// BmsCharging

// double VDemand = 1;
inline void BmsCharging::clear_vdemand() {
  vdemand_ = 0;
}
inline double BmsCharging::vdemand() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VDemand)
  return vdemand_;
}
inline void BmsCharging::set_vdemand(double value) {
  
  vdemand_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VDemand)
}

// double IDemand = 2;
inline void BmsCharging::clear_idemand() {
  idemand_ = 0;
}
inline double BmsCharging::idemand() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.IDemand)
  return idemand_;
}
inline void BmsCharging::set_idemand(double value) {
  
  idemand_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.IDemand)
}

// double CurrentSoc = 3;
inline void BmsCharging::clear_currentsoc() {
  currentsoc_ = 0;
}
inline double BmsCharging::currentsoc() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.CurrentSoc)
  return currentsoc_;
}
inline void BmsCharging::set_currentsoc(double value) {
  
  currentsoc_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.CurrentSoc)
}

// double RemainTime = 4;
inline void BmsCharging::clear_remaintime() {
  remaintime_ = 0;
}
inline double BmsCharging::remaintime() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.RemainTime)
  return remaintime_;
}
inline void BmsCharging::set_remaintime(double value) {
  
  remaintime_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.RemainTime)
}

// .charge.protobuf.ChargingMode ChargeMode = 5;
inline void BmsCharging::clear_chargemode() {
  chargemode_ = 0;
}
inline ::charge::protobuf::ChargingMode BmsCharging::chargemode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.ChargeMode)
  return static_cast< ::charge::protobuf::ChargingMode >(chargemode_);
}
inline void BmsCharging::set_chargemode(::charge::protobuf::ChargingMode value) {
  
  chargemode_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.ChargeMode)
}

// double VMeasure = 6;
inline void BmsCharging::clear_vmeasure() {
  vmeasure_ = 0;
}
inline double BmsCharging::vmeasure() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VMeasure)
  return vmeasure_;
}
inline void BmsCharging::set_vmeasure(double value) {
  
  vmeasure_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VMeasure)
}

// double IMeasure = 7;
inline void BmsCharging::clear_imeasure() {
  imeasure_ = 0;
}
inline double BmsCharging::imeasure() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.IMeasure)
  return imeasure_;
}
inline void BmsCharging::set_imeasure(double value) {
  
  imeasure_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.IMeasure)
}

// double VIndMax = 8;
inline void BmsCharging::clear_vindmax() {
  vindmax_ = 0;
}
inline double BmsCharging::vindmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndMax)
  return vindmax_;
}
inline void BmsCharging::set_vindmax(double value) {
  
  vindmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndMax)
}

// int32 VIndMaxCode = 9;
inline void BmsCharging::clear_vindmaxcode() {
  vindmaxcode_ = 0;
}
inline ::google::protobuf::int32 BmsCharging::vindmaxcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndMaxCode)
  return vindmaxcode_;
}
inline void BmsCharging::set_vindmaxcode(::google::protobuf::int32 value) {
  
  vindmaxcode_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndMaxCode)
}

// double VIndMin = 10;
inline void BmsCharging::clear_vindmin() {
  vindmin_ = 0;
}
inline double BmsCharging::vindmin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndMin)
  return vindmin_;
}
inline void BmsCharging::set_vindmin(double value) {
  
  vindmin_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndMin)
}

// int32 VIndMinCode = 11;
inline void BmsCharging::clear_vindmincode() {
  vindmincode_ = 0;
}
inline ::google::protobuf::int32 BmsCharging::vindmincode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndMinCode)
  return vindmincode_;
}
inline void BmsCharging::set_vindmincode(::google::protobuf::int32 value) {
  
  vindmincode_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndMinCode)
}

// double TMax = 12;
inline void BmsCharging::clear_tmax() {
  tmax_ = 0;
}
inline double BmsCharging::tmax() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.TMax)
  return tmax_;
}
inline void BmsCharging::set_tmax(double value) {
  
  tmax_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.TMax)
}

// int32 TMaxCode = 13;
inline void BmsCharging::clear_tmaxcode() {
  tmaxcode_ = 0;
}
inline ::google::protobuf::int32 BmsCharging::tmaxcode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.TMaxCode)
  return tmaxcode_;
}
inline void BmsCharging::set_tmaxcode(::google::protobuf::int32 value) {
  
  tmaxcode_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.TMaxCode)
}

// double TMin = 14;
inline void BmsCharging::clear_tmin() {
  tmin_ = 0;
}
inline double BmsCharging::tmin() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.TMin)
  return tmin_;
}
inline void BmsCharging::set_tmin(double value) {
  
  tmin_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.TMin)
}

// int32 TMinCode = 15;
inline void BmsCharging::clear_tmincode() {
  tmincode_ = 0;
}
inline ::google::protobuf::int32 BmsCharging::tmincode() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.TMinCode)
  return tmincode_;
}
inline void BmsCharging::set_tmincode(::google::protobuf::int32 value) {
  
  tmincode_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.TMinCode)
}

// .charge.protobuf.BoolEnum ChargeAllow = 16;
inline void BmsCharging::clear_chargeallow() {
  chargeallow_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::chargeallow() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.ChargeAllow)
  return static_cast< ::charge::protobuf::BoolEnum >(chargeallow_);
}
inline void BmsCharging::set_chargeallow(::charge::protobuf::BoolEnum value) {
  
  chargeallow_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.ChargeAllow)
}

// .charge.protobuf.BoolEnum VIndHigh = 17;
inline void BmsCharging::clear_vindhigh() {
  vindhigh_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::vindhigh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndHigh)
  return static_cast< ::charge::protobuf::BoolEnum >(vindhigh_);
}
inline void BmsCharging::set_vindhigh(::charge::protobuf::BoolEnum value) {
  
  vindhigh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndHigh)
}

// .charge.protobuf.BoolEnum VIndLow = 18;
inline void BmsCharging::clear_vindlow() {
  vindlow_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::vindlow() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.VIndLow)
  return static_cast< ::charge::protobuf::BoolEnum >(vindlow_);
}
inline void BmsCharging::set_vindlow(::charge::protobuf::BoolEnum value) {
  
  vindlow_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.VIndLow)
}

// .charge.protobuf.BoolEnum SoHigh = 19;
inline void BmsCharging::clear_sohigh() {
  sohigh_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::sohigh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.SoHigh)
  return static_cast< ::charge::protobuf::BoolEnum >(sohigh_);
}
inline void BmsCharging::set_sohigh(::charge::protobuf::BoolEnum value) {
  
  sohigh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.SoHigh)
}

// .charge.protobuf.BoolEnum SocLow = 20;
inline void BmsCharging::clear_soclow() {
  soclow_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::soclow() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.SocLow)
  return static_cast< ::charge::protobuf::BoolEnum >(soclow_);
}
inline void BmsCharging::set_soclow(::charge::protobuf::BoolEnum value) {
  
  soclow_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.SocLow)
}

// .charge.protobuf.BoolEnum IHigh = 21;
inline void BmsCharging::clear_ihigh() {
  ihigh_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::ihigh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.IHigh)
  return static_cast< ::charge::protobuf::BoolEnum >(ihigh_);
}
inline void BmsCharging::set_ihigh(::charge::protobuf::BoolEnum value) {
  
  ihigh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.IHigh)
}

// .charge.protobuf.BoolEnum THigh = 22;
inline void BmsCharging::clear_thigh() {
  thigh_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::thigh() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.THigh)
  return static_cast< ::charge::protobuf::BoolEnum >(thigh_);
}
inline void BmsCharging::set_thigh(::charge::protobuf::BoolEnum value) {
  
  thigh_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.THigh)
}

// .charge.protobuf.BoolEnum Insulation = 23;
inline void BmsCharging::clear_insulation() {
  insulation_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::insulation() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.Insulation)
  return static_cast< ::charge::protobuf::BoolEnum >(insulation_);
}
inline void BmsCharging::set_insulation(::charge::protobuf::BoolEnum value) {
  
  insulation_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.Insulation)
}

// .charge.protobuf.BoolEnum OutputConnector = 24;
inline void BmsCharging::clear_outputconnector() {
  outputconnector_ = 0;
}
inline ::charge::protobuf::BoolEnum BmsCharging::outputconnector() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.BmsCharging.OutputConnector)
  return static_cast< ::charge::protobuf::BoolEnum >(outputconnector_);
}
inline void BmsCharging::set_outputconnector(::charge::protobuf::BoolEnum value) {
  
  outputconnector_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.BmsCharging.OutputConnector)
}

// -------------------------------------------------------------------

// QueueSequence

// int32 CanIndex = 1;
inline void QueueSequence::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 QueueSequence::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.QueueSequence.CanIndex)
  return canindex_;
}
inline void QueueSequence::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.QueueSequence.CanIndex)
}

// int32 QSequence = 2;
inline void QueueSequence::clear_qsequence() {
  qsequence_ = 0;
}
inline ::google::protobuf::int32 QueueSequence::qsequence() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.QueueSequence.QSequence)
  return qsequence_;
}
inline void QueueSequence::set_qsequence(::google::protobuf::int32 value) {
  
  qsequence_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.QueueSequence.QSequence)
}

// -------------------------------------------------------------------

// SetGunGroupInfoReq

// repeated .charge.protobuf.GunGroupType GunGroupInfo = 1;
inline int SetGunGroupInfoReq::gungroupinfo_size() const {
  return gungroupinfo_.size();
}
inline void SetGunGroupInfoReq::clear_gungroupinfo() {
  gungroupinfo_.Clear();
}
inline const ::charge::protobuf::GunGroupType& SetGunGroupInfoReq::gungroupinfo(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SetGunGroupInfoReq.GunGroupInfo)
  return gungroupinfo_.Get(index);
}
inline ::charge::protobuf::GunGroupType* SetGunGroupInfoReq::mutable_gungroupinfo(int index) {
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SetGunGroupInfoReq.GunGroupInfo)
  return gungroupinfo_.Mutable(index);
}
inline ::charge::protobuf::GunGroupType* SetGunGroupInfoReq::add_gungroupinfo() {
  // @@protoc_insertion_point(field_add:charge.protobuf.SetGunGroupInfoReq.GunGroupInfo)
  return gungroupinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::charge::protobuf::GunGroupType >*
SetGunGroupInfoReq::mutable_gungroupinfo() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.SetGunGroupInfoReq.GunGroupInfo)
  return &gungroupinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::charge::protobuf::GunGroupType >&
SetGunGroupInfoReq::gungroupinfo() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.SetGunGroupInfoReq.GunGroupInfo)
  return gungroupinfo_;
}

// string Reserved1 = 101;
inline void SetGunGroupInfoReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGunGroupInfoReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SetGunGroupInfoReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void SetGunGroupInfoReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SetGunGroupInfoReq.Reserved1)
}
#if LANG_CXX11
inline void SetGunGroupInfoReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SetGunGroupInfoReq.Reserved1)
}
#endif
inline void SetGunGroupInfoReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SetGunGroupInfoReq.Reserved1)
}
inline void SetGunGroupInfoReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SetGunGroupInfoReq.Reserved1)
}
inline ::std::string* SetGunGroupInfoReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SetGunGroupInfoReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGunGroupInfoReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SetGunGroupInfoReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGunGroupInfoReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SetGunGroupInfoReq.Reserved1)
}

// string Reserved2 = 102;
inline void SetGunGroupInfoReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGunGroupInfoReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.SetGunGroupInfoReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void SetGunGroupInfoReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.SetGunGroupInfoReq.Reserved2)
}
#if LANG_CXX11
inline void SetGunGroupInfoReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.SetGunGroupInfoReq.Reserved2)
}
#endif
inline void SetGunGroupInfoReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.SetGunGroupInfoReq.Reserved2)
}
inline void SetGunGroupInfoReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.SetGunGroupInfoReq.Reserved2)
}
inline ::std::string* SetGunGroupInfoReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.SetGunGroupInfoReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGunGroupInfoReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.SetGunGroupInfoReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGunGroupInfoReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.SetGunGroupInfoReq.Reserved2)
}

// -------------------------------------------------------------------

// GunGroupType

// int32 Gun1CanIndex = 1;
inline void GunGroupType::clear_gun1canindex() {
  gun1canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun1canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun1CanIndex)
  return gun1canindex_;
}
inline void GunGroupType::set_gun1canindex(::google::protobuf::int32 value) {
  
  gun1canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun1CanIndex)
}

// int32 Gun2CanIndex = 2;
inline void GunGroupType::clear_gun2canindex() {
  gun2canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun2canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun2CanIndex)
  return gun2canindex_;
}
inline void GunGroupType::set_gun2canindex(::google::protobuf::int32 value) {
  
  gun2canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun2CanIndex)
}

// int32 Gun3CanIndex = 3;
inline void GunGroupType::clear_gun3canindex() {
  gun3canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun3canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun3CanIndex)
  return gun3canindex_;
}
inline void GunGroupType::set_gun3canindex(::google::protobuf::int32 value) {
  
  gun3canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun3CanIndex)
}

// int32 Gun4CanIndex = 4;
inline void GunGroupType::clear_gun4canindex() {
  gun4canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun4canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun4CanIndex)
  return gun4canindex_;
}
inline void GunGroupType::set_gun4canindex(::google::protobuf::int32 value) {
  
  gun4canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun4CanIndex)
}

// int32 Gun5CanIndex = 5;
inline void GunGroupType::clear_gun5canindex() {
  gun5canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun5canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun5CanIndex)
  return gun5canindex_;
}
inline void GunGroupType::set_gun5canindex(::google::protobuf::int32 value) {
  
  gun5canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun5CanIndex)
}

// int32 Gun6CanIndex = 6;
inline void GunGroupType::clear_gun6canindex() {
  gun6canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun6canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun6CanIndex)
  return gun6canindex_;
}
inline void GunGroupType::set_gun6canindex(::google::protobuf::int32 value) {
  
  gun6canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun6CanIndex)
}

// int32 Gun7CanIndex = 7;
inline void GunGroupType::clear_gun7canindex() {
  gun7canindex_ = 0;
}
inline ::google::protobuf::int32 GunGroupType::gun7canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Gun7CanIndex)
  return gun7canindex_;
}
inline void GunGroupType::set_gun7canindex(::google::protobuf::int32 value) {
  
  gun7canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Gun7CanIndex)
}

// string Reserved1 = 101;
inline void GunGroupType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupType::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void GunGroupType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Reserved1)
}
#if LANG_CXX11
inline void GunGroupType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupType.Reserved1)
}
#endif
inline void GunGroupType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupType.Reserved1)
}
inline void GunGroupType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupType.Reserved1)
}
inline ::std::string* GunGroupType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupType::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupType.Reserved1)
}

// string Reserved2 = 102;
inline void GunGroupType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupType::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void GunGroupType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupType.Reserved2)
}
#if LANG_CXX11
inline void GunGroupType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupType.Reserved2)
}
#endif
inline void GunGroupType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupType.Reserved2)
}
inline void GunGroupType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupType.Reserved2)
}
inline ::std::string* GunGroupType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupType::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupType.Reserved2)
}

// -------------------------------------------------------------------

// GunGroupInfoReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool GunGroupInfoReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void GunGroupInfoReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& GunGroupInfoReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* GunGroupInfoReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupInfoReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* GunGroupInfoReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupInfoReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void GunGroupInfoReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupInfoReq.SendTime)
}

// int32 GunNumber = 2;
inline void GunGroupInfoReq::clear_gunnumber() {
  gunnumber_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::gunnumber() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.GunNumber)
  return gunnumber_;
}
inline void GunGroupInfoReq::set_gunnumber(::google::protobuf::int32 value) {
  
  gunnumber_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.GunNumber)
}

// int32 MasterGun = 3;
inline void GunGroupInfoReq::clear_mastergun() {
  mastergun_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::mastergun() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.MasterGun)
  return mastergun_;
}
inline void GunGroupInfoReq::set_mastergun(::google::protobuf::int32 value) {
  
  mastergun_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.MasterGun)
}

// int32 SlaveGun1 = 4;
inline void GunGroupInfoReq::clear_slavegun1() {
  slavegun1_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun1)
  return slavegun1_;
}
inline void GunGroupInfoReq::set_slavegun1(::google::protobuf::int32 value) {
  
  slavegun1_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun1)
}

// int32 SlaveGun2 = 5;
inline void GunGroupInfoReq::clear_slavegun2() {
  slavegun2_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun2)
  return slavegun2_;
}
inline void GunGroupInfoReq::set_slavegun2(::google::protobuf::int32 value) {
  
  slavegun2_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun2)
}

// int32 SlaveGun3 = 6;
inline void GunGroupInfoReq::clear_slavegun3() {
  slavegun3_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun3)
  return slavegun3_;
}
inline void GunGroupInfoReq::set_slavegun3(::google::protobuf::int32 value) {
  
  slavegun3_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun3)
}

// int32 SlaveGun4 = 7;
inline void GunGroupInfoReq::clear_slavegun4() {
  slavegun4_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun4() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun4)
  return slavegun4_;
}
inline void GunGroupInfoReq::set_slavegun4(::google::protobuf::int32 value) {
  
  slavegun4_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun4)
}

// int32 SlaveGun5 = 8;
inline void GunGroupInfoReq::clear_slavegun5() {
  slavegun5_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun5() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun5)
  return slavegun5_;
}
inline void GunGroupInfoReq::set_slavegun5(::google::protobuf::int32 value) {
  
  slavegun5_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun5)
}

// int32 SlaveGun6 = 9;
inline void GunGroupInfoReq::clear_slavegun6() {
  slavegun6_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoReq::slavegun6() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.SlaveGun6)
  return slavegun6_;
}
inline void GunGroupInfoReq::set_slavegun6(::google::protobuf::int32 value) {
  
  slavegun6_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.SlaveGun6)
}

// string Reserved1 = 101;
inline void GunGroupInfoReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupInfoReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void GunGroupInfoReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.Reserved1)
}
#if LANG_CXX11
inline void GunGroupInfoReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupInfoReq.Reserved1)
}
#endif
inline void GunGroupInfoReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupInfoReq.Reserved1)
}
inline void GunGroupInfoReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupInfoReq.Reserved1)
}
inline ::std::string* GunGroupInfoReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupInfoReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupInfoReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupInfoReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupInfoReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupInfoReq.Reserved1)
}

// string Reserved2 = 102;
inline void GunGroupInfoReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupInfoReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void GunGroupInfoReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoReq.Reserved2)
}
#if LANG_CXX11
inline void GunGroupInfoReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupInfoReq.Reserved2)
}
#endif
inline void GunGroupInfoReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupInfoReq.Reserved2)
}
inline void GunGroupInfoReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupInfoReq.Reserved2)
}
inline ::std::string* GunGroupInfoReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupInfoReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupInfoReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupInfoReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupInfoReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupInfoReq.Reserved2)
}

// -------------------------------------------------------------------

// GunGroupInfoAns

// int32 GunNumber = 1;
inline void GunGroupInfoAns::clear_gunnumber() {
  gunnumber_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::gunnumber() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.GunNumber)
  return gunnumber_;
}
inline void GunGroupInfoAns::set_gunnumber(::google::protobuf::int32 value) {
  
  gunnumber_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.GunNumber)
}

// int32 MasterGun = 2;
inline void GunGroupInfoAns::clear_mastergun() {
  mastergun_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::mastergun() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.MasterGun)
  return mastergun_;
}
inline void GunGroupInfoAns::set_mastergun(::google::protobuf::int32 value) {
  
  mastergun_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.MasterGun)
}

// int32 SlaveGun1 = 3;
inline void GunGroupInfoAns::clear_slavegun1() {
  slavegun1_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun1)
  return slavegun1_;
}
inline void GunGroupInfoAns::set_slavegun1(::google::protobuf::int32 value) {
  
  slavegun1_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun1)
}

// int32 SlaveGun2 = 4;
inline void GunGroupInfoAns::clear_slavegun2() {
  slavegun2_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun2)
  return slavegun2_;
}
inline void GunGroupInfoAns::set_slavegun2(::google::protobuf::int32 value) {
  
  slavegun2_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun2)
}

// int32 SlaveGun3 = 5;
inline void GunGroupInfoAns::clear_slavegun3() {
  slavegun3_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun3)
  return slavegun3_;
}
inline void GunGroupInfoAns::set_slavegun3(::google::protobuf::int32 value) {
  
  slavegun3_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun3)
}

// int32 SlaveGun4 = 6;
inline void GunGroupInfoAns::clear_slavegun4() {
  slavegun4_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun4() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun4)
  return slavegun4_;
}
inline void GunGroupInfoAns::set_slavegun4(::google::protobuf::int32 value) {
  
  slavegun4_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun4)
}

// int32 SlaveGun5 = 7;
inline void GunGroupInfoAns::clear_slavegun5() {
  slavegun5_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun5() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun5)
  return slavegun5_;
}
inline void GunGroupInfoAns::set_slavegun5(::google::protobuf::int32 value) {
  
  slavegun5_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun5)
}

// int32 SlaveGun6 = 8;
inline void GunGroupInfoAns::clear_slavegun6() {
  slavegun6_ = 0;
}
inline ::google::protobuf::int32 GunGroupInfoAns::slavegun6() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.SlaveGun6)
  return slavegun6_;
}
inline void GunGroupInfoAns::set_slavegun6(::google::protobuf::int32 value) {
  
  slavegun6_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.SlaveGun6)
}

// .charge.protobuf.BoolEnum Finished = 9;
inline void GunGroupInfoAns::clear_finished() {
  finished_ = 0;
}
inline ::charge::protobuf::BoolEnum GunGroupInfoAns::finished() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.Finished)
  return static_cast< ::charge::protobuf::BoolEnum >(finished_);
}
inline void GunGroupInfoAns::set_finished(::charge::protobuf::BoolEnum value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.Finished)
}

// string Reserved1 = 101;
inline void GunGroupInfoAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupInfoAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void GunGroupInfoAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.Reserved1)
}
#if LANG_CXX11
inline void GunGroupInfoAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupInfoAns.Reserved1)
}
#endif
inline void GunGroupInfoAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupInfoAns.Reserved1)
}
inline void GunGroupInfoAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupInfoAns.Reserved1)
}
inline ::std::string* GunGroupInfoAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupInfoAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupInfoAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupInfoAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupInfoAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupInfoAns.Reserved1)
}

// string Reserved2 = 102;
inline void GunGroupInfoAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GunGroupInfoAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.GunGroupInfoAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void GunGroupInfoAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.GunGroupInfoAns.Reserved2)
}
#if LANG_CXX11
inline void GunGroupInfoAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.GunGroupInfoAns.Reserved2)
}
#endif
inline void GunGroupInfoAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.GunGroupInfoAns.Reserved2)
}
inline void GunGroupInfoAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.GunGroupInfoAns.Reserved2)
}
inline ::std::string* GunGroupInfoAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.GunGroupInfoAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GunGroupInfoAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.GunGroupInfoAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GunGroupInfoAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.GunGroupInfoAns.Reserved2)
}

// -------------------------------------------------------------------

// TurnToEmergencyCmdReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool TurnToEmergencyCmdReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void TurnToEmergencyCmdReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& TurnToEmergencyCmdReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* TurnToEmergencyCmdReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* TurnToEmergencyCmdReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void TurnToEmergencyCmdReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdReq.SendTime)
}

// int32 SetFlag = 2;
inline void TurnToEmergencyCmdReq::clear_setflag() {
  setflag_ = 0;
}
inline ::google::protobuf::int32 TurnToEmergencyCmdReq::setflag() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdReq.SetFlag)
  return setflag_;
}
inline void TurnToEmergencyCmdReq::set_setflag(::google::protobuf::int32 value) {
  
  setflag_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdReq.SetFlag)
}

// string Reserved1 = 101;
inline void TurnToEmergencyCmdReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void TurnToEmergencyCmdReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
}
#endif
inline void TurnToEmergencyCmdReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
}
inline void TurnToEmergencyCmdReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
}
inline ::std::string* TurnToEmergencyCmdReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdReq.Reserved1)
}

// string Reserved2 = 102;
inline void TurnToEmergencyCmdReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void TurnToEmergencyCmdReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
}
#endif
inline void TurnToEmergencyCmdReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
}
inline void TurnToEmergencyCmdReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
}
inline ::std::string* TurnToEmergencyCmdReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdReq.Reserved2)
}

// string Reserved3 = 103;
inline void TurnToEmergencyCmdReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void TurnToEmergencyCmdReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
}
#endif
inline void TurnToEmergencyCmdReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
}
inline void TurnToEmergencyCmdReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
}
inline ::std::string* TurnToEmergencyCmdReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdReq.Reserved3)
}

// -------------------------------------------------------------------

// TurnToEmergencyCmdAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void TurnToEmergencyCmdAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum TurnToEmergencyCmdAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void TurnToEmergencyCmdAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdAns.Confirm)
}

// int32 SetFlag = 2;
inline void TurnToEmergencyCmdAns::clear_setflag() {
  setflag_ = 0;
}
inline ::google::protobuf::int32 TurnToEmergencyCmdAns::setflag() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdAns.SetFlag)
  return setflag_;
}
inline void TurnToEmergencyCmdAns::set_setflag(::google::protobuf::int32 value) {
  
  setflag_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdAns.SetFlag)
}

// string Reserved1 = 101;
inline void TurnToEmergencyCmdAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void TurnToEmergencyCmdAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
}
#endif
inline void TurnToEmergencyCmdAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
}
inline void TurnToEmergencyCmdAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
}
inline ::std::string* TurnToEmergencyCmdAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdAns.Reserved1)
}

// string Reserved2 = 102;
inline void TurnToEmergencyCmdAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void TurnToEmergencyCmdAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
}
#endif
inline void TurnToEmergencyCmdAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
}
inline void TurnToEmergencyCmdAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
}
inline ::std::string* TurnToEmergencyCmdAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdAns.Reserved2)
}

// string Reserved3 = 103;
inline void TurnToEmergencyCmdAns::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TurnToEmergencyCmdAns::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
  return reserved3_.GetNoArena();
}
inline void TurnToEmergencyCmdAns::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
}
#if LANG_CXX11
inline void TurnToEmergencyCmdAns::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
}
#endif
inline void TurnToEmergencyCmdAns::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
}
inline void TurnToEmergencyCmdAns::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
}
inline ::std::string* TurnToEmergencyCmdAns::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TurnToEmergencyCmdAns::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TurnToEmergencyCmdAns::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.TurnToEmergencyCmdAns.Reserved3)
}

// -------------------------------------------------------------------

// ClearAccountCmdReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool ClearAccountCmdReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ClearAccountCmdReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ClearAccountCmdReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ClearAccountCmdReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ClearAccountCmdReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ClearAccountCmdReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdReq.SendTime)
}

// int32 ClearFlag = 2;
inline void ClearAccountCmdReq::clear_clearflag() {
  clearflag_ = 0;
}
inline ::google::protobuf::int32 ClearAccountCmdReq::clearflag() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdReq.ClearFlag)
  return clearflag_;
}
inline void ClearAccountCmdReq::set_clearflag(::google::protobuf::int32 value) {
  
  clearflag_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdReq.ClearFlag)
}

// string Reserved1 = 101;
inline void ClearAccountCmdReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ClearAccountCmdReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdReq.Reserved1)
}
#if LANG_CXX11
inline void ClearAccountCmdReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdReq.Reserved1)
}
#endif
inline void ClearAccountCmdReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdReq.Reserved1)
}
inline void ClearAccountCmdReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdReq.Reserved1)
}
inline ::std::string* ClearAccountCmdReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdReq.Reserved1)
}

// string Reserved2 = 102;
inline void ClearAccountCmdReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ClearAccountCmdReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdReq.Reserved2)
}
#if LANG_CXX11
inline void ClearAccountCmdReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdReq.Reserved2)
}
#endif
inline void ClearAccountCmdReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdReq.Reserved2)
}
inline void ClearAccountCmdReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdReq.Reserved2)
}
inline ::std::string* ClearAccountCmdReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdReq.Reserved2)
}

// string Reserved3 = 103;
inline void ClearAccountCmdReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void ClearAccountCmdReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdReq.Reserved3)
}
#if LANG_CXX11
inline void ClearAccountCmdReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdReq.Reserved3)
}
#endif
inline void ClearAccountCmdReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdReq.Reserved3)
}
inline void ClearAccountCmdReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdReq.Reserved3)
}
inline ::std::string* ClearAccountCmdReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdReq.Reserved3)
}

// -------------------------------------------------------------------

// ClearAccountCmdAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void ClearAccountCmdAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum ClearAccountCmdAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void ClearAccountCmdAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdAns.Confirm)
}

// string Reserved1 = 101;
inline void ClearAccountCmdAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ClearAccountCmdAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdAns.Reserved1)
}
#if LANG_CXX11
inline void ClearAccountCmdAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdAns.Reserved1)
}
#endif
inline void ClearAccountCmdAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdAns.Reserved1)
}
inline void ClearAccountCmdAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdAns.Reserved1)
}
inline ::std::string* ClearAccountCmdAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdAns.Reserved1)
}

// string Reserved2 = 102;
inline void ClearAccountCmdAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ClearAccountCmdAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdAns.Reserved2)
}
#if LANG_CXX11
inline void ClearAccountCmdAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdAns.Reserved2)
}
#endif
inline void ClearAccountCmdAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdAns.Reserved2)
}
inline void ClearAccountCmdAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdAns.Reserved2)
}
inline ::std::string* ClearAccountCmdAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdAns.Reserved2)
}

// string Reserved3 = 103;
inline void ClearAccountCmdAns::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClearAccountCmdAns::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ClearAccountCmdAns.Reserved3)
  return reserved3_.GetNoArena();
}
inline void ClearAccountCmdAns::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ClearAccountCmdAns.Reserved3)
}
#if LANG_CXX11
inline void ClearAccountCmdAns::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ClearAccountCmdAns.Reserved3)
}
#endif
inline void ClearAccountCmdAns::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ClearAccountCmdAns.Reserved3)
}
inline void ClearAccountCmdAns::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ClearAccountCmdAns.Reserved3)
}
inline ::std::string* ClearAccountCmdAns::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ClearAccountCmdAns.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClearAccountCmdAns::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ClearAccountCmdAns.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClearAccountCmdAns::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ClearAccountCmdAns.Reserved3)
}

// -------------------------------------------------------------------

// CallAllDataReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool CallAllDataReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void CallAllDataReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& CallAllDataReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* CallAllDataReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CallAllDataReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* CallAllDataReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CallAllDataReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void CallAllDataReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CallAllDataReq.SendTime)
}

// int32 CallFlag = 2;
inline void CallAllDataReq::clear_callflag() {
  callflag_ = 0;
}
inline ::google::protobuf::int32 CallAllDataReq::callflag() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.CallFlag)
  return callflag_;
}
inline void CallAllDataReq::set_callflag(::google::protobuf::int32 value) {
  
  callflag_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CallAllDataReq.CallFlag)
}

// int32 CanIndex = 3;
inline void CallAllDataReq::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 CallAllDataReq::canindex() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.CanIndex)
  return canindex_;
}
inline void CallAllDataReq::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.CallAllDataReq.CanIndex)
}

// string Reserved1 = 101;
inline void CallAllDataReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CallAllDataReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void CallAllDataReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CallAllDataReq.Reserved1)
}
#if LANG_CXX11
inline void CallAllDataReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CallAllDataReq.Reserved1)
}
#endif
inline void CallAllDataReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CallAllDataReq.Reserved1)
}
inline void CallAllDataReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CallAllDataReq.Reserved1)
}
inline ::std::string* CallAllDataReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CallAllDataReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallAllDataReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CallAllDataReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallAllDataReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CallAllDataReq.Reserved1)
}

// string Reserved2 = 102;
inline void CallAllDataReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CallAllDataReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void CallAllDataReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CallAllDataReq.Reserved2)
}
#if LANG_CXX11
inline void CallAllDataReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CallAllDataReq.Reserved2)
}
#endif
inline void CallAllDataReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CallAllDataReq.Reserved2)
}
inline void CallAllDataReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CallAllDataReq.Reserved2)
}
inline ::std::string* CallAllDataReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CallAllDataReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallAllDataReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CallAllDataReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallAllDataReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CallAllDataReq.Reserved2)
}

// string Reserved3 = 103;
inline void CallAllDataReq::clear_reserved3() {
  reserved3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CallAllDataReq::reserved3() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.CallAllDataReq.Reserved3)
  return reserved3_.GetNoArena();
}
inline void CallAllDataReq::set_reserved3(const ::std::string& value) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.CallAllDataReq.Reserved3)
}
#if LANG_CXX11
inline void CallAllDataReq::set_reserved3(::std::string&& value) {
  
  reserved3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.CallAllDataReq.Reserved3)
}
#endif
inline void CallAllDataReq::set_reserved3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.CallAllDataReq.Reserved3)
}
inline void CallAllDataReq::set_reserved3(const char* value, size_t size) {
  
  reserved3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.CallAllDataReq.Reserved3)
}
inline ::std::string* CallAllDataReq::mutable_reserved3() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.CallAllDataReq.Reserved3)
  return reserved3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallAllDataReq::release_reserved3() {
  // @@protoc_insertion_point(field_release:charge.protobuf.CallAllDataReq.Reserved3)
  
  return reserved3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallAllDataReq::set_allocated_reserved3(::std::string* reserved3) {
  if (reserved3 != NULL) {
    
  } else {
    
  }
  reserved3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved3);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.CallAllDataReq.Reserved3)
}

// -------------------------------------------------------------------

// ParkStateChangeReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool ParkStateChangeReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ParkStateChangeReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ParkStateChangeReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ParkStateChangeReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateChangeReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ParkStateChangeReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateChangeReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ParkStateChangeReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateChangeReq.SendTime)
}

// string DeviceID = 2;
inline void ParkStateChangeReq::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateChangeReq::deviceid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.DeviceID)
  return deviceid_.GetNoArena();
}
inline void ParkStateChangeReq::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateChangeReq.DeviceID)
}
#if LANG_CXX11
inline void ParkStateChangeReq::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateChangeReq.DeviceID)
}
#endif
inline void ParkStateChangeReq::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateChangeReq.DeviceID)
}
inline void ParkStateChangeReq::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateChangeReq.DeviceID)
}
inline ::std::string* ParkStateChangeReq::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateChangeReq.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateChangeReq::release_deviceid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateChangeReq.DeviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateChangeReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateChangeReq.DeviceID)
}

// .charge.protobuf.ParkingAlarmType ParkingAlarm = 3;
inline bool ParkStateChangeReq::has_parkingalarm() const {
  return this != internal_default_instance() && parkingalarm_ != NULL;
}
inline void ParkStateChangeReq::clear_parkingalarm() {
  if (GetArenaNoVirtual() == NULL && parkingalarm_ != NULL) delete parkingalarm_;
  parkingalarm_ = NULL;
}
inline const ::charge::protobuf::ParkingAlarmType& ParkStateChangeReq::parkingalarm() const {
  const ::charge::protobuf::ParkingAlarmType* p = parkingalarm_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.ParkingAlarm)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::ParkingAlarmType*>(
      &::charge::protobuf::_ParkingAlarmType_default_instance_);
}
inline ::charge::protobuf::ParkingAlarmType* ParkStateChangeReq::mutable_parkingalarm() {
  
  if (parkingalarm_ == NULL) {
    parkingalarm_ = new ::charge::protobuf::ParkingAlarmType;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateChangeReq.ParkingAlarm)
  return parkingalarm_;
}
inline ::charge::protobuf::ParkingAlarmType* ParkStateChangeReq::release_parkingalarm() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateChangeReq.ParkingAlarm)
  
  ::charge::protobuf::ParkingAlarmType* temp = parkingalarm_;
  parkingalarm_ = NULL;
  return temp;
}
inline void ParkStateChangeReq::set_allocated_parkingalarm(::charge::protobuf::ParkingAlarmType* parkingalarm) {
  delete parkingalarm_;
  parkingalarm_ = parkingalarm;
  if (parkingalarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateChangeReq.ParkingAlarm)
}

// .charge.protobuf.ParkingStatusEnum ParkingState = 4;
inline void ParkStateChangeReq::clear_parkingstate() {
  parkingstate_ = 0;
}
inline ::charge::protobuf::ParkingStatusEnum ParkStateChangeReq::parkingstate() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.ParkingState)
  return static_cast< ::charge::protobuf::ParkingStatusEnum >(parkingstate_);
}
inline void ParkStateChangeReq::set_parkingstate(::charge::protobuf::ParkingStatusEnum value) {
  
  parkingstate_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateChangeReq.ParkingState)
}

// int32 RemainBattery = 5;
inline void ParkStateChangeReq::clear_remainbattery() {
  remainbattery_ = 0;
}
inline ::google::protobuf::int32 ParkStateChangeReq::remainbattery() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.RemainBattery)
  return remainbattery_;
}
inline void ParkStateChangeReq::set_remainbattery(::google::protobuf::int32 value) {
  
  remainbattery_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateChangeReq.RemainBattery)
}

// string Reserved1 = 101;
inline void ParkStateChangeReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateChangeReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ParkStateChangeReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateChangeReq.Reserved1)
}
#if LANG_CXX11
inline void ParkStateChangeReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateChangeReq.Reserved1)
}
#endif
inline void ParkStateChangeReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateChangeReq.Reserved1)
}
inline void ParkStateChangeReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateChangeReq.Reserved1)
}
inline ::std::string* ParkStateChangeReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateChangeReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateChangeReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateChangeReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateChangeReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateChangeReq.Reserved1)
}

// string Reserved2 = 102;
inline void ParkStateChangeReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateChangeReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateChangeReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ParkStateChangeReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateChangeReq.Reserved2)
}
#if LANG_CXX11
inline void ParkStateChangeReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateChangeReq.Reserved2)
}
#endif
inline void ParkStateChangeReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateChangeReq.Reserved2)
}
inline void ParkStateChangeReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateChangeReq.Reserved2)
}
inline ::std::string* ParkStateChangeReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateChangeReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateChangeReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateChangeReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateChangeReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateChangeReq.Reserved2)
}

// -------------------------------------------------------------------

// ParkingAlarmType

// int32 SevereLevel = 1;
inline void ParkingAlarmType::clear_severelevel() {
  severelevel_ = 0;
}
inline ::google::protobuf::int32 ParkingAlarmType::severelevel() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkingAlarmType.SevereLevel)
  return severelevel_;
}
inline void ParkingAlarmType::set_severelevel(::google::protobuf::int32 value) {
  
  severelevel_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkingAlarmType.SevereLevel)
}

// repeated .charge.protobuf.ParkingAlarmCodeEnum ParkingAlarmCode = 2;
inline int ParkingAlarmType::parkingalarmcode_size() const {
  return parkingalarmcode_.size();
}
inline void ParkingAlarmType::clear_parkingalarmcode() {
  parkingalarmcode_.Clear();
}
inline ::charge::protobuf::ParkingAlarmCodeEnum ParkingAlarmType::parkingalarmcode(int index) const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkingAlarmType.ParkingAlarmCode)
  return static_cast< ::charge::protobuf::ParkingAlarmCodeEnum >(parkingalarmcode_.Get(index));
}
inline void ParkingAlarmType::set_parkingalarmcode(int index, ::charge::protobuf::ParkingAlarmCodeEnum value) {
  parkingalarmcode_.Set(index, value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkingAlarmType.ParkingAlarmCode)
}
inline void ParkingAlarmType::add_parkingalarmcode(::charge::protobuf::ParkingAlarmCodeEnum value) {
  parkingalarmcode_.Add(value);
  // @@protoc_insertion_point(field_add:charge.protobuf.ParkingAlarmType.ParkingAlarmCode)
}
inline const ::google::protobuf::RepeatedField<int>&
ParkingAlarmType::parkingalarmcode() const {
  // @@protoc_insertion_point(field_list:charge.protobuf.ParkingAlarmType.ParkingAlarmCode)
  return parkingalarmcode_;
}
inline ::google::protobuf::RepeatedField<int>*
ParkingAlarmType::mutable_parkingalarmcode() {
  // @@protoc_insertion_point(field_mutable_list:charge.protobuf.ParkingAlarmType.ParkingAlarmCode)
  return &parkingalarmcode_;
}

// -------------------------------------------------------------------

// ParkStateCallReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool ParkStateCallReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ParkStateCallReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ParkStateCallReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateCallReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ParkStateCallReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateCallReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ParkStateCallReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateCallReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ParkStateCallReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateCallReq.SendTime)
}

// string DeviceID = 2;
inline void ParkStateCallReq::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateCallReq::deviceid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateCallReq.DeviceID)
  return deviceid_.GetNoArena();
}
inline void ParkStateCallReq::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateCallReq.DeviceID)
}
#if LANG_CXX11
inline void ParkStateCallReq::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateCallReq.DeviceID)
}
#endif
inline void ParkStateCallReq::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateCallReq.DeviceID)
}
inline void ParkStateCallReq::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateCallReq.DeviceID)
}
inline ::std::string* ParkStateCallReq::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateCallReq.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateCallReq::release_deviceid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateCallReq.DeviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateCallReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateCallReq.DeviceID)
}

// string Reserved1 = 101;
inline void ParkStateCallReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateCallReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateCallReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ParkStateCallReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateCallReq.Reserved1)
}
#if LANG_CXX11
inline void ParkStateCallReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateCallReq.Reserved1)
}
#endif
inline void ParkStateCallReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateCallReq.Reserved1)
}
inline void ParkStateCallReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateCallReq.Reserved1)
}
inline ::std::string* ParkStateCallReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateCallReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateCallReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateCallReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateCallReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateCallReq.Reserved1)
}

// string Reserved2 = 102;
inline void ParkStateCallReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkStateCallReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkStateCallReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ParkStateCallReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkStateCallReq.Reserved2)
}
#if LANG_CXX11
inline void ParkStateCallReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkStateCallReq.Reserved2)
}
#endif
inline void ParkStateCallReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkStateCallReq.Reserved2)
}
inline void ParkStateCallReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkStateCallReq.Reserved2)
}
inline ::std::string* ParkStateCallReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkStateCallReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkStateCallReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkStateCallReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkStateCallReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkStateCallReq.Reserved2)
}

// -------------------------------------------------------------------

// ParkParaGetReq

// .charge.protobuf.DateTime SendTime = 1;
inline bool ParkParaGetReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ParkParaGetReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::charge::protobuf::DateTime& ParkParaGetReq::sendtime() const {
  const ::charge::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::DateTime*>(
      &::charge::protobuf::_DateTime_default_instance_);
}
inline ::charge::protobuf::DateTime* ParkParaGetReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::charge::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetReq.SendTime)
  return sendtime_;
}
inline ::charge::protobuf::DateTime* ParkParaGetReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetReq.SendTime)
  
  ::charge::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ParkParaGetReq::set_allocated_sendtime(::charge::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetReq.SendTime)
}

// string DeviceID = 2;
inline void ParkParaGetReq::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParaGetReq::deviceid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetReq.DeviceID)
  return deviceid_.GetNoArena();
}
inline void ParkParaGetReq::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetReq.DeviceID)
}
#if LANG_CXX11
inline void ParkParaGetReq::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParaGetReq.DeviceID)
}
#endif
inline void ParkParaGetReq::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParaGetReq.DeviceID)
}
inline void ParkParaGetReq::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParaGetReq.DeviceID)
}
inline ::std::string* ParkParaGetReq::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetReq.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParaGetReq::release_deviceid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetReq.DeviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParaGetReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetReq.DeviceID)
}

// string Reserved1 = 101;
inline void ParkParaGetReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParaGetReq::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ParkParaGetReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetReq.Reserved1)
}
#if LANG_CXX11
inline void ParkParaGetReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParaGetReq.Reserved1)
}
#endif
inline void ParkParaGetReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParaGetReq.Reserved1)
}
inline void ParkParaGetReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParaGetReq.Reserved1)
}
inline ::std::string* ParkParaGetReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParaGetReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParaGetReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetReq.Reserved1)
}

// string Reserved2 = 102;
inline void ParkParaGetReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParaGetReq::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ParkParaGetReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetReq.Reserved2)
}
#if LANG_CXX11
inline void ParkParaGetReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParaGetReq.Reserved2)
}
#endif
inline void ParkParaGetReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParaGetReq.Reserved2)
}
inline void ParkParaGetReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParaGetReq.Reserved2)
}
inline ::std::string* ParkParaGetReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParaGetReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParaGetReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetReq.Reserved2)
}

// -------------------------------------------------------------------

// ParkParaGetAns

// .charge.protobuf.BoolEnum Confirm = 1;
inline void ParkParaGetAns::clear_confirm() {
  confirm_ = 0;
}
inline ::charge::protobuf::BoolEnum ParkParaGetAns::confirm() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetAns.Confirm)
  return static_cast< ::charge::protobuf::BoolEnum >(confirm_);
}
inline void ParkParaGetAns::set_confirm(::charge::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetAns.Confirm)
}

// .charge.protobuf.ParkParamInfo ParkingParam = 2;
inline bool ParkParaGetAns::has_parkingparam() const {
  return this != internal_default_instance() && parkingparam_ != NULL;
}
inline void ParkParaGetAns::clear_parkingparam() {
  if (GetArenaNoVirtual() == NULL && parkingparam_ != NULL) delete parkingparam_;
  parkingparam_ = NULL;
}
inline const ::charge::protobuf::ParkParamInfo& ParkParaGetAns::parkingparam() const {
  const ::charge::protobuf::ParkParamInfo* p = parkingparam_;
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetAns.ParkingParam)
  return p != NULL ? *p : *reinterpret_cast<const ::charge::protobuf::ParkParamInfo*>(
      &::charge::protobuf::_ParkParamInfo_default_instance_);
}
inline ::charge::protobuf::ParkParamInfo* ParkParaGetAns::mutable_parkingparam() {
  
  if (parkingparam_ == NULL) {
    parkingparam_ = new ::charge::protobuf::ParkParamInfo;
  }
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetAns.ParkingParam)
  return parkingparam_;
}
inline ::charge::protobuf::ParkParamInfo* ParkParaGetAns::release_parkingparam() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetAns.ParkingParam)
  
  ::charge::protobuf::ParkParamInfo* temp = parkingparam_;
  parkingparam_ = NULL;
  return temp;
}
inline void ParkParaGetAns::set_allocated_parkingparam(::charge::protobuf::ParkParamInfo* parkingparam) {
  delete parkingparam_;
  parkingparam_ = parkingparam;
  if (parkingparam) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetAns.ParkingParam)
}

// string Reserved1 = 101;
inline void ParkParaGetAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParaGetAns::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ParkParaGetAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetAns.Reserved1)
}
#if LANG_CXX11
inline void ParkParaGetAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParaGetAns.Reserved1)
}
#endif
inline void ParkParaGetAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParaGetAns.Reserved1)
}
inline void ParkParaGetAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParaGetAns.Reserved1)
}
inline ::std::string* ParkParaGetAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParaGetAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParaGetAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetAns.Reserved1)
}

// string Reserved2 = 102;
inline void ParkParaGetAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParaGetAns::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParaGetAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ParkParaGetAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParaGetAns.Reserved2)
}
#if LANG_CXX11
inline void ParkParaGetAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParaGetAns.Reserved2)
}
#endif
inline void ParkParaGetAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParaGetAns.Reserved2)
}
inline void ParkParaGetAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParaGetAns.Reserved2)
}
inline ::std::string* ParkParaGetAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParaGetAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParaGetAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParaGetAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParaGetAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParaGetAns.Reserved2)
}

// -------------------------------------------------------------------

// ParkParamInfo

// string DeviceID = 1;
inline void ParkParamInfo::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.DeviceID)
  return deviceid_.GetNoArena();
}
inline void ParkParamInfo::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.DeviceID)
}
#if LANG_CXX11
inline void ParkParamInfo::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.DeviceID)
}
#endif
inline void ParkParamInfo::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.DeviceID)
}
inline void ParkParamInfo::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.DeviceID)
}
inline ::std::string* ParkParamInfo::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_deviceid() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.DeviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.DeviceID)
}

// string Temperature = 2;
inline void ParkParamInfo::clear_temperature() {
  temperature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::temperature() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.Temperature)
  return temperature_.GetNoArena();
}
inline void ParkParamInfo::set_temperature(const ::std::string& value) {
  
  temperature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.Temperature)
}
#if LANG_CXX11
inline void ParkParamInfo::set_temperature(::std::string&& value) {
  
  temperature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.Temperature)
}
#endif
inline void ParkParamInfo::set_temperature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  temperature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.Temperature)
}
inline void ParkParamInfo::set_temperature(const char* value, size_t size) {
  
  temperature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.Temperature)
}
inline ::std::string* ParkParamInfo::mutable_temperature() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.Temperature)
  return temperature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_temperature() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.Temperature)
  
  return temperature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_temperature(::std::string* temperature) {
  if (temperature != NULL) {
    
  } else {
    
  }
  temperature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), temperature);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.Temperature)
}

// string Humidity = 3;
inline void ParkParamInfo::clear_humidity() {
  humidity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::humidity() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.Humidity)
  return humidity_.GetNoArena();
}
inline void ParkParamInfo::set_humidity(const ::std::string& value) {
  
  humidity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.Humidity)
}
#if LANG_CXX11
inline void ParkParamInfo::set_humidity(::std::string&& value) {
  
  humidity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.Humidity)
}
#endif
inline void ParkParamInfo::set_humidity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  humidity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.Humidity)
}
inline void ParkParamInfo::set_humidity(const char* value, size_t size) {
  
  humidity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.Humidity)
}
inline ::std::string* ParkParamInfo::mutable_humidity() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.Humidity)
  return humidity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_humidity() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.Humidity)
  
  return humidity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_humidity(::std::string* humidity) {
  if (humidity != NULL) {
    
  } else {
    
  }
  humidity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), humidity);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.Humidity)
}

// string BatteryCapacity = 4;
inline void ParkParamInfo::clear_batterycapacity() {
  batterycapacity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::batterycapacity() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.BatteryCapacity)
  return batterycapacity_.GetNoArena();
}
inline void ParkParamInfo::set_batterycapacity(const ::std::string& value) {
  
  batterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.BatteryCapacity)
}
#if LANG_CXX11
inline void ParkParamInfo::set_batterycapacity(::std::string&& value) {
  
  batterycapacity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.BatteryCapacity)
}
#endif
inline void ParkParamInfo::set_batterycapacity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  batterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.BatteryCapacity)
}
inline void ParkParamInfo::set_batterycapacity(const char* value, size_t size) {
  
  batterycapacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.BatteryCapacity)
}
inline ::std::string* ParkParamInfo::mutable_batterycapacity() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.BatteryCapacity)
  return batterycapacity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_batterycapacity() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.BatteryCapacity)
  
  return batterycapacity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_batterycapacity(::std::string* batterycapacity) {
  if (batterycapacity != NULL) {
    
  } else {
    
  }
  batterycapacity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batterycapacity);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.BatteryCapacity)
}

// string Reserved1 = 101;
inline void ParkParamInfo::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::reserved1() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ParkParamInfo::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.Reserved1)
}
#if LANG_CXX11
inline void ParkParamInfo::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.Reserved1)
}
#endif
inline void ParkParamInfo::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.Reserved1)
}
inline void ParkParamInfo::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.Reserved1)
}
inline ::std::string* ParkParamInfo::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_reserved1() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.Reserved1)
}

// string Reserved2 = 102;
inline void ParkParamInfo::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParkParamInfo::reserved2() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.ParkParamInfo.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ParkParamInfo::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.protobuf.ParkParamInfo.Reserved2)
}
#if LANG_CXX11
inline void ParkParamInfo::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:charge.protobuf.ParkParamInfo.Reserved2)
}
#endif
inline void ParkParamInfo::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.protobuf.ParkParamInfo.Reserved2)
}
inline void ParkParamInfo::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.protobuf.ParkParamInfo.Reserved2)
}
inline ::std::string* ParkParamInfo::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:charge.protobuf.ParkParamInfo.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParkParamInfo::release_reserved2() {
  // @@protoc_insertion_point(field_release:charge.protobuf.ParkParamInfo.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParkParamInfo::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:charge.protobuf.ParkParamInfo.Reserved2)
}

// -------------------------------------------------------------------

// DateTime

// int64 Time = 1;
inline void DateTime::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DateTime::time() const {
  // @@protoc_insertion_point(field_get:charge.protobuf.DateTime.Time)
  return time_;
}
inline void DateTime::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:charge.protobuf.DateTime.Time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace charge

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::charge::protobuf::AccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::AccountType>() {
  return ::charge::protobuf::AccountType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::BoolEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::BoolEnum>() {
  return ::charge::protobuf::BoolEnum_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::BillStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::BillStatus>() {
  return ::charge::protobuf::BillStatus_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ChargerStateEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ChargerStateEnum>() {
  return ::charge::protobuf::ChargerStateEnum_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::EndReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::EndReason>() {
  return ::charge::protobuf::EndReason_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ErrorCode>() {
  return ::charge::protobuf::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::FailReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::FailReason>() {
  return ::charge::protobuf::FailReason_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::MeasureType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::MeasureType>() {
  return ::charge::protobuf::MeasureType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::OfflineReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::OfflineReason>() {
  return ::charge::protobuf::OfflineReason_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::RegistrationStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::RegistrationStatus>() {
  return ::charge::protobuf::RegistrationStatus_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::StartChargeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::StartChargeType>() {
  return ::charge::protobuf::StartChargeType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ChargeRequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ChargeRequestType>() {
  return ::charge::protobuf::ChargeRequestType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ChargeDischarge> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ChargeDischarge>() {
  return ::charge::protobuf::ChargeDischarge_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::StartChargeWay> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::StartChargeWay>() {
  return ::charge::protobuf::StartChargeWay_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::StateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::StateType>() {
  return ::charge::protobuf::StateType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::SendReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::SendReason>() {
  return ::charge::protobuf::SendReason_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::SyncAccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::SyncAccountType>() {
  return ::charge::protobuf::SyncAccountType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ChargingMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ChargingMode>() {
  return ::charge::protobuf::ChargingMode_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::CruveType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::CruveType>() {
  return ::charge::protobuf::CruveType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::CtrlHardwareType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::CtrlHardwareType>() {
  return ::charge::protobuf::CtrlHardwareType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::BillType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::BillType>() {
  return ::charge::protobuf::BillType_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ParkingStatusEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ParkingStatusEnum>() {
  return ::charge::protobuf::ParkingStatusEnum_descriptor();
}
template <> struct is_proto_enum< ::charge::protobuf::ParkingAlarmCodeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::charge::protobuf::ParkingAlarmCodeEnum>() {
  return ::charge::protobuf::ParkingAlarmCodeEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chargeprotobuf_2eproto__INCLUDED
