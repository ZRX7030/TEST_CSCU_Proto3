// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitorprotobuf.proto

#ifndef PROTOBUF_monitorprotobuf_2eproto__INCLUDED
#define PROTOBUF_monitorprotobuf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace monitor {
namespace protobuf {
class ACModularDataNotifyReq;
class ACModularDataNotifyReqDefaultTypeInternal;
extern ACModularDataNotifyReqDefaultTypeInternal _ACModularDataNotifyReq_default_instance_;
class ACModularDataType;
class ACModularDataTypeDefaultTypeInternal;
extern ACModularDataTypeDefaultTypeInternal _ACModularDataType_default_instance_;
class ACModularReq;
class ACModularReqDefaultTypeInternal;
extern ACModularReqDefaultTypeInternal _ACModularReq_default_instance_;
class AlarmAns;
class AlarmAnsDefaultTypeInternal;
extern AlarmAnsDefaultTypeInternal _AlarmAns_default_instance_;
class AlarmDataType;
class AlarmDataTypeDefaultTypeInternal;
extern AlarmDataTypeDefaultTypeInternal _AlarmDataType_default_instance_;
class AlarmReq;
class AlarmReqDefaultTypeInternal;
extern AlarmReqDefaultTypeInternal _AlarmReq_default_instance_;
class BillUpLoadFailDataType;
class BillUpLoadFailDataTypeDefaultTypeInternal;
extern BillUpLoadFailDataTypeDefaultTypeInternal _BillUpLoadFailDataType_default_instance_;
class BillUploadFailAns;
class BillUploadFailAnsDefaultTypeInternal;
extern BillUploadFailAnsDefaultTypeInternal _BillUploadFailAns_default_instance_;
class BillUploadFailReq;
class BillUploadFailReqDefaultTypeInternal;
extern BillUploadFailReqDefaultTypeInternal _BillUploadFailReq_default_instance_;
class BoxType;
class BoxTypeDefaultTypeInternal;
extern BoxTypeDefaultTypeInternal _BoxType_default_instance_;
class CcuDataNotifyReq;
class CcuDataNotifyReqDefaultTypeInternal;
extern CcuDataNotifyReqDefaultTypeInternal _CcuDataNotifyReq_default_instance_;
class CcuDataType;
class CcuDataTypeDefaultTypeInternal;
extern CcuDataTypeDefaultTypeInternal _CcuDataType_default_instance_;
class CcuReq;
class CcuReqDefaultTypeInternal;
extern CcuReqDefaultTypeInternal _CcuReq_default_instance_;
class CommAns;
class CommAnsDefaultTypeInternal;
extern CommAnsDefaultTypeInternal _CommAns_default_instance_;
class ControlboxDataNotifyReq;
class ControlboxDataNotifyReqDefaultTypeInternal;
extern ControlboxDataNotifyReqDefaultTypeInternal _ControlboxDataNotifyReq_default_instance_;
class ControlboxDataReq;
class ControlboxDataReqDefaultTypeInternal;
extern ControlboxDataReqDefaultTypeInternal _ControlboxDataReq_default_instance_;
class DCCabType;
class DCCabTypeDefaultTypeInternal;
extern DCCabTypeDefaultTypeInternal _DCCabType_default_instance_;
class DCModularDataNotifyReq;
class DCModularDataNotifyReqDefaultTypeInternal;
extern DCModularDataNotifyReqDefaultTypeInternal _DCModularDataNotifyReq_default_instance_;
class DCModularDataType;
class DCModularDataTypeDefaultTypeInternal;
extern DCModularDataTypeDefaultTypeInternal _DCModularDataType_default_instance_;
class DCModularReq;
class DCModularReqDefaultTypeInternal;
extern DCModularReqDefaultTypeInternal _DCModularReq_default_instance_;
class DateTime;
class DateTimeDefaultTypeInternal;
extern DateTimeDefaultTypeInternal _DateTime_default_instance_;
class HVRBoxType;
class HVRBoxTypeDefaultTypeInternal;
extern HVRBoxTypeDefaultTypeInternal _HVRBoxType_default_instance_;
class HVRType;
class HVRTypeDefaultTypeInternal;
extern HVRTypeDefaultTypeInternal _HVRType_default_instance_;
class HeartbeatAns;
class HeartbeatAnsDefaultTypeInternal;
extern HeartbeatAnsDefaultTypeInternal _HeartbeatAns_default_instance_;
class HeartbeatReq;
class HeartbeatReqDefaultTypeInternal;
extern HeartbeatReqDefaultTypeInternal _HeartbeatReq_default_instance_;
class LVRBoxType;
class LVRBoxTypeDefaultTypeInternal;
extern LVRBoxTypeDefaultTypeInternal _LVRBoxType_default_instance_;
class LVRType;
class LVRTypeDefaultTypeInternal;
extern LVRTypeDefaultTypeInternal _LVRType_default_instance_;
class LoginAns;
class LoginAnsDefaultTypeInternal;
extern LoginAnsDefaultTypeInternal _LoginAns_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LvCabType;
class LvCabTypeDefaultTypeInternal;
extern LvCabTypeDefaultTypeInternal _LvCabType_default_instance_;
class MeterType;
class MeterTypeDefaultTypeInternal;
extern MeterTypeDefaultTypeInternal _MeterType_default_instance_;
class MonitorSignalNotifyReq;
class MonitorSignalNotifyReqDefaultTypeInternal;
extern MonitorSignalNotifyReqDefaultTypeInternal _MonitorSignalNotifyReq_default_instance_;
class MonitorSignalReq;
class MonitorSignalReqDefaultTypeInternal;
extern MonitorSignalReqDefaultTypeInternal _MonitorSignalReq_default_instance_;
class MonitorSignalType;
class MonitorSignalTypeDefaultTypeInternal;
extern MonitorSignalTypeDefaultTypeInternal _MonitorSignalType_default_instance_;
class MonitorStateNotifyReq;
class MonitorStateNotifyReqDefaultTypeInternal;
extern MonitorStateNotifyReqDefaultTypeInternal _MonitorStateNotifyReq_default_instance_;
class MonitorStateReq;
class MonitorStateReqDefaultTypeInternal;
extern MonitorStateReqDefaultTypeInternal _MonitorStateReq_default_instance_;
class MonitorStateType;
class MonitorStateTypeDefaultTypeInternal;
extern MonitorStateTypeDefaultTypeInternal _MonitorStateType_default_instance_;
class MonitorTelemetryNotifyReq;
class MonitorTelemetryNotifyReqDefaultTypeInternal;
extern MonitorTelemetryNotifyReqDefaultTypeInternal _MonitorTelemetryNotifyReq_default_instance_;
class MonitorTelemetryReq;
class MonitorTelemetryReqDefaultTypeInternal;
extern MonitorTelemetryReqDefaultTypeInternal _MonitorTelemetryReq_default_instance_;
class MonitorTelemetryType;
class MonitorTelemetryTypeDefaultTypeInternal;
extern MonitorTelemetryTypeDefaultTypeInternal _MonitorTelemetryType_default_instance_;
class OfflineAns;
class OfflineAnsDefaultTypeInternal;
extern OfflineAnsDefaultTypeInternal _OfflineAns_default_instance_;
class OfflineReq;
class OfflineReqDefaultTypeInternal;
extern OfflineReqDefaultTypeInternal _OfflineReq_default_instance_;
class PduDataNotifyReq;
class PduDataNotifyReqDefaultTypeInternal;
extern PduDataNotifyReqDefaultTypeInternal _PduDataNotifyReq_default_instance_;
class PduDataType;
class PduDataTypeDefaultTypeInternal;
extern PduDataTypeDefaultTypeInternal _PduDataType_default_instance_;
class PduReq;
class PduReqDefaultTypeInternal;
extern PduReqDefaultTypeInternal _PduReq_default_instance_;
class RoomDataNotifyReq;
class RoomDataNotifyReqDefaultTypeInternal;
extern RoomDataNotifyReqDefaultTypeInternal _RoomDataNotifyReq_default_instance_;
class RoomDataReq;
class RoomDataReqDefaultTypeInternal;
extern RoomDataReqDefaultTypeInternal _RoomDataReq_default_instance_;
class SlotType;
class SlotTypeDefaultTypeInternal;
extern SlotTypeDefaultTypeInternal _SlotType_default_instance_;
class TFRBoxType;
class TFRBoxTypeDefaultTypeInternal;
extern TFRBoxTypeDefaultTypeInternal _TFRBoxType_default_instance_;
class TelecontrolAns;
class TelecontrolAnsDefaultTypeInternal;
extern TelecontrolAnsDefaultTypeInternal _TelecontrolAns_default_instance_;
class TelecontrolReq;
class TelecontrolReqDefaultTypeInternal;
extern TelecontrolReqDefaultTypeInternal _TelecontrolReq_default_instance_;
class TrType;
class TrTypeDefaultTypeInternal;
extern TrTypeDefaultTypeInternal _TrType_default_instance_;
}  // namespace protobuf
}  // namespace monitor

namespace monitor {
namespace protobuf {

namespace protobuf_monitorprotobuf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_monitorprotobuf_2eproto

enum OfflineReason {
  DefaultOfflineReason = 0,
  ConnectionLost = 1,
  PowerOff = 2,
  HeartbeatTimeout = 3,
  OfflineReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OfflineReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OfflineReason_IsValid(int value);
const OfflineReason OfflineReason_MIN = DefaultOfflineReason;
const OfflineReason OfflineReason_MAX = HeartbeatTimeout;
const int OfflineReason_ARRAYSIZE = OfflineReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* OfflineReason_descriptor();
inline const ::std::string& OfflineReason_Name(OfflineReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    OfflineReason_descriptor(), value);
}
inline bool OfflineReason_Parse(
    const ::std::string& name, OfflineReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfflineReason>(
    OfflineReason_descriptor(), name, value);
}
enum RegistrationStatus {
  DefaultRegistrationStatus = 0,
  Accepted = 1,
  Rejected = 2,
  RegistrationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegistrationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegistrationStatus_IsValid(int value);
const RegistrationStatus RegistrationStatus_MIN = DefaultRegistrationStatus;
const RegistrationStatus RegistrationStatus_MAX = Rejected;
const int RegistrationStatus_ARRAYSIZE = RegistrationStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegistrationStatus_descriptor();
inline const ::std::string& RegistrationStatus_Name(RegistrationStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegistrationStatus_descriptor(), value);
}
inline bool RegistrationStatus_Parse(
    const ::std::string& name, RegistrationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegistrationStatus>(
    RegistrationStatus_descriptor(), name, value);
}
enum CtrlHardwareType {
  DefaultCtrlHardwareType = 0,
  SplitType = 1,
  IntigratedType = 2,
  CtrlHardwareType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CtrlHardwareType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CtrlHardwareType_IsValid(int value);
const CtrlHardwareType CtrlHardwareType_MIN = DefaultCtrlHardwareType;
const CtrlHardwareType CtrlHardwareType_MAX = IntigratedType;
const int CtrlHardwareType_ARRAYSIZE = CtrlHardwareType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CtrlHardwareType_descriptor();
inline const ::std::string& CtrlHardwareType_Name(CtrlHardwareType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CtrlHardwareType_descriptor(), value);
}
inline bool CtrlHardwareType_Parse(
    const ::std::string& name, CtrlHardwareType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CtrlHardwareType>(
    CtrlHardwareType_descriptor(), name, value);
}
enum AlarmStateEnumType {
  DefaultAlarm = 0,
  AbNormal = 1,
  Normal = 2,
  AlarmStateEnumType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmStateEnumType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmStateEnumType_IsValid(int value);
const AlarmStateEnumType AlarmStateEnumType_MIN = DefaultAlarm;
const AlarmStateEnumType AlarmStateEnumType_MAX = Normal;
const int AlarmStateEnumType_ARRAYSIZE = AlarmStateEnumType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmStateEnumType_descriptor();
inline const ::std::string& AlarmStateEnumType_Name(AlarmStateEnumType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmStateEnumType_descriptor(), value);
}
inline bool AlarmStateEnumType_Parse(
    const ::std::string& name, AlarmStateEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmStateEnumType>(
    AlarmStateEnumType_descriptor(), name, value);
}
enum SendReason {
  DefaultSendReason = 0,
  DataChange = 1,
  CallAnswer = 2,
  IntervalSend = 3,
  SendReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SendReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SendReason_IsValid(int value);
const SendReason SendReason_MIN = DefaultSendReason;
const SendReason SendReason_MAX = IntervalSend;
const int SendReason_ARRAYSIZE = SendReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* SendReason_descriptor();
inline const ::std::string& SendReason_Name(SendReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    SendReason_descriptor(), value);
}
inline bool SendReason_Parse(
    const ::std::string& name, SendReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SendReason>(
    SendReason_descriptor(), name, value);
}
enum DevDescType {
  DefaultDevTypeEnum = 0,
  Mtu = 1,
  Room = 2,
  ControlBox = 3,
  DcsinglePile = 4,
  AcsinglePile = 5,
  Cabinet = 6,
  Charingbow = 7,
  Pantograph = 8,
  CCU = 9,
  PDU = 10,
  Dcmodular = 11,
  Acmodular = 12,
  Pile = 13,
  Lock = 14,
  Fan = 15,
  Meter = 16,
  DevDescType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DevDescType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DevDescType_IsValid(int value);
const DevDescType DevDescType_MIN = DefaultDevTypeEnum;
const DevDescType DevDescType_MAX = Meter;
const int DevDescType_ARRAYSIZE = DevDescType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DevDescType_descriptor();
inline const ::std::string& DevDescType_Name(DevDescType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DevDescType_descriptor(), value);
}
inline bool DevDescType_Parse(
    const ::std::string& name, DevDescType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DevDescType>(
    DevDescType_descriptor(), name, value);
}
enum BoolEnum {
  DefaultBool = 0,
  True = 1,
  False = 2,
  BoolEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BoolEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BoolEnum_IsValid(int value);
const BoolEnum BoolEnum_MIN = DefaultBool;
const BoolEnum BoolEnum_MAX = False;
const int BoolEnum_ARRAYSIZE = BoolEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* BoolEnum_descriptor();
inline const ::std::string& BoolEnum_Name(BoolEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    BoolEnum_descriptor(), value);
}
inline bool BoolEnum_Parse(
    const ::std::string& name, BoolEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BoolEnum>(
    BoolEnum_descriptor(), name, value);
}
enum SignalType {
  DefaultSignal = 0,
  Off = 1,
  On = 2,
  SignalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalType_IsValid(int value);
const SignalType SignalType_MIN = DefaultSignal;
const SignalType SignalType_MAX = On;
const int SignalType_ARRAYSIZE = SignalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalType_descriptor();
inline const ::std::string& SignalType_Name(SignalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalType_descriptor(), value);
}
inline bool SignalType_Parse(
    const ::std::string& name, SignalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalType>(
    SignalType_descriptor(), name, value);
}
enum SlotEnumType {
  DefaultSlotEnum = 0,
  InSlot = 1,
  NotInSlot = 2,
  SlotEnumType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SlotEnumType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SlotEnumType_IsValid(int value);
const SlotEnumType SlotEnumType_MIN = DefaultSlotEnum;
const SlotEnumType SlotEnumType_MAX = NotInSlot;
const int SlotEnumType_ARRAYSIZE = SlotEnumType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlotEnumType_descriptor();
inline const ::std::string& SlotEnumType_Name(SlotEnumType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlotEnumType_descriptor(), value);
}
inline bool SlotEnumType_Parse(
    const ::std::string& name, SlotEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlotEnumType>(
    SlotEnumType_descriptor(), name, value);
}
// ===================================================================

class HeartbeatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.HeartbeatReq) */ {
 public:
  HeartbeatReq();
  virtual ~HeartbeatReq();

  HeartbeatReq(const HeartbeatReq& from);

  inline HeartbeatReq& operator=(const HeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatReq(HeartbeatReq&& from) noexcept
    : HeartbeatReq() {
    *this = ::std::move(from);
  }

  inline HeartbeatReq& operator=(HeartbeatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatReq& default_instance();

  static inline const HeartbeatReq* internal_default_instance() {
    return reinterpret_cast<const HeartbeatReq*>(
               &_HeartbeatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HeartbeatReq* other);
  friend void swap(HeartbeatReq& a, HeartbeatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatReq& from);
  void MergeFrom(const HeartbeatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.DateTime CurrentTime = 1;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& currenttime() const;
  ::monitor::protobuf::DateTime* mutable_currenttime();
  ::monitor::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.HeartbeatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::monitor::protobuf::DateTime* currenttime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.HeartbeatAns) */ {
 public:
  HeartbeatAns();
  virtual ~HeartbeatAns();

  HeartbeatAns(const HeartbeatAns& from);

  inline HeartbeatAns& operator=(const HeartbeatAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatAns(HeartbeatAns&& from) noexcept
    : HeartbeatAns() {
    *this = ::std::move(from);
  }

  inline HeartbeatAns& operator=(HeartbeatAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatAns& default_instance();

  static inline const HeartbeatAns* internal_default_instance() {
    return reinterpret_cast<const HeartbeatAns*>(
               &_HeartbeatAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HeartbeatAns* other);
  friend void swap(HeartbeatAns& a, HeartbeatAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatAns* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartbeatAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartbeatAns& from);
  void MergeFrom(const HeartbeatAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartbeatAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.DateTime CurrentTime = 1;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& currenttime() const;
  ::monitor::protobuf::DateTime* mutable_currenttime();
  ::monitor::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.HeartbeatAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::monitor::protobuf::DateTime* currenttime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LoginReq* other);
  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string SerialNumber = 3;
  void clear_serialnumber();
  static const int kSerialNumberFieldNumber = 3;
  const ::std::string& serialnumber() const;
  void set_serialnumber(const ::std::string& value);
  #if LANG_CXX11
  void set_serialnumber(::std::string&& value);
  #endif
  void set_serialnumber(const char* value);
  void set_serialnumber(const char* value, size_t size);
  ::std::string* mutable_serialnumber();
  ::std::string* release_serialnumber();
  void set_allocated_serialnumber(::std::string* serialnumber);

  // string CtrlProtoVersion = 4;
  void clear_ctrlprotoversion();
  static const int kCtrlProtoVersionFieldNumber = 4;
  const ::std::string& ctrlprotoversion() const;
  void set_ctrlprotoversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlprotoversion(::std::string&& value);
  #endif
  void set_ctrlprotoversion(const char* value);
  void set_ctrlprotoversion(const char* value, size_t size);
  ::std::string* mutable_ctrlprotoversion();
  ::std::string* release_ctrlprotoversion();
  void set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion);

  // string CtrlVendor = 5;
  void clear_ctrlvendor();
  static const int kCtrlVendorFieldNumber = 5;
  const ::std::string& ctrlvendor() const;
  void set_ctrlvendor(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlvendor(::std::string&& value);
  #endif
  void set_ctrlvendor(const char* value);
  void set_ctrlvendor(const char* value, size_t size);
  ::std::string* mutable_ctrlvendor();
  ::std::string* release_ctrlvendor();
  void set_allocated_ctrlvendor(::std::string* ctrlvendor);

  // string CtrlSwVersion = 6;
  void clear_ctrlswversion();
  static const int kCtrlSwVersionFieldNumber = 6;
  const ::std::string& ctrlswversion() const;
  void set_ctrlswversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlswversion(::std::string&& value);
  #endif
  void set_ctrlswversion(const char* value);
  void set_ctrlswversion(const char* value, size_t size);
  ::std::string* mutable_ctrlswversion();
  ::std::string* release_ctrlswversion();
  void set_allocated_ctrlswversion(::std::string* ctrlswversion);

  // string DataCenter = 8;
  void clear_datacenter();
  static const int kDataCenterFieldNumber = 8;
  const ::std::string& datacenter() const;
  void set_datacenter(const ::std::string& value);
  #if LANG_CXX11
  void set_datacenter(::std::string&& value);
  #endif
  void set_datacenter(const char* value);
  void set_datacenter(const char* value, size_t size);
  ::std::string* mutable_datacenter();
  ::std::string* release_datacenter();
  void set_allocated_datacenter(::std::string* datacenter);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // .monitor.protobuf.CtrlHardwareType CtrlHwType = 7;
  void clear_ctrlhwtype();
  static const int kCtrlHwTypeFieldNumber = 7;
  ::monitor::protobuf::CtrlHardwareType ctrlhwtype() const;
  void set_ctrlhwtype(::monitor::protobuf::CtrlHardwareType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr serialnumber_;
  ::google::protobuf::internal::ArenaStringPtr ctrlprotoversion_;
  ::google::protobuf::internal::ArenaStringPtr ctrlvendor_;
  ::google::protobuf::internal::ArenaStringPtr ctrlswversion_;
  ::google::protobuf::internal::ArenaStringPtr datacenter_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  int ctrlhwtype_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.LoginAns) */ {
 public:
  LoginAns();
  virtual ~LoginAns();

  LoginAns(const LoginAns& from);

  inline LoginAns& operator=(const LoginAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginAns(LoginAns&& from) noexcept
    : LoginAns() {
    *this = ::std::move(from);
  }

  inline LoginAns& operator=(LoginAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginAns& default_instance();

  static inline const LoginAns* internal_default_instance() {
    return reinterpret_cast<const LoginAns*>(
               &_LoginAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoginAns* other);
  friend void swap(LoginAns& a, LoginAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginAns* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginAns& from);
  void MergeFrom(const LoginAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.DateTime CurrentTime = 2;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& currenttime() const;
  ::monitor::protobuf::DateTime* mutable_currenttime();
  ::monitor::protobuf::DateTime* release_currenttime();
  void set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime);

  // .monitor.protobuf.RegistrationStatus Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::monitor::protobuf::RegistrationStatus status() const;
  void set_status(::monitor::protobuf::RegistrationStatus value);

  // int32 Interval = 3;
  void clear_interval();
  static const int kIntervalFieldNumber = 3;
  ::google::protobuf::int32 interval() const;
  void set_interval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.LoginAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::monitor::protobuf::DateTime* currenttime_;
  int status_;
  ::google::protobuf::int32 interval_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.OfflineReq) */ {
 public:
  OfflineReq();
  virtual ~OfflineReq();

  OfflineReq(const OfflineReq& from);

  inline OfflineReq& operator=(const OfflineReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineReq(OfflineReq&& from) noexcept
    : OfflineReq() {
    *this = ::std::move(from);
  }

  inline OfflineReq& operator=(OfflineReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineReq& default_instance();

  static inline const OfflineReq* internal_default_instance() {
    return reinterpret_cast<const OfflineReq*>(
               &_OfflineReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OfflineReq* other);
  friend void swap(OfflineReq& a, OfflineReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineReq& from);
  void MergeFrom(const OfflineReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CtrlProtoVersion = 3;
  void clear_ctrlprotoversion();
  static const int kCtrlProtoVersionFieldNumber = 3;
  const ::std::string& ctrlprotoversion() const;
  void set_ctrlprotoversion(const ::std::string& value);
  #if LANG_CXX11
  void set_ctrlprotoversion(::std::string&& value);
  #endif
  void set_ctrlprotoversion(const char* value);
  void set_ctrlprotoversion(const char* value, size_t size);
  ::std::string* mutable_ctrlprotoversion();
  ::std::string* release_ctrlprotoversion();
  void set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime OfflineTime = 2;
  bool has_offlinetime() const;
  void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& offlinetime() const;
  ::monitor::protobuf::DateTime* mutable_offlinetime();
  ::monitor::protobuf::DateTime* release_offlinetime();
  void set_allocated_offlinetime(::monitor::protobuf::DateTime* offlinetime);

  // .monitor.protobuf.OfflineReason Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::monitor::protobuf::OfflineReason reason() const;
  void set_reason(::monitor::protobuf::OfflineReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.OfflineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ctrlprotoversion_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* offlinetime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.OfflineAns) */ {
 public:
  OfflineAns();
  virtual ~OfflineAns();

  OfflineAns(const OfflineAns& from);

  inline OfflineAns& operator=(const OfflineAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineAns(OfflineAns&& from) noexcept
    : OfflineAns() {
    *this = ::std::move(from);
  }

  inline OfflineAns& operator=(OfflineAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineAns& default_instance();

  static inline const OfflineAns* internal_default_instance() {
    return reinterpret_cast<const OfflineAns*>(
               &_OfflineAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OfflineAns* other);
  friend void swap(OfflineAns& a, OfflineAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineAns* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineAns& from);
  void MergeFrom(const OfflineAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::monitor::protobuf::BoolEnum confirm() const;
  void set_confirm(::monitor::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.OfflineAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.AlarmReq) */ {
 public:
  AlarmReq();
  virtual ~AlarmReq();

  AlarmReq(const AlarmReq& from);

  inline AlarmReq& operator=(const AlarmReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmReq(AlarmReq&& from) noexcept
    : AlarmReq() {
    *this = ::std::move(from);
  }

  inline AlarmReq& operator=(AlarmReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmReq& default_instance();

  static inline const AlarmReq* internal_default_instance() {
    return reinterpret_cast<const AlarmReq*>(
               &_AlarmReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(AlarmReq* other);
  friend void swap(AlarmReq& a, AlarmReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AlarmReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlarmReq& from);
  void MergeFrom(const AlarmReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlarmReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.AlarmDataType AlarmDataList = 6;
  int alarmdatalist_size() const;
  void clear_alarmdatalist();
  static const int kAlarmDataListFieldNumber = 6;
  const ::monitor::protobuf::AlarmDataType& alarmdatalist(int index) const;
  ::monitor::protobuf::AlarmDataType* mutable_alarmdatalist(int index);
  ::monitor::protobuf::AlarmDataType* add_alarmdatalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >*
      mutable_alarmdatalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >&
      alarmdatalist() const;

  // string SN = 2;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime AlarmTime = 5;
  bool has_alarmtime() const;
  void clear_alarmtime();
  static const int kAlarmTimeFieldNumber = 5;
  const ::monitor::protobuf::DateTime& alarmtime() const;
  ::monitor::protobuf::DateTime* mutable_alarmtime();
  ::monitor::protobuf::DateTime* release_alarmtime();
  void set_allocated_alarmtime(::monitor::protobuf::DateTime* alarmtime);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // .monitor.protobuf.DevDescType DevType = 3;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 3;
  ::monitor::protobuf::DevDescType devtype() const;
  void set_devtype(::monitor::protobuf::DevDescType value);

  // .monitor.protobuf.SendReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.AlarmReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType > alarmdatalist_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* alarmtime_;
  ::google::protobuf::int32 devindex_;
  int devtype_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.AlarmDataType) */ {
 public:
  AlarmDataType();
  virtual ~AlarmDataType();

  AlarmDataType(const AlarmDataType& from);

  inline AlarmDataType& operator=(const AlarmDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmDataType(AlarmDataType&& from) noexcept
    : AlarmDataType() {
    *this = ::std::move(from);
  }

  inline AlarmDataType& operator=(AlarmDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmDataType& default_instance();

  static inline const AlarmDataType* internal_default_instance() {
    return reinterpret_cast<const AlarmDataType*>(
               &_AlarmDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AlarmDataType* other);
  friend void swap(AlarmDataType& a, AlarmDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  AlarmDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlarmDataType& from);
  void MergeFrom(const AlarmDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlarmDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 AlarmCode = 1;
  void clear_alarmcode();
  static const int kAlarmCodeFieldNumber = 1;
  ::google::protobuf::int32 alarmcode() const;
  void set_alarmcode(::google::protobuf::int32 value);

  // .monitor.protobuf.AlarmStateEnumType AlarmState = 2;
  void clear_alarmstate();
  static const int kAlarmStateFieldNumber = 2;
  ::monitor::protobuf::AlarmStateEnumType alarmstate() const;
  void set_alarmstate(::monitor::protobuf::AlarmStateEnumType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.AlarmDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 alarmcode_;
  int alarmstate_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.AlarmAns) */ {
 public:
  AlarmAns();
  virtual ~AlarmAns();

  AlarmAns(const AlarmAns& from);

  inline AlarmAns& operator=(const AlarmAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmAns(AlarmAns&& from) noexcept
    : AlarmAns() {
    *this = ::std::move(from);
  }

  inline AlarmAns& operator=(AlarmAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmAns& default_instance();

  static inline const AlarmAns* internal_default_instance() {
    return reinterpret_cast<const AlarmAns*>(
               &_AlarmAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AlarmAns* other);
  friend void swap(AlarmAns& a, AlarmAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmAns* New() const PROTOBUF_FINAL { return New(NULL); }

  AlarmAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlarmAns& from);
  void MergeFrom(const AlarmAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlarmAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.AlarmDataType AlarmDataList = 6;
  int alarmdatalist_size() const;
  void clear_alarmdatalist();
  static const int kAlarmDataListFieldNumber = 6;
  const ::monitor::protobuf::AlarmDataType& alarmdatalist(int index) const;
  ::monitor::protobuf::AlarmDataType* mutable_alarmdatalist(int index);
  ::monitor::protobuf::AlarmDataType* add_alarmdatalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >*
      mutable_alarmdatalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >&
      alarmdatalist() const;

  // string SN = 2;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime AlarmTime = 5;
  bool has_alarmtime() const;
  void clear_alarmtime();
  static const int kAlarmTimeFieldNumber = 5;
  const ::monitor::protobuf::DateTime& alarmtime() const;
  ::monitor::protobuf::DateTime* mutable_alarmtime();
  ::monitor::protobuf::DateTime* release_alarmtime();
  void set_allocated_alarmtime(::monitor::protobuf::DateTime* alarmtime);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // .monitor.protobuf.DevDescType DevType = 3;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 3;
  ::monitor::protobuf::DevDescType devtype() const;
  void set_devtype(::monitor::protobuf::DevDescType value);

  // .monitor.protobuf.SendReason Reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // .monitor.protobuf.BoolEnum Confirm = 7;
  void clear_confirm();
  static const int kConfirmFieldNumber = 7;
  ::monitor::protobuf::BoolEnum confirm() const;
  void set_confirm(::monitor::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.AlarmAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType > alarmdatalist_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* alarmtime_;
  ::google::protobuf::int32 devindex_;
  int devtype_;
  int reason_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillUploadFailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.BillUploadFailReq) */ {
 public:
  BillUploadFailReq();
  virtual ~BillUploadFailReq();

  BillUploadFailReq(const BillUploadFailReq& from);

  inline BillUploadFailReq& operator=(const BillUploadFailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillUploadFailReq(BillUploadFailReq&& from) noexcept
    : BillUploadFailReq() {
    *this = ::std::move(from);
  }

  inline BillUploadFailReq& operator=(BillUploadFailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillUploadFailReq& default_instance();

  static inline const BillUploadFailReq* internal_default_instance() {
    return reinterpret_cast<const BillUploadFailReq*>(
               &_BillUploadFailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BillUploadFailReq* other);
  friend void swap(BillUploadFailReq& a, BillUploadFailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillUploadFailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BillUploadFailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillUploadFailReq& from);
  void MergeFrom(const BillUploadFailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillUploadFailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.BillUpLoadFailDataType FailBillList = 4;
  int failbilllist_size() const;
  void clear_failbilllist();
  static const int kFailBillListFieldNumber = 4;
  const ::monitor::protobuf::BillUpLoadFailDataType& failbilllist(int index) const;
  ::monitor::protobuf::BillUpLoadFailDataType* mutable_failbilllist(int index);
  ::monitor::protobuf::BillUpLoadFailDataType* add_failbilllist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >*
      mutable_failbilllist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >&
      failbilllist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 3;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // .monitor.protobuf.SendReason Reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.BillUploadFailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType > failbilllist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 devindex_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillUpLoadFailDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.BillUpLoadFailDataType) */ {
 public:
  BillUpLoadFailDataType();
  virtual ~BillUpLoadFailDataType();

  BillUpLoadFailDataType(const BillUpLoadFailDataType& from);

  inline BillUpLoadFailDataType& operator=(const BillUpLoadFailDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillUpLoadFailDataType(BillUpLoadFailDataType&& from) noexcept
    : BillUpLoadFailDataType() {
    *this = ::std::move(from);
  }

  inline BillUpLoadFailDataType& operator=(BillUpLoadFailDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillUpLoadFailDataType& default_instance();

  static inline const BillUpLoadFailDataType* internal_default_instance() {
    return reinterpret_cast<const BillUpLoadFailDataType*>(
               &_BillUpLoadFailDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(BillUpLoadFailDataType* other);
  friend void swap(BillUpLoadFailDataType& a, BillUpLoadFailDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillUpLoadFailDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  BillUpLoadFailDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillUpLoadFailDataType& from);
  void MergeFrom(const BillUpLoadFailDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillUpLoadFailDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UnConfirmBillCode = 2;
  void clear_unconfirmbillcode();
  static const int kUnConfirmBillCodeFieldNumber = 2;
  const ::std::string& unconfirmbillcode() const;
  void set_unconfirmbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_unconfirmbillcode(::std::string&& value);
  #endif
  void set_unconfirmbillcode(const char* value);
  void set_unconfirmbillcode(const char* value, size_t size);
  ::std::string* mutable_unconfirmbillcode();
  ::std::string* release_unconfirmbillcode();
  void set_allocated_unconfirmbillcode(::std::string* unconfirmbillcode);

  // string UnConfirmCtrlBillCode = 3;
  void clear_unconfirmctrlbillcode();
  static const int kUnConfirmCtrlBillCodeFieldNumber = 3;
  const ::std::string& unconfirmctrlbillcode() const;
  void set_unconfirmctrlbillcode(const ::std::string& value);
  #if LANG_CXX11
  void set_unconfirmctrlbillcode(::std::string&& value);
  #endif
  void set_unconfirmctrlbillcode(const char* value);
  void set_unconfirmctrlbillcode(const char* value, size_t size);
  ::std::string* mutable_unconfirmctrlbillcode();
  ::std::string* release_unconfirmctrlbillcode();
  void set_allocated_unconfirmctrlbillcode(::std::string* unconfirmctrlbillcode);

  // string BillDetail = 4;
  void clear_billdetail();
  static const int kBillDetailFieldNumber = 4;
  const ::std::string& billdetail() const;
  void set_billdetail(const ::std::string& value);
  #if LANG_CXX11
  void set_billdetail(::std::string&& value);
  #endif
  void set_billdetail(const char* value);
  void set_billdetail(const char* value, size_t size);
  ::std::string* mutable_billdetail();
  ::std::string* release_billdetail();
  void set_allocated_billdetail(::std::string* billdetail);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.BillUpLoadFailDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr unconfirmbillcode_;
  ::google::protobuf::internal::ArenaStringPtr unconfirmctrlbillcode_;
  ::google::protobuf::internal::ArenaStringPtr billdetail_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BillUploadFailAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.BillUploadFailAns) */ {
 public:
  BillUploadFailAns();
  virtual ~BillUploadFailAns();

  BillUploadFailAns(const BillUploadFailAns& from);

  inline BillUploadFailAns& operator=(const BillUploadFailAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BillUploadFailAns(BillUploadFailAns&& from) noexcept
    : BillUploadFailAns() {
    *this = ::std::move(from);
  }

  inline BillUploadFailAns& operator=(BillUploadFailAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BillUploadFailAns& default_instance();

  static inline const BillUploadFailAns* internal_default_instance() {
    return reinterpret_cast<const BillUploadFailAns*>(
               &_BillUploadFailAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(BillUploadFailAns* other);
  friend void swap(BillUploadFailAns& a, BillUploadFailAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BillUploadFailAns* New() const PROTOBUF_FINAL { return New(NULL); }

  BillUploadFailAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BillUploadFailAns& from);
  void MergeFrom(const BillUploadFailAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BillUploadFailAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.BillUpLoadFailDataType FailBillList = 4;
  int failbilllist_size() const;
  void clear_failbilllist();
  static const int kFailBillListFieldNumber = 4;
  const ::monitor::protobuf::BillUpLoadFailDataType& failbilllist(int index) const;
  ::monitor::protobuf::BillUpLoadFailDataType* mutable_failbilllist(int index);
  ::monitor::protobuf::BillUpLoadFailDataType* add_failbilllist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >*
      mutable_failbilllist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >&
      failbilllist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 3;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // .monitor.protobuf.SendReason Reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // .monitor.protobuf.BoolEnum Confirm = 5;
  void clear_confirm();
  static const int kConfirmFieldNumber = 5;
  ::monitor::protobuf::BoolEnum confirm() const;
  void set_confirm(::monitor::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.BillUploadFailAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType > failbilllist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  ::google::protobuf::int32 devindex_;
  int reason_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DCModularReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.DCModularReq) */ {
 public:
  DCModularReq();
  virtual ~DCModularReq();

  DCModularReq(const DCModularReq& from);

  inline DCModularReq& operator=(const DCModularReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DCModularReq(DCModularReq&& from) noexcept
    : DCModularReq() {
    *this = ::std::move(from);
  }

  inline DCModularReq& operator=(DCModularReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DCModularReq& default_instance();

  static inline const DCModularReq* internal_default_instance() {
    return reinterpret_cast<const DCModularReq*>(
               &_DCModularReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DCModularReq* other);
  friend void swap(DCModularReq& a, DCModularReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DCModularReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DCModularReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DCModularReq& from);
  void MergeFrom(const DCModularReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DCModularReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.DCModularReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DCModularDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.DCModularDataNotifyReq) */ {
 public:
  DCModularDataNotifyReq();
  virtual ~DCModularDataNotifyReq();

  DCModularDataNotifyReq(const DCModularDataNotifyReq& from);

  inline DCModularDataNotifyReq& operator=(const DCModularDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DCModularDataNotifyReq(DCModularDataNotifyReq&& from) noexcept
    : DCModularDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline DCModularDataNotifyReq& operator=(DCModularDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DCModularDataNotifyReq& default_instance();

  static inline const DCModularDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const DCModularDataNotifyReq*>(
               &_DCModularDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DCModularDataNotifyReq* other);
  friend void swap(DCModularDataNotifyReq& a, DCModularDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DCModularDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DCModularDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DCModularDataNotifyReq& from);
  void MergeFrom(const DCModularDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DCModularDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.DCModularDataType DataList = 2;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 2;
  const ::monitor::protobuf::DCModularDataType& datalist(int index) const;
  ::monitor::protobuf::DCModularDataType* mutable_datalist(int index);
  ::monitor::protobuf::DCModularDataType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCModularDataType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCModularDataType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.DCModularDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCModularDataType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DCModularDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.DCModularDataType) */ {
 public:
  DCModularDataType();
  virtual ~DCModularDataType();

  DCModularDataType(const DCModularDataType& from);

  inline DCModularDataType& operator=(const DCModularDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DCModularDataType(DCModularDataType&& from) noexcept
    : DCModularDataType() {
    *this = ::std::move(from);
  }

  inline DCModularDataType& operator=(DCModularDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DCModularDataType& default_instance();

  static inline const DCModularDataType* internal_default_instance() {
    return reinterpret_cast<const DCModularDataType*>(
               &_DCModularDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(DCModularDataType* other);
  friend void swap(DCModularDataType& a, DCModularDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DCModularDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  DCModularDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DCModularDataType& from);
  void MergeFrom(const DCModularDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DCModularDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SN = 2;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string SoftV1 = 18;
  void clear_softv1();
  static const int kSoftV1FieldNumber = 18;
  const ::std::string& softv1() const;
  void set_softv1(const ::std::string& value);
  #if LANG_CXX11
  void set_softv1(::std::string&& value);
  #endif
  void set_softv1(const char* value);
  void set_softv1(const char* value, size_t size);
  ::std::string* mutable_softv1();
  ::std::string* release_softv1();
  void set_allocated_softv1(::std::string* softv1);

  // string SoftV2 = 19;
  void clear_softv2();
  static const int kSoftV2FieldNumber = 19;
  const ::std::string& softv2() const;
  void set_softv2(const ::std::string& value);
  #if LANG_CXX11
  void set_softv2(::std::string&& value);
  #endif
  void set_softv2(const char* value);
  void set_softv2(const char* value, size_t size);
  ::std::string* mutable_softv2();
  ::std::string* release_softv2();
  void set_allocated_softv2(::std::string* softv2);

  // string SoftV3 = 20;
  void clear_softv3();
  static const int kSoftV3FieldNumber = 20;
  const ::std::string& softv3() const;
  void set_softv3(const ::std::string& value);
  #if LANG_CXX11
  void set_softv3(::std::string&& value);
  #endif
  void set_softv3(const char* value);
  void set_softv3(const char* value, size_t size);
  ::std::string* mutable_softv3();
  ::std::string* release_softv3();
  void set_allocated_softv3(::std::string* softv3);

  // string HardV = 21;
  void clear_hardv();
  static const int kHardVFieldNumber = 21;
  const ::std::string& hardv() const;
  void set_hardv(const ::std::string& value);
  #if LANG_CXX11
  void set_hardv(::std::string&& value);
  #endif
  void set_hardv(const char* value);
  void set_hardv(const char* value, size_t size);
  ::std::string* mutable_hardv();
  ::std::string* release_hardv();
  void set_allocated_hardv(::std::string* hardv);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 RunState = 3;
  void clear_runstate();
  static const int kRunStateFieldNumber = 3;
  ::google::protobuf::int32 runstate() const;
  void set_runstate(::google::protobuf::int32 value);

  // double InVa = 5;
  void clear_inva();
  static const int kInVaFieldNumber = 5;
  double inva() const;
  void set_inva(double value);

  // double InVb = 6;
  void clear_invb();
  static const int kInVbFieldNumber = 6;
  double invb() const;
  void set_invb(double value);

  // double InVc = 7;
  void clear_invc();
  static const int kInVcFieldNumber = 7;
  double invc() const;
  void set_invc(double value);

  // int32 Group = 4;
  void clear_group();
  static const int kGroupFieldNumber = 4;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // sint32 EnvT = 11;
  void clear_envt();
  static const int kEnvTFieldNumber = 11;
  ::google::protobuf::int32 envt() const;
  void set_envt(::google::protobuf::int32 value);

  // double InI = 8;
  void clear_ini();
  static const int kInIFieldNumber = 8;
  double ini() const;
  void set_ini(double value);

  // double OutV = 9;
  void clear_outv();
  static const int kOutVFieldNumber = 9;
  double outv() const;
  void set_outv(double value);

  // double OutI = 10;
  void clear_outi();
  static const int kOutIFieldNumber = 10;
  double outi() const;
  void set_outi(double value);

  // sint32 M1T = 12;
  void clear_m1t();
  static const int kM1TFieldNumber = 12;
  ::google::protobuf::int32 m1t() const;
  void set_m1t(::google::protobuf::int32 value);

  // int32 RunTime = 13;
  void clear_runtime();
  static const int kRunTimeFieldNumber = 13;
  ::google::protobuf::int32 runtime() const;
  void set_runtime(::google::protobuf::int32 value);

  // int32 SwitchCount = 14;
  void clear_switchcount();
  static const int kSwitchCountFieldNumber = 14;
  ::google::protobuf::int32 switchcount() const;
  void set_switchcount(::google::protobuf::int32 value);

  // int32 AlarmCode = 15;
  void clear_alarmcode();
  static const int kAlarmCodeFieldNumber = 15;
  ::google::protobuf::int32 alarmcode() const;
  void set_alarmcode(::google::protobuf::int32 value);

  // sint32 SinglePlateT3 = 16;
  void clear_singleplatet3();
  static const int kSinglePlateT3FieldNumber = 16;
  ::google::protobuf::int32 singleplatet3() const;
  void set_singleplatet3(::google::protobuf::int32 value);

  // int32 FrameNo = 17;
  void clear_frameno();
  static const int kFrameNoFieldNumber = 17;
  ::google::protobuf::int32 frameno() const;
  void set_frameno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.DCModularDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr softv1_;
  ::google::protobuf::internal::ArenaStringPtr softv2_;
  ::google::protobuf::internal::ArenaStringPtr softv3_;
  ::google::protobuf::internal::ArenaStringPtr hardv_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 runstate_;
  double inva_;
  double invb_;
  double invc_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 envt_;
  double ini_;
  double outv_;
  double outi_;
  ::google::protobuf::int32 m1t_;
  ::google::protobuf::int32 runtime_;
  ::google::protobuf::int32 switchcount_;
  ::google::protobuf::int32 alarmcode_;
  ::google::protobuf::int32 singleplatet3_;
  ::google::protobuf::int32 frameno_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ACModularReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.ACModularReq) */ {
 public:
  ACModularReq();
  virtual ~ACModularReq();

  ACModularReq(const ACModularReq& from);

  inline ACModularReq& operator=(const ACModularReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ACModularReq(ACModularReq&& from) noexcept
    : ACModularReq() {
    *this = ::std::move(from);
  }

  inline ACModularReq& operator=(ACModularReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ACModularReq& default_instance();

  static inline const ACModularReq* internal_default_instance() {
    return reinterpret_cast<const ACModularReq*>(
               &_ACModularReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ACModularReq* other);
  friend void swap(ACModularReq& a, ACModularReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ACModularReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ACModularReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ACModularReq& from);
  void MergeFrom(const ACModularReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ACModularReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.ACModularReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ACModularDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.ACModularDataNotifyReq) */ {
 public:
  ACModularDataNotifyReq();
  virtual ~ACModularDataNotifyReq();

  ACModularDataNotifyReq(const ACModularDataNotifyReq& from);

  inline ACModularDataNotifyReq& operator=(const ACModularDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ACModularDataNotifyReq(ACModularDataNotifyReq&& from) noexcept
    : ACModularDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline ACModularDataNotifyReq& operator=(ACModularDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ACModularDataNotifyReq& default_instance();

  static inline const ACModularDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const ACModularDataNotifyReq*>(
               &_ACModularDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ACModularDataNotifyReq* other);
  friend void swap(ACModularDataNotifyReq& a, ACModularDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ACModularDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ACModularDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ACModularDataNotifyReq& from);
  void MergeFrom(const ACModularDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ACModularDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.ACModularDataType DataList = 2;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 2;
  const ::monitor::protobuf::ACModularDataType& datalist(int index) const;
  ::monitor::protobuf::ACModularDataType* mutable_datalist(int index);
  ::monitor::protobuf::ACModularDataType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::ACModularDataType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::ACModularDataType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.ACModularDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::ACModularDataType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ACModularDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.ACModularDataType) */ {
 public:
  ACModularDataType();
  virtual ~ACModularDataType();

  ACModularDataType(const ACModularDataType& from);

  inline ACModularDataType& operator=(const ACModularDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ACModularDataType(ACModularDataType&& from) noexcept
    : ACModularDataType() {
    *this = ::std::move(from);
  }

  inline ACModularDataType& operator=(ACModularDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ACModularDataType& default_instance();

  static inline const ACModularDataType* internal_default_instance() {
    return reinterpret_cast<const ACModularDataType*>(
               &_ACModularDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ACModularDataType* other);
  friend void swap(ACModularDataType& a, ACModularDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ACModularDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  ACModularDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ACModularDataType& from);
  void MergeFrom(const ACModularDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ACModularDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SN = 2;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string SoftV1 = 24;
  void clear_softv1();
  static const int kSoftV1FieldNumber = 24;
  const ::std::string& softv1() const;
  void set_softv1(const ::std::string& value);
  #if LANG_CXX11
  void set_softv1(::std::string&& value);
  #endif
  void set_softv1(const char* value);
  void set_softv1(const char* value, size_t size);
  ::std::string* mutable_softv1();
  ::std::string* release_softv1();
  void set_allocated_softv1(::std::string* softv1);

  // string SoftV2 = 25;
  void clear_softv2();
  static const int kSoftV2FieldNumber = 25;
  const ::std::string& softv2() const;
  void set_softv2(const ::std::string& value);
  #if LANG_CXX11
  void set_softv2(::std::string&& value);
  #endif
  void set_softv2(const char* value);
  void set_softv2(const char* value, size_t size);
  ::std::string* mutable_softv2();
  ::std::string* release_softv2();
  void set_allocated_softv2(::std::string* softv2);

  // string SoftV3 = 26;
  void clear_softv3();
  static const int kSoftV3FieldNumber = 26;
  const ::std::string& softv3() const;
  void set_softv3(const ::std::string& value);
  #if LANG_CXX11
  void set_softv3(::std::string&& value);
  #endif
  void set_softv3(const char* value);
  void set_softv3(const char* value, size_t size);
  ::std::string* mutable_softv3();
  ::std::string* release_softv3();
  void set_allocated_softv3(::std::string* softv3);

  // string HardV = 27;
  void clear_hardv();
  static const int kHardVFieldNumber = 27;
  const ::std::string& hardv() const;
  void set_hardv(const ::std::string& value);
  #if LANG_CXX11
  void set_hardv(::std::string&& value);
  #endif
  void set_hardv(const char* value);
  void set_hardv(const char* value, size_t size);
  ::std::string* mutable_hardv();
  ::std::string* release_hardv();
  void set_allocated_hardv(::std::string* hardv);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 AlarmCode = 3;
  void clear_alarmcode();
  static const int kAlarmCodeFieldNumber = 3;
  ::google::protobuf::int32 alarmcode() const;
  void set_alarmcode(::google::protobuf::int32 value);

  // double InV = 5;
  void clear_inv();
  static const int kInVFieldNumber = 5;
  double inv() const;
  void set_inv(double value);

  // double InI = 6;
  void clear_ini();
  static const int kInIFieldNumber = 6;
  double ini() const;
  void set_ini(double value);

  // double OutV = 7;
  void clear_outv();
  static const int kOutVFieldNumber = 7;
  double outv() const;
  void set_outv(double value);

  // int32 RunState = 4;
  void clear_runstate();
  static const int kRunStateFieldNumber = 4;
  ::google::protobuf::int32 runstate() const;
  void set_runstate(::google::protobuf::int32 value);

  // sint32 InT = 10;
  void clear_int_();
  static const int kInTFieldNumber = 10;
  ::google::protobuf::int32 int_() const;
  void set_int_(::google::protobuf::int32 value);

  // double OutI = 8;
  void clear_outi();
  static const int kOutIFieldNumber = 8;
  double outi() const;
  void set_outi(double value);

  // double EnvT = 9;
  void clear_envt();
  static const int kEnvTFieldNumber = 9;
  double envt() const;
  void set_envt(double value);

  // sint32 GunT = 11;
  void clear_gunt();
  static const int kGunTFieldNumber = 11;
  ::google::protobuf::int32 gunt() const;
  void set_gunt(::google::protobuf::int32 value);

  // int32 RunTime = 12;
  void clear_runtime();
  static const int kRunTimeFieldNumber = 12;
  ::google::protobuf::int32 runtime() const;
  void set_runtime(::google::protobuf::int32 value);

  // double ACRatedOutP = 14;
  void clear_acratedoutp();
  static const int kACRatedOutPFieldNumber = 14;
  double acratedoutp() const;
  void set_acratedoutp(double value);

  // double OutP = 15;
  void clear_outp();
  static const int kOutPFieldNumber = 15;
  double outp() const;
  void set_outp(double value);

  // double OutQ = 16;
  void clear_outq();
  static const int kOutQFieldNumber = 16;
  double outq() const;
  void set_outq(double value);

  // double S = 17;
  void clear_s();
  static const int kSFieldNumber = 17;
  double s() const;
  void set_s(double value);

  // int32 SwitchCount = 13;
  void clear_switchcount();
  static const int kSwitchCountFieldNumber = 13;
  ::google::protobuf::int32 switchcount() const;
  void set_switchcount(::google::protobuf::int32 value);

  // int32 Relay = 21;
  void clear_relay();
  static const int kRelayFieldNumber = 21;
  ::google::protobuf::int32 relay() const;
  void set_relay(::google::protobuf::int32 value);

  // double CPF = 18;
  void clear_cpf();
  static const int kCPFFieldNumber = 18;
  double cpf() const;
  void set_cpf(double value);

  // double CF = 19;
  void clear_cf();
  static const int kCFFieldNumber = 19;
  double cf() const;
  void set_cf(double value);

  // double KWH = 20;
  void clear_kwh();
  static const int kKWHFieldNumber = 20;
  double kwh() const;
  void set_kwh(double value);

  // int32 Connect = 22;
  void clear_connect();
  static const int kConnectFieldNumber = 22;
  ::google::protobuf::int32 connect() const;
  void set_connect(::google::protobuf::int32 value);

  // int32 FrameNo = 23;
  void clear_frameno();
  static const int kFrameNoFieldNumber = 23;
  ::google::protobuf::int32 frameno() const;
  void set_frameno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.ACModularDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr softv1_;
  ::google::protobuf::internal::ArenaStringPtr softv2_;
  ::google::protobuf::internal::ArenaStringPtr softv3_;
  ::google::protobuf::internal::ArenaStringPtr hardv_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 alarmcode_;
  double inv_;
  double ini_;
  double outv_;
  ::google::protobuf::int32 runstate_;
  ::google::protobuf::int32 int__;
  double outi_;
  double envt_;
  ::google::protobuf::int32 gunt_;
  ::google::protobuf::int32 runtime_;
  double acratedoutp_;
  double outp_;
  double outq_;
  double s_;
  ::google::protobuf::int32 switchcount_;
  ::google::protobuf::int32 relay_;
  double cpf_;
  double cf_;
  double kwh_;
  ::google::protobuf::int32 connect_;
  ::google::protobuf::int32 frameno_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PduReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.PduReq) */ {
 public:
  PduReq();
  virtual ~PduReq();

  PduReq(const PduReq& from);

  inline PduReq& operator=(const PduReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PduReq(PduReq&& from) noexcept
    : PduReq() {
    *this = ::std::move(from);
  }

  inline PduReq& operator=(PduReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PduReq& default_instance();

  static inline const PduReq* internal_default_instance() {
    return reinterpret_cast<const PduReq*>(
               &_PduReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PduReq* other);
  friend void swap(PduReq& a, PduReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PduReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PduReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PduReq& from);
  void MergeFrom(const PduReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PduReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.PduReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PduDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.PduDataNotifyReq) */ {
 public:
  PduDataNotifyReq();
  virtual ~PduDataNotifyReq();

  PduDataNotifyReq(const PduDataNotifyReq& from);

  inline PduDataNotifyReq& operator=(const PduDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PduDataNotifyReq(PduDataNotifyReq&& from) noexcept
    : PduDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline PduDataNotifyReq& operator=(PduDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PduDataNotifyReq& default_instance();

  static inline const PduDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const PduDataNotifyReq*>(
               &_PduDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PduDataNotifyReq* other);
  friend void swap(PduDataNotifyReq& a, PduDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PduDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PduDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PduDataNotifyReq& from);
  void MergeFrom(const PduDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PduDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.PduDataType DataList = 2;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 2;
  const ::monitor::protobuf::PduDataType& datalist(int index) const;
  ::monitor::protobuf::PduDataType* mutable_datalist(int index);
  ::monitor::protobuf::PduDataType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::PduDataType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::PduDataType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.PduDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::PduDataType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PduDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.PduDataType) */ {
 public:
  PduDataType();
  virtual ~PduDataType();

  PduDataType(const PduDataType& from);

  inline PduDataType& operator=(const PduDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PduDataType(PduDataType&& from) noexcept
    : PduDataType() {
    *this = ::std::move(from);
  }

  inline PduDataType& operator=(PduDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PduDataType& default_instance();

  static inline const PduDataType* internal_default_instance() {
    return reinterpret_cast<const PduDataType*>(
               &_PduDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PduDataType* other);
  friend void swap(PduDataType& a, PduDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PduDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  PduDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PduDataType& from);
  void MergeFrom(const PduDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PduDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SN = 2;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string SoftV1 = 15;
  void clear_softv1();
  static const int kSoftV1FieldNumber = 15;
  const ::std::string& softv1() const;
  void set_softv1(const ::std::string& value);
  #if LANG_CXX11
  void set_softv1(::std::string&& value);
  #endif
  void set_softv1(const char* value);
  void set_softv1(const char* value, size_t size);
  ::std::string* mutable_softv1();
  ::std::string* release_softv1();
  void set_allocated_softv1(::std::string* softv1);

  // string SoftV2 = 16;
  void clear_softv2();
  static const int kSoftV2FieldNumber = 16;
  const ::std::string& softv2() const;
  void set_softv2(const ::std::string& value);
  #if LANG_CXX11
  void set_softv2(::std::string&& value);
  #endif
  void set_softv2(const char* value);
  void set_softv2(const char* value, size_t size);
  ::std::string* mutable_softv2();
  ::std::string* release_softv2();
  void set_allocated_softv2(::std::string* softv2);

  // string SoftV3 = 17;
  void clear_softv3();
  static const int kSoftV3FieldNumber = 17;
  const ::std::string& softv3() const;
  void set_softv3(const ::std::string& value);
  #if LANG_CXX11
  void set_softv3(::std::string&& value);
  #endif
  void set_softv3(const char* value);
  void set_softv3(const char* value, size_t size);
  ::std::string* mutable_softv3();
  ::std::string* release_softv3();
  void set_allocated_softv3(::std::string* softv3);

  // string HardV = 18;
  void clear_hardv();
  static const int kHardVFieldNumber = 18;
  const ::std::string& hardv() const;
  void set_hardv(const ::std::string& value);
  #if LANG_CXX11
  void set_hardv(::std::string&& value);
  #endif
  void set_hardv(const char* value);
  void set_hardv(const char* value, size_t size);
  ::std::string* mutable_hardv();
  ::std::string* release_hardv();
  void set_allocated_hardv(::std::string* hardv);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 RunState = 3;
  void clear_runstate();
  static const int kRunStateFieldNumber = 3;
  ::google::protobuf::int32 runstate() const;
  void set_runstate(::google::protobuf::int32 value);

  // double OutV = 4;
  void clear_outv();
  static const int kOutVFieldNumber = 4;
  double outv() const;
  void set_outv(double value);

  // double OutI = 5;
  void clear_outi();
  static const int kOutIFieldNumber = 5;
  double outi() const;
  void set_outi(double value);

  // sint32 EnvT = 6;
  void clear_envt();
  static const int kEnvTFieldNumber = 6;
  ::google::protobuf::int32 envt() const;
  void set_envt(::google::protobuf::int32 value);

  // sint32 RadT = 7;
  void clear_radt();
  static const int kRadTFieldNumber = 7;
  ::google::protobuf::int32 radt() const;
  void set_radt(::google::protobuf::int32 value);

  // int32 RunTime = 8;
  void clear_runtime();
  static const int kRunTimeFieldNumber = 8;
  ::google::protobuf::int32 runtime() const;
  void set_runtime(::google::protobuf::int32 value);

  // int32 SwitchCount = 9;
  void clear_switchcount();
  static const int kSwitchCountFieldNumber = 9;
  ::google::protobuf::int32 switchcount() const;
  void set_switchcount(::google::protobuf::int32 value);

  // double KWH = 10;
  void clear_kwh();
  static const int kKWHFieldNumber = 10;
  double kwh() const;
  void set_kwh(double value);

  // int32 NegR = 11;
  void clear_negr();
  static const int kNegRFieldNumber = 11;
  ::google::protobuf::int32 negr() const;
  void set_negr(::google::protobuf::int32 value);

  // int32 PosR = 12;
  void clear_posr();
  static const int kPosRFieldNumber = 12;
  ::google::protobuf::int32 posr() const;
  void set_posr(::google::protobuf::int32 value);

  // int32 AlarmCode = 13;
  void clear_alarmcode();
  static const int kAlarmCodeFieldNumber = 13;
  ::google::protobuf::int32 alarmcode() const;
  void set_alarmcode(::google::protobuf::int32 value);

  // int32 FrameNo = 14;
  void clear_frameno();
  static const int kFrameNoFieldNumber = 14;
  ::google::protobuf::int32 frameno() const;
  void set_frameno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.PduDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr softv1_;
  ::google::protobuf::internal::ArenaStringPtr softv2_;
  ::google::protobuf::internal::ArenaStringPtr softv3_;
  ::google::protobuf::internal::ArenaStringPtr hardv_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 runstate_;
  double outv_;
  double outi_;
  ::google::protobuf::int32 envt_;
  ::google::protobuf::int32 radt_;
  ::google::protobuf::int32 runtime_;
  ::google::protobuf::int32 switchcount_;
  double kwh_;
  ::google::protobuf::int32 negr_;
  ::google::protobuf::int32 posr_;
  ::google::protobuf::int32 alarmcode_;
  ::google::protobuf::int32 frameno_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CcuReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.CcuReq) */ {
 public:
  CcuReq();
  virtual ~CcuReq();

  CcuReq(const CcuReq& from);

  inline CcuReq& operator=(const CcuReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CcuReq(CcuReq&& from) noexcept
    : CcuReq() {
    *this = ::std::move(from);
  }

  inline CcuReq& operator=(CcuReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CcuReq& default_instance();

  static inline const CcuReq* internal_default_instance() {
    return reinterpret_cast<const CcuReq*>(
               &_CcuReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CcuReq* other);
  friend void swap(CcuReq& a, CcuReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CcuReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CcuReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CcuReq& from);
  void MergeFrom(const CcuReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CcuReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.CcuReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CcuDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.CcuDataNotifyReq) */ {
 public:
  CcuDataNotifyReq();
  virtual ~CcuDataNotifyReq();

  CcuDataNotifyReq(const CcuDataNotifyReq& from);

  inline CcuDataNotifyReq& operator=(const CcuDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CcuDataNotifyReq(CcuDataNotifyReq&& from) noexcept
    : CcuDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline CcuDataNotifyReq& operator=(CcuDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CcuDataNotifyReq& default_instance();

  static inline const CcuDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const CcuDataNotifyReq*>(
               &_CcuDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CcuDataNotifyReq* other);
  friend void swap(CcuDataNotifyReq& a, CcuDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CcuDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CcuDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CcuDataNotifyReq& from);
  void MergeFrom(const CcuDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CcuDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.CcuDataType DataList = 2;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 2;
  const ::monitor::protobuf::CcuDataType& datalist(int index) const;
  ::monitor::protobuf::CcuDataType* mutable_datalist(int index);
  ::monitor::protobuf::CcuDataType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::CcuDataType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::CcuDataType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.CcuDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::CcuDataType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CcuDataType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.CcuDataType) */ {
 public:
  CcuDataType();
  virtual ~CcuDataType();

  CcuDataType(const CcuDataType& from);

  inline CcuDataType& operator=(const CcuDataType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CcuDataType(CcuDataType&& from) noexcept
    : CcuDataType() {
    *this = ::std::move(from);
  }

  inline CcuDataType& operator=(CcuDataType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CcuDataType& default_instance();

  static inline const CcuDataType* internal_default_instance() {
    return reinterpret_cast<const CcuDataType*>(
               &_CcuDataType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CcuDataType* other);
  friend void swap(CcuDataType& a, CcuDataType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CcuDataType* New() const PROTOBUF_FINAL { return New(NULL); }

  CcuDataType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CcuDataType& from);
  void MergeFrom(const CcuDataType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CcuDataType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SoftV1 = 12;
  void clear_softv1();
  static const int kSoftV1FieldNumber = 12;
  const ::std::string& softv1() const;
  void set_softv1(const ::std::string& value);
  #if LANG_CXX11
  void set_softv1(::std::string&& value);
  #endif
  void set_softv1(const char* value);
  void set_softv1(const char* value, size_t size);
  ::std::string* mutable_softv1();
  ::std::string* release_softv1();
  void set_allocated_softv1(::std::string* softv1);

  // string SoftV2 = 13;
  void clear_softv2();
  static const int kSoftV2FieldNumber = 13;
  const ::std::string& softv2() const;
  void set_softv2(const ::std::string& value);
  #if LANG_CXX11
  void set_softv2(::std::string&& value);
  #endif
  void set_softv2(const char* value);
  void set_softv2(const char* value, size_t size);
  ::std::string* mutable_softv2();
  ::std::string* release_softv2();
  void set_allocated_softv2(::std::string* softv2);

  // string SoftV3 = 14;
  void clear_softv3();
  static const int kSoftV3FieldNumber = 14;
  const ::std::string& softv3() const;
  void set_softv3(const ::std::string& value);
  #if LANG_CXX11
  void set_softv3(::std::string&& value);
  #endif
  void set_softv3(const char* value);
  void set_softv3(const char* value, size_t size);
  ::std::string* mutable_softv3();
  ::std::string* release_softv3();
  void set_allocated_softv3(::std::string* softv3);

  // string HardV = 15;
  void clear_hardv();
  static const int kHardVFieldNumber = 15;
  const ::std::string& hardv() const;
  void set_hardv(const ::std::string& value);
  #if LANG_CXX11
  void set_hardv(::std::string&& value);
  #endif
  void set_hardv(const char* value);
  void set_hardv(const char* value, size_t size);
  ::std::string* mutable_hardv();
  ::std::string* release_hardv();
  void set_allocated_hardv(::std::string* hardv);

  // string SN = 16;
  void clear_sn();
  static const int kSNFieldNumber = 16;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  #if LANG_CXX11
  void set_sn(::std::string&& value);
  #endif
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 RunState = 2;
  void clear_runstate();
  static const int kRunStateFieldNumber = 2;
  ::google::protobuf::int32 runstate() const;
  void set_runstate(::google::protobuf::int32 value);

  // int32 InConStatus = 3;
  void clear_inconstatus();
  static const int kInConStatusFieldNumber = 3;
  ::google::protobuf::int32 inconstatus() const;
  void set_inconstatus(::google::protobuf::int32 value);

  // int32 LinkConStatus = 4;
  void clear_linkconstatus();
  static const int kLinkConStatusFieldNumber = 4;
  ::google::protobuf::int32 linkconstatus() const;
  void set_linkconstatus(::google::protobuf::int32 value);

  // int32 SystemType = 5;
  void clear_systemtype();
  static const int kSystemTypeFieldNumber = 5;
  ::google::protobuf::int32 systemtype() const;
  void set_systemtype(::google::protobuf::int32 value);

  // int32 RunTime = 6;
  void clear_runtime();
  static const int kRunTimeFieldNumber = 6;
  ::google::protobuf::int32 runtime() const;
  void set_runtime(::google::protobuf::int32 value);

  // double DcCabRateP = 8;
  void clear_dccabratep();
  static const int kDcCabRatePFieldNumber = 8;
  double dccabratep() const;
  void set_dccabratep(double value);

  // sint32 EnvT = 7;
  void clear_envt();
  static const int kEnvTFieldNumber = 7;
  ::google::protobuf::int32 envt() const;
  void set_envt(::google::protobuf::int32 value);

  // int32 AlarmCode = 10;
  void clear_alarmcode();
  static const int kAlarmCodeFieldNumber = 10;
  ::google::protobuf::int32 alarmcode() const;
  void set_alarmcode(::google::protobuf::int32 value);

  // double DcCabCurP = 9;
  void clear_dccabcurp();
  static const int kDcCabCurPFieldNumber = 9;
  double dccabcurp() const;
  void set_dccabcurp(double value);

  // int32 FrameNo = 11;
  void clear_frameno();
  static const int kFrameNoFieldNumber = 11;
  ::google::protobuf::int32 frameno() const;
  void set_frameno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.CcuDataType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr softv1_;
  ::google::protobuf::internal::ArenaStringPtr softv2_;
  ::google::protobuf::internal::ArenaStringPtr softv3_;
  ::google::protobuf::internal::ArenaStringPtr hardv_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 runstate_;
  ::google::protobuf::int32 inconstatus_;
  ::google::protobuf::int32 linkconstatus_;
  ::google::protobuf::int32 systemtype_;
  ::google::protobuf::int32 runtime_;
  double dccabratep_;
  ::google::protobuf::int32 envt_;
  ::google::protobuf::int32 alarmcode_;
  double dccabcurp_;
  ::google::protobuf::int32 frameno_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ControlboxDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.ControlboxDataReq) */ {
 public:
  ControlboxDataReq();
  virtual ~ControlboxDataReq();

  ControlboxDataReq(const ControlboxDataReq& from);

  inline ControlboxDataReq& operator=(const ControlboxDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ControlboxDataReq(ControlboxDataReq&& from) noexcept
    : ControlboxDataReq() {
    *this = ::std::move(from);
  }

  inline ControlboxDataReq& operator=(ControlboxDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlboxDataReq& default_instance();

  static inline const ControlboxDataReq* internal_default_instance() {
    return reinterpret_cast<const ControlboxDataReq*>(
               &_ControlboxDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ControlboxDataReq* other);
  friend void swap(ControlboxDataReq& a, ControlboxDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ControlboxDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ControlboxDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControlboxDataReq& from);
  void MergeFrom(const ControlboxDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControlboxDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.ControlboxDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ControlboxDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.ControlboxDataNotifyReq) */ {
 public:
  ControlboxDataNotifyReq();
  virtual ~ControlboxDataNotifyReq();

  ControlboxDataNotifyReq(const ControlboxDataNotifyReq& from);

  inline ControlboxDataNotifyReq& operator=(const ControlboxDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ControlboxDataNotifyReq(ControlboxDataNotifyReq&& from) noexcept
    : ControlboxDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline ControlboxDataNotifyReq& operator=(ControlboxDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlboxDataNotifyReq& default_instance();

  static inline const ControlboxDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const ControlboxDataNotifyReq*>(
               &_ControlboxDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ControlboxDataNotifyReq* other);
  friend void swap(ControlboxDataNotifyReq& a, ControlboxDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ControlboxDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ControlboxDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControlboxDataNotifyReq& from);
  void MergeFrom(const ControlboxDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControlboxDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.SlotType slot = 9;
  int slot_size() const;
  void clear_slot();
  static const int kSlotFieldNumber = 9;
  const ::monitor::protobuf::SlotType& slot(int index) const;
  ::monitor::protobuf::SlotType* mutable_slot(int index);
  ::monitor::protobuf::SlotType* add_slot();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >*
      mutable_slot();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >&
      slot() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 1;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 1;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // .monitor.protobuf.BoxType BoxData = 2;
  bool has_boxdata() const;
  void clear_boxdata();
  static const int kBoxDataFieldNumber = 2;
  const ::monitor::protobuf::BoxType& boxdata() const;
  ::monitor::protobuf::BoxType* mutable_boxdata();
  ::monitor::protobuf::BoxType* release_boxdata();
  void set_allocated_boxdata(::monitor::protobuf::BoxType* boxdata);

  // .monitor.protobuf.MeterType meter = 4;
  bool has_meter() const;
  void clear_meter();
  static const int kMeterFieldNumber = 4;
  const ::monitor::protobuf::MeterType& meter() const;
  ::monitor::protobuf::MeterType* mutable_meter();
  ::monitor::protobuf::MeterType* release_meter();
  void set_allocated_meter(::monitor::protobuf::MeterType* meter);

  // .monitor.protobuf.SignalType BrkValue = 3;
  void clear_brkvalue();
  static const int kBrkValueFieldNumber = 3;
  ::monitor::protobuf::SignalType brkvalue() const;
  void set_brkvalue(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.AlarmStateEnumType MeterFault = 5;
  void clear_meterfault();
  static const int kMeterFaultFieldNumber = 5;
  ::monitor::protobuf::AlarmStateEnumType meterfault() const;
  void set_meterfault(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType SurgeProSignal = 6;
  void clear_surgeprosignal();
  static const int kSurgeProSignalFieldNumber = 6;
  ::monitor::protobuf::AlarmStateEnumType surgeprosignal() const;
  void set_surgeprosignal(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType AuxType = 7;
  void clear_auxtype();
  static const int kAuxTypeFieldNumber = 7;
  ::monitor::protobuf::AlarmStateEnumType auxtype() const;
  void set_auxtype(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.SignalType MicroBrk = 8;
  void clear_microbrk();
  static const int kMicroBrkFieldNumber = 8;
  ::monitor::protobuf::SignalType microbrk() const;
  void set_microbrk(::monitor::protobuf::SignalType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.ControlboxDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType > slot_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  ::monitor::protobuf::BoxType* boxdata_;
  ::monitor::protobuf::MeterType* meter_;
  int brkvalue_;
  int meterfault_;
  int surgeprosignal_;
  int auxtype_;
  int microbrk_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoxType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.BoxType) */ {
 public:
  BoxType();
  virtual ~BoxType();

  BoxType(const BoxType& from);

  inline BoxType& operator=(const BoxType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoxType(BoxType&& from) noexcept
    : BoxType() {
    *this = ::std::move(from);
  }

  inline BoxType& operator=(BoxType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoxType& default_instance();

  static inline const BoxType* internal_default_instance() {
    return reinterpret_cast<const BoxType*>(
               &_BoxType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(BoxType* other);
  friend void swap(BoxType& a, BoxType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoxType* New() const PROTOBUF_FINAL { return New(NULL); }

  BoxType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BoxType& from);
  void MergeFrom(const BoxType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BoxType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.SignalType DoorSignal = 1;
  void clear_doorsignal();
  static const int kDoorSignalFieldNumber = 1;
  ::monitor::protobuf::SignalType doorsignal() const;
  void set_doorsignal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.SignalType SmokeSignal = 2;
  void clear_smokesignal();
  static const int kSmokeSignalFieldNumber = 2;
  ::monitor::protobuf::SignalType smokesignal() const;
  void set_smokesignal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.AlarmStateEnumType WaterSignal = 3;
  void clear_watersignal();
  static const int kWaterSignalFieldNumber = 3;
  ::monitor::protobuf::AlarmStateEnumType watersignal() const;
  void set_watersignal(::monitor::protobuf::AlarmStateEnumType value);

  // sint32 T = 4;
  void clear_t();
  static const int kTFieldNumber = 4;
  ::google::protobuf::int32 t() const;
  void set_t(::google::protobuf::int32 value);

  // int32 HUM = 5;
  void clear_hum();
  static const int kHUMFieldNumber = 5;
  ::google::protobuf::int32 hum() const;
  void set_hum(::google::protobuf::int32 value);

  // .monitor.protobuf.AlarmStateEnumType ION = 6;
  void clear_ion();
  static const int kIONFieldNumber = 6;
  ::monitor::protobuf::AlarmStateEnumType ion() const;
  void set_ion(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType Stop = 7;
  void clear_stop();
  static const int kStopFieldNumber = 7;
  ::monitor::protobuf::AlarmStateEnumType stop() const;
  void set_stop(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType FanFault = 8;
  void clear_fanfault();
  static const int kFanFaultFieldNumber = 8;
  ::monitor::protobuf::AlarmStateEnumType fanfault() const;
  void set_fanfault(::monitor::protobuf::AlarmStateEnumType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.BoxType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int doorsignal_;
  int smokesignal_;
  int watersignal_;
  ::google::protobuf::int32 t_;
  ::google::protobuf::int32 hum_;
  int ion_;
  int stop_;
  int fanfault_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeterType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MeterType) */ {
 public:
  MeterType();
  virtual ~MeterType();

  MeterType(const MeterType& from);

  inline MeterType& operator=(const MeterType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeterType(MeterType&& from) noexcept
    : MeterType() {
    *this = ::std::move(from);
  }

  inline MeterType& operator=(MeterType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterType& default_instance();

  static inline const MeterType* internal_default_instance() {
    return reinterpret_cast<const MeterType*>(
               &_MeterType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(MeterType* other);
  friend void swap(MeterType& a, MeterType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeterType* New() const PROTOBUF_FINAL { return New(NULL); }

  MeterType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeterType& from);
  void MergeFrom(const MeterType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeterType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double Va = 1;
  void clear_va();
  static const int kVaFieldNumber = 1;
  double va() const;
  void set_va(double value);

  // double Vb = 2;
  void clear_vb();
  static const int kVbFieldNumber = 2;
  double vb() const;
  void set_vb(double value);

  // double Vc = 3;
  void clear_vc();
  static const int kVcFieldNumber = 3;
  double vc() const;
  void set_vc(double value);

  // double Vdc = 4;
  void clear_vdc();
  static const int kVdcFieldNumber = 4;
  double vdc() const;
  void set_vdc(double value);

  // double Ia = 5;
  void clear_ia();
  static const int kIaFieldNumber = 5;
  double ia() const;
  void set_ia(double value);

  // double Ib = 6;
  void clear_ib();
  static const int kIbFieldNumber = 6;
  double ib() const;
  void set_ib(double value);

  // double Ic = 7;
  void clear_ic();
  static const int kIcFieldNumber = 7;
  double ic() const;
  void set_ic(double value);

  // double Idc = 8;
  void clear_idc();
  static const int kIdcFieldNumber = 8;
  double idc() const;
  void set_idc(double value);

  // double P = 9;
  void clear_p();
  static const int kPFieldNumber = 9;
  double p() const;
  void set_p(double value);

  // double Q = 10;
  void clear_q();
  static const int kQFieldNumber = 10;
  double q() const;
  void set_q(double value);

  // double PF = 11;
  void clear_pf();
  static const int kPFFieldNumber = 11;
  double pf() const;
  void set_pf(double value);

  // double N = 12;
  void clear_n();
  static const int kNFieldNumber = 12;
  double n() const;
  void set_n(double value);

  // double VU = 13;
  void clear_vu();
  static const int kVUFieldNumber = 13;
  double vu() const;
  void set_vu(double value);

  // double CU = 14;
  void clear_cu();
  static const int kCUFieldNumber = 14;
  double cu() const;
  void set_cu(double value);

  // double HDF = 15;
  void clear_hdf();
  static const int kHDFFieldNumber = 15;
  double hdf() const;
  void set_hdf(double value);

  // double Pa = 16;
  void clear_pa();
  static const int kPaFieldNumber = 16;
  double pa() const;
  void set_pa(double value);

  // double Pb = 17;
  void clear_pb();
  static const int kPbFieldNumber = 17;
  double pb() const;
  void set_pb(double value);

  // double Pc = 18;
  void clear_pc();
  static const int kPcFieldNumber = 18;
  double pc() const;
  void set_pc(double value);

  // double Qa = 19;
  void clear_qa();
  static const int kQaFieldNumber = 19;
  double qa() const;
  void set_qa(double value);

  // double Qb = 20;
  void clear_qb();
  static const int kQbFieldNumber = 20;
  double qb() const;
  void set_qb(double value);

  // double Qc = 21;
  void clear_qc();
  static const int kQcFieldNumber = 21;
  double qc() const;
  void set_qc(double value);

  // double Pfa = 22;
  void clear_pfa();
  static const int kPfaFieldNumber = 22;
  double pfa() const;
  void set_pfa(double value);

  // double Pfb = 23;
  void clear_pfb();
  static const int kPfbFieldNumber = 23;
  double pfb() const;
  void set_pfb(double value);

  // double Pfc = 24;
  void clear_pfc();
  static const int kPfcFieldNumber = 24;
  double pfc() const;
  void set_pfc(double value);

  // double Fap = 25;
  void clear_fap();
  static const int kFapFieldNumber = 25;
  double fap() const;
  void set_fap(double value);

  // double Rap = 26;
  void clear_rap();
  static const int kRapFieldNumber = 26;
  double rap() const;
  void set_rap(double value);

  // double Irp = 27;
  void clear_irp();
  static const int kIrpFieldNumber = 27;
  double irp() const;
  void set_irp(double value);

  // double Crp = 28;
  void clear_crp();
  static const int kCrpFieldNumber = 28;
  double crp() const;
  void set_crp(double value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MeterType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double va_;
  double vb_;
  double vc_;
  double vdc_;
  double ia_;
  double ib_;
  double ic_;
  double idc_;
  double p_;
  double q_;
  double pf_;
  double n_;
  double vu_;
  double cu_;
  double hdf_;
  double pa_;
  double pb_;
  double pc_;
  double qa_;
  double qb_;
  double qc_;
  double pfa_;
  double pfb_;
  double pfc_;
  double fap_;
  double rap_;
  double irp_;
  double crp_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SlotType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.SlotType) */ {
 public:
  SlotType();
  virtual ~SlotType();

  SlotType(const SlotType& from);

  inline SlotType& operator=(const SlotType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlotType(SlotType&& from) noexcept
    : SlotType() {
    *this = ::std::move(from);
  }

  inline SlotType& operator=(SlotType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlotType& default_instance();

  static inline const SlotType* internal_default_instance() {
    return reinterpret_cast<const SlotType*>(
               &_SlotType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SlotType* other);
  friend void swap(SlotType& a, SlotType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlotType* New() const PROTOBUF_FINAL { return New(NULL); }

  SlotType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SlotType& from);
  void MergeFrom(const SlotType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SlotType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 CanIndex = 1;
  void clear_canindex();
  static const int kCanIndexFieldNumber = 1;
  ::google::protobuf::int32 canindex() const;
  void set_canindex(::google::protobuf::int32 value);

  // int32 SlotNo = 2;
  void clear_slotno();
  static const int kSlotNoFieldNumber = 2;
  ::google::protobuf::int32 slotno() const;
  void set_slotno(::google::protobuf::int32 value);

  // .monitor.protobuf.SlotEnumType SlotStats = 3;
  void clear_slotstats();
  static const int kSlotStatsFieldNumber = 3;
  ::monitor::protobuf::SlotEnumType slotstats() const;
  void set_slotstats(::monitor::protobuf::SlotEnumType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.SlotType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 canindex_;
  ::google::protobuf::int32 slotno_;
  int slotstats_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.RoomDataReq) */ {
 public:
  RoomDataReq();
  virtual ~RoomDataReq();

  RoomDataReq(const RoomDataReq& from);

  inline RoomDataReq& operator=(const RoomDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomDataReq(RoomDataReq&& from) noexcept
    : RoomDataReq() {
    *this = ::std::move(from);
  }

  inline RoomDataReq& operator=(RoomDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomDataReq& default_instance();

  static inline const RoomDataReq* internal_default_instance() {
    return reinterpret_cast<const RoomDataReq*>(
               &_RoomDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(RoomDataReq* other);
  friend void swap(RoomDataReq& a, RoomDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomDataReq& from);
  void MergeFrom(const RoomDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.RoomDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomDataNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.RoomDataNotifyReq) */ {
 public:
  RoomDataNotifyReq();
  virtual ~RoomDataNotifyReq();

  RoomDataNotifyReq(const RoomDataNotifyReq& from);

  inline RoomDataNotifyReq& operator=(const RoomDataNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomDataNotifyReq(RoomDataNotifyReq&& from) noexcept
    : RoomDataNotifyReq() {
    *this = ::std::move(from);
  }

  inline RoomDataNotifyReq& operator=(RoomDataNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomDataNotifyReq& default_instance();

  static inline const RoomDataNotifyReq* internal_default_instance() {
    return reinterpret_cast<const RoomDataNotifyReq*>(
               &_RoomDataNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(RoomDataNotifyReq* other);
  friend void swap(RoomDataNotifyReq& a, RoomDataNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomDataNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomDataNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomDataNotifyReq& from);
  void MergeFrom(const RoomDataNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomDataNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.LVRBoxType LvrRoomDataList = 3;
  int lvrroomdatalist_size() const;
  void clear_lvrroomdatalist();
  static const int kLvrRoomDataListFieldNumber = 3;
  const ::monitor::protobuf::LVRBoxType& lvrroomdatalist(int index) const;
  ::monitor::protobuf::LVRBoxType* mutable_lvrroomdatalist(int index);
  ::monitor::protobuf::LVRBoxType* add_lvrroomdatalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::LVRBoxType >*
      mutable_lvrroomdatalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::LVRBoxType >&
      lvrroomdatalist() const;

  // .monitor.protobuf.HVRBoxType HvrData = 1;
  bool has_hvrdata() const;
  void clear_hvrdata();
  static const int kHvrDataFieldNumber = 1;
  const ::monitor::protobuf::HVRBoxType& hvrdata() const;
  ::monitor::protobuf::HVRBoxType* mutable_hvrdata();
  ::monitor::protobuf::HVRBoxType* release_hvrdata();
  void set_allocated_hvrdata(::monitor::protobuf::HVRBoxType* hvrdata);

  // .monitor.protobuf.TFRBoxType TfrData = 2;
  bool has_tfrdata() const;
  void clear_tfrdata();
  static const int kTfrDataFieldNumber = 2;
  const ::monitor::protobuf::TFRBoxType& tfrdata() const;
  ::monitor::protobuf::TFRBoxType* mutable_tfrdata();
  ::monitor::protobuf::TFRBoxType* release_tfrdata();
  void set_allocated_tfrdata(::monitor::protobuf::TFRBoxType* tfrdata);

  // .monitor.protobuf.HVRType HrvData = 4;
  bool has_hrvdata() const;
  void clear_hrvdata();
  static const int kHrvDataFieldNumber = 4;
  const ::monitor::protobuf::HVRType& hrvdata() const;
  ::monitor::protobuf::HVRType* mutable_hrvdata();
  ::monitor::protobuf::HVRType* release_hrvdata();
  void set_allocated_hrvdata(::monitor::protobuf::HVRType* hrvdata);

  // .monitor.protobuf.TrType TrData = 5;
  bool has_trdata() const;
  void clear_trdata();
  static const int kTrDataFieldNumber = 5;
  const ::monitor::protobuf::TrType& trdata() const;
  ::monitor::protobuf::TrType* mutable_trdata();
  ::monitor::protobuf::TrType* release_trdata();
  void set_allocated_trdata(::monitor::protobuf::TrType* trdata);

  // .monitor.protobuf.LVRType LvrDataList = 6;
  bool has_lvrdatalist() const;
  void clear_lvrdatalist();
  static const int kLvrDataListFieldNumber = 6;
  const ::monitor::protobuf::LVRType& lvrdatalist() const;
  ::monitor::protobuf::LVRType* mutable_lvrdatalist();
  ::monitor::protobuf::LVRType* release_lvrdatalist();
  void set_allocated_lvrdatalist(::monitor::protobuf::LVRType* lvrdatalist);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.RoomDataNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::LVRBoxType > lvrroomdatalist_;
  ::monitor::protobuf::HVRBoxType* hvrdata_;
  ::monitor::protobuf::TFRBoxType* tfrdata_;
  ::monitor::protobuf::HVRType* hrvdata_;
  ::monitor::protobuf::TrType* trdata_;
  ::monitor::protobuf::LVRType* lvrdatalist_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HVRBoxType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.HVRBoxType) */ {
 public:
  HVRBoxType();
  virtual ~HVRBoxType();

  HVRBoxType(const HVRBoxType& from);

  inline HVRBoxType& operator=(const HVRBoxType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HVRBoxType(HVRBoxType&& from) noexcept
    : HVRBoxType() {
    *this = ::std::move(from);
  }

  inline HVRBoxType& operator=(HVRBoxType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HVRBoxType& default_instance();

  static inline const HVRBoxType* internal_default_instance() {
    return reinterpret_cast<const HVRBoxType*>(
               &_HVRBoxType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(HVRBoxType* other);
  friend void swap(HVRBoxType& a, HVRBoxType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HVRBoxType* New() const PROTOBUF_FINAL { return New(NULL); }

  HVRBoxType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HVRBoxType& from);
  void MergeFrom(const HVRBoxType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HVRBoxType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.SignalType SmokeSignal = 1;
  void clear_smokesignal();
  static const int kSmokeSignalFieldNumber = 1;
  ::monitor::protobuf::SignalType smokesignal() const;
  void set_smokesignal(::monitor::protobuf::SignalType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.HVRBoxType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int smokesignal_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TFRBoxType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.TFRBoxType) */ {
 public:
  TFRBoxType();
  virtual ~TFRBoxType();

  TFRBoxType(const TFRBoxType& from);

  inline TFRBoxType& operator=(const TFRBoxType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TFRBoxType(TFRBoxType&& from) noexcept
    : TFRBoxType() {
    *this = ::std::move(from);
  }

  inline TFRBoxType& operator=(TFRBoxType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TFRBoxType& default_instance();

  static inline const TFRBoxType* internal_default_instance() {
    return reinterpret_cast<const TFRBoxType*>(
               &_TFRBoxType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TFRBoxType* other);
  friend void swap(TFRBoxType& a, TFRBoxType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TFRBoxType* New() const PROTOBUF_FINAL { return New(NULL); }

  TFRBoxType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TFRBoxType& from);
  void MergeFrom(const TFRBoxType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TFRBoxType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.AlarmStateEnumType ION = 1;
  void clear_ion();
  static const int kIONFieldNumber = 1;
  ::monitor::protobuf::AlarmStateEnumType ion() const;
  void set_ion(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.SignalType SmokeSignal = 2;
  void clear_smokesignal();
  static const int kSmokeSignalFieldNumber = 2;
  ::monitor::protobuf::SignalType smokesignal() const;
  void set_smokesignal(::monitor::protobuf::SignalType value);

  // int32 FanSpeed = 3;
  void clear_fanspeed();
  static const int kFanSpeedFieldNumber = 3;
  ::google::protobuf::int32 fanspeed() const;
  void set_fanspeed(::google::protobuf::int32 value);

  // .monitor.protobuf.AlarmStateEnumType FanFault = 4;
  void clear_fanfault();
  static const int kFanFaultFieldNumber = 4;
  ::monitor::protobuf::AlarmStateEnumType fanfault() const;
  void set_fanfault(::monitor::protobuf::AlarmStateEnumType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.TFRBoxType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ion_;
  int smokesignal_;
  ::google::protobuf::int32 fanspeed_;
  int fanfault_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LVRBoxType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.LVRBoxType) */ {
 public:
  LVRBoxType();
  virtual ~LVRBoxType();

  LVRBoxType(const LVRBoxType& from);

  inline LVRBoxType& operator=(const LVRBoxType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LVRBoxType(LVRBoxType&& from) noexcept
    : LVRBoxType() {
    *this = ::std::move(from);
  }

  inline LVRBoxType& operator=(LVRBoxType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LVRBoxType& default_instance();

  static inline const LVRBoxType* internal_default_instance() {
    return reinterpret_cast<const LVRBoxType*>(
               &_LVRBoxType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(LVRBoxType* other);
  friend void swap(LVRBoxType& a, LVRBoxType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LVRBoxType* New() const PROTOBUF_FINAL { return New(NULL); }

  LVRBoxType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LVRBoxType& from);
  void MergeFrom(const LVRBoxType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LVRBoxType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 BoxNo = 1;
  void clear_boxno();
  static const int kBoxNoFieldNumber = 1;
  ::google::protobuf::int32 boxno() const;
  void set_boxno(::google::protobuf::int32 value);

  // .monitor.protobuf.SignalType Door1Signal = 2;
  void clear_door1signal();
  static const int kDoor1SignalFieldNumber = 2;
  ::monitor::protobuf::SignalType door1signal() const;
  void set_door1signal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.SignalType Door2Signal = 3;
  void clear_door2signal();
  static const int kDoor2SignalFieldNumber = 3;
  ::monitor::protobuf::SignalType door2signal() const;
  void set_door2signal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.SignalType DoorSignal = 4;
  void clear_doorsignal();
  static const int kDoorSignalFieldNumber = 4;
  ::monitor::protobuf::SignalType doorsignal() const;
  void set_doorsignal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.SignalType SmokeSignal = 5;
  void clear_smokesignal();
  static const int kSmokeSignalFieldNumber = 5;
  ::monitor::protobuf::SignalType smokesignal() const;
  void set_smokesignal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.AlarmStateEnumType WaterSignal = 6;
  void clear_watersignal();
  static const int kWaterSignalFieldNumber = 6;
  ::monitor::protobuf::AlarmStateEnumType watersignal() const;
  void set_watersignal(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType Stop = 7;
  void clear_stop();
  static const int kStopFieldNumber = 7;
  ::monitor::protobuf::AlarmStateEnumType stop() const;
  void set_stop(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType ION = 8;
  void clear_ion();
  static const int kIONFieldNumber = 8;
  ::monitor::protobuf::AlarmStateEnumType ion() const;
  void set_ion(::monitor::protobuf::AlarmStateEnumType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.LVRBoxType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 boxno_;
  int door1signal_;
  int door2signal_;
  int doorsignal_;
  int smokesignal_;
  int watersignal_;
  int stop_;
  int ion_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HVRType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.HVRType) */ {
 public:
  HVRType();
  virtual ~HVRType();

  HVRType(const HVRType& from);

  inline HVRType& operator=(const HVRType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HVRType(HVRType&& from) noexcept
    : HVRType() {
    *this = ::std::move(from);
  }

  inline HVRType& operator=(HVRType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HVRType& default_instance();

  static inline const HVRType* internal_default_instance() {
    return reinterpret_cast<const HVRType*>(
               &_HVRType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(HVRType* other);
  friend void swap(HVRType& a, HVRType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HVRType* New() const PROTOBUF_FINAL { return New(NULL); }

  HVRType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HVRType& from);
  void MergeFrom(const HVRType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HVRType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.MeterType meter = 1;
  bool has_meter() const;
  void clear_meter();
  static const int kMeterFieldNumber = 1;
  const ::monitor::protobuf::MeterType& meter() const;
  ::monitor::protobuf::MeterType* mutable_meter();
  ::monitor::protobuf::MeterType* release_meter();
  void set_allocated_meter(::monitor::protobuf::MeterType* meter);

  // .monitor.protobuf.SignalType LdBrk = 2;
  void clear_ldbrk();
  static const int kLdBrkFieldNumber = 2;
  ::monitor::protobuf::SignalType ldbrk() const;
  void set_ldbrk(::monitor::protobuf::SignalType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.HVRType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::monitor::protobuf::MeterType* meter_;
  int ldbrk_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.TrType) */ {
 public:
  TrType();
  virtual ~TrType();

  TrType(const TrType& from);

  inline TrType& operator=(const TrType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrType(TrType&& from) noexcept
    : TrType() {
    *this = ::std::move(from);
  }

  inline TrType& operator=(TrType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrType& default_instance();

  static inline const TrType* internal_default_instance() {
    return reinterpret_cast<const TrType*>(
               &_TrType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(TrType* other);
  friend void swap(TrType& a, TrType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrType* New() const PROTOBUF_FINAL { return New(NULL); }

  TrType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrType& from);
  void MergeFrom(const TrType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.AlarmStateEnumType OverTAlarm = 1;
  void clear_overtalarm();
  static const int kOverTAlarmFieldNumber = 1;
  ::monitor::protobuf::AlarmStateEnumType overtalarm() const;
  void set_overtalarm(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType OverTOff = 2;
  void clear_overtoff();
  static const int kOverTOffFieldNumber = 2;
  ::monitor::protobuf::AlarmStateEnumType overtoff() const;
  void set_overtoff(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType LightGasAlarm = 3;
  void clear_lightgasalarm();
  static const int kLightGasAlarmFieldNumber = 3;
  ::monitor::protobuf::AlarmStateEnumType lightgasalarm() const;
  void set_lightgasalarm(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType HeavyGasOff = 4;
  void clear_heavygasoff();
  static const int kHeavyGasOffFieldNumber = 4;
  ::monitor::protobuf::AlarmStateEnumType heavygasoff() const;
  void set_heavygasoff(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.SignalType DoorSignal = 5;
  void clear_doorsignal();
  static const int kDoorSignalFieldNumber = 5;
  ::monitor::protobuf::SignalType doorsignal() const;
  void set_doorsignal(::monitor::protobuf::SignalType value);

  // sint32 T = 6;
  void clear_t();
  static const int kTFieldNumber = 6;
  ::google::protobuf::int32 t() const;
  void set_t(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.TrType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int overtalarm_;
  int overtoff_;
  int lightgasalarm_;
  int heavygasoff_;
  int doorsignal_;
  ::google::protobuf::int32 t_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LVRType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.LVRType) */ {
 public:
  LVRType();
  virtual ~LVRType();

  LVRType(const LVRType& from);

  inline LVRType& operator=(const LVRType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LVRType(LVRType&& from) noexcept
    : LVRType() {
    *this = ::std::move(from);
  }

  inline LVRType& operator=(LVRType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LVRType& default_instance();

  static inline const LVRType* internal_default_instance() {
    return reinterpret_cast<const LVRType*>(
               &_LVRType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(LVRType* other);
  friend void swap(LVRType& a, LVRType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LVRType* New() const PROTOBUF_FINAL { return New(NULL); }

  LVRType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LVRType& from);
  void MergeFrom(const LVRType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LVRType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.DCCabType DcCabData = 2;
  int dccabdata_size() const;
  void clear_dccabdata();
  static const int kDcCabDataFieldNumber = 2;
  const ::monitor::protobuf::DCCabType& dccabdata(int index) const;
  ::monitor::protobuf::DCCabType* mutable_dccabdata(int index);
  ::monitor::protobuf::DCCabType* add_dccabdata();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCCabType >*
      mutable_dccabdata();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCCabType >&
      dccabdata() const;

  // .monitor.protobuf.LvCabType LvcCabData = 1;
  bool has_lvccabdata() const;
  void clear_lvccabdata();
  static const int kLvcCabDataFieldNumber = 1;
  const ::monitor::protobuf::LvCabType& lvccabdata() const;
  ::monitor::protobuf::LvCabType* mutable_lvccabdata();
  ::monitor::protobuf::LvCabType* release_lvccabdata();
  void set_allocated_lvccabdata(::monitor::protobuf::LvCabType* lvccabdata);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.LVRType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCCabType > dccabdata_;
  ::monitor::protobuf::LvCabType* lvccabdata_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LvCabType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.LvCabType) */ {
 public:
  LvCabType();
  virtual ~LvCabType();

  LvCabType(const LvCabType& from);

  inline LvCabType& operator=(const LvCabType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LvCabType(LvCabType&& from) noexcept
    : LvCabType() {
    *this = ::std::move(from);
  }

  inline LvCabType& operator=(LvCabType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LvCabType& default_instance();

  static inline const LvCabType* internal_default_instance() {
    return reinterpret_cast<const LvCabType*>(
               &_LvCabType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(LvCabType* other);
  friend void swap(LvCabType& a, LvCabType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LvCabType* New() const PROTOBUF_FINAL { return New(NULL); }

  LvCabType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LvCabType& from);
  void MergeFrom(const LvCabType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LvCabType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.MeterType MeterList = 11;
  int meterlist_size() const;
  void clear_meterlist();
  static const int kMeterListFieldNumber = 11;
  const ::monitor::protobuf::MeterType& meterlist(int index) const;
  ::monitor::protobuf::MeterType* mutable_meterlist(int index);
  ::monitor::protobuf::MeterType* add_meterlist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MeterType >*
      mutable_meterlist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MeterType >&
      meterlist() const;

  // sint32 T1 = 1;
  void clear_t1();
  static const int kT1FieldNumber = 1;
  ::google::protobuf::int32 t1() const;
  void set_t1(::google::protobuf::int32 value);

  // int32 HUM1 = 2;
  void clear_hum1();
  static const int kHUM1FieldNumber = 2;
  ::google::protobuf::int32 hum1() const;
  void set_hum1(::google::protobuf::int32 value);

  // sint32 T2 = 3;
  void clear_t2();
  static const int kT2FieldNumber = 3;
  ::google::protobuf::int32 t2() const;
  void set_t2(::google::protobuf::int32 value);

  // int32 HUM2 = 4;
  void clear_hum2();
  static const int kHUM2FieldNumber = 4;
  ::google::protobuf::int32 hum2() const;
  void set_hum2(::google::protobuf::int32 value);

  // sint32 T3 = 5;
  void clear_t3();
  static const int kT3FieldNumber = 5;
  ::google::protobuf::int32 t3() const;
  void set_t3(::google::protobuf::int32 value);

  // int32 HUM3 = 6;
  void clear_hum3();
  static const int kHUM3FieldNumber = 6;
  ::google::protobuf::int32 hum3() const;
  void set_hum3(::google::protobuf::int32 value);

  // sint32 T4 = 7;
  void clear_t4();
  static const int kT4FieldNumber = 7;
  ::google::protobuf::int32 t4() const;
  void set_t4(::google::protobuf::int32 value);

  // int32 HUM4 = 8;
  void clear_hum4();
  static const int kHUM4FieldNumber = 8;
  ::google::protobuf::int32 hum4() const;
  void set_hum4(::google::protobuf::int32 value);

  // sint32 T5 = 9;
  void clear_t5();
  static const int kT5FieldNumber = 9;
  ::google::protobuf::int32 t5() const;
  void set_t5(::google::protobuf::int32 value);

  // int32 HUM5 = 10;
  void clear_hum5();
  static const int kHUM5FieldNumber = 10;
  ::google::protobuf::int32 hum5() const;
  void set_hum5(::google::protobuf::int32 value);

  // .monitor.protobuf.SignalType BrkValue = 12;
  void clear_brkvalue();
  static const int kBrkValueFieldNumber = 12;
  ::monitor::protobuf::SignalType brkvalue() const;
  void set_brkvalue(::monitor::protobuf::SignalType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.LvCabType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MeterType > meterlist_;
  ::google::protobuf::int32 t1_;
  ::google::protobuf::int32 hum1_;
  ::google::protobuf::int32 t2_;
  ::google::protobuf::int32 hum2_;
  ::google::protobuf::int32 t3_;
  ::google::protobuf::int32 hum3_;
  ::google::protobuf::int32 t4_;
  ::google::protobuf::int32 hum4_;
  ::google::protobuf::int32 t5_;
  ::google::protobuf::int32 hum5_;
  int brkvalue_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DCCabType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.DCCabType) */ {
 public:
  DCCabType();
  virtual ~DCCabType();

  DCCabType(const DCCabType& from);

  inline DCCabType& operator=(const DCCabType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DCCabType(DCCabType&& from) noexcept
    : DCCabType() {
    *this = ::std::move(from);
  }

  inline DCCabType& operator=(DCCabType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DCCabType& default_instance();

  static inline const DCCabType* internal_default_instance() {
    return reinterpret_cast<const DCCabType*>(
               &_DCCabType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(DCCabType* other);
  friend void swap(DCCabType& a, DCCabType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DCCabType* New() const PROTOBUF_FINAL { return New(NULL); }

  DCCabType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DCCabType& from);
  void MergeFrom(const DCCabType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DCCabType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.SlotType slot = 10;
  int slot_size() const;
  void clear_slot();
  static const int kSlotFieldNumber = 10;
  const ::monitor::protobuf::SlotType& slot(int index) const;
  ::monitor::protobuf::SlotType* mutable_slot(int index);
  ::monitor::protobuf::SlotType* add_slot();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >*
      mutable_slot();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >&
      slot() const;

  // int32 CabNo = 1;
  void clear_cabno();
  static const int kCabNoFieldNumber = 1;
  ::google::protobuf::int32 cabno() const;
  void set_cabno(::google::protobuf::int32 value);

  // sint32 T = 2;
  void clear_t();
  static const int kTFieldNumber = 2;
  ::google::protobuf::int32 t() const;
  void set_t(::google::protobuf::int32 value);

  // int32 HUM1 = 3;
  void clear_hum1();
  static const int kHUM1FieldNumber = 3;
  ::google::protobuf::int32 hum1() const;
  void set_hum1(::google::protobuf::int32 value);

  // .monitor.protobuf.AlarmStateEnumType WaterSignal = 4;
  void clear_watersignal();
  static const int kWaterSignalFieldNumber = 4;
  ::monitor::protobuf::AlarmStateEnumType watersignal() const;
  void set_watersignal(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType ION = 5;
  void clear_ion();
  static const int kIONFieldNumber = 5;
  ::monitor::protobuf::AlarmStateEnumType ion() const;
  void set_ion(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.SignalType SmokeSignal = 6;
  void clear_smokesignal();
  static const int kSmokeSignalFieldNumber = 6;
  ::monitor::protobuf::SignalType smokesignal() const;
  void set_smokesignal(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.AlarmStateEnumType SurgeProSignal = 7;
  void clear_surgeprosignal();
  static const int kSurgeProSignalFieldNumber = 7;
  ::monitor::protobuf::AlarmStateEnumType surgeprosignal() const;
  void set_surgeprosignal(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.AlarmStateEnumType AuxType = 8;
  void clear_auxtype();
  static const int kAuxTypeFieldNumber = 8;
  ::monitor::protobuf::AlarmStateEnumType auxtype() const;
  void set_auxtype(::monitor::protobuf::AlarmStateEnumType value);

  // .monitor.protobuf.SignalType MicroBrk = 9;
  void clear_microbrk();
  static const int kMicroBrkFieldNumber = 9;
  ::monitor::protobuf::SignalType microbrk() const;
  void set_microbrk(::monitor::protobuf::SignalType value);

  // .monitor.protobuf.SignalType PCbrk = 11;
  void clear_pcbrk();
  static const int kPCbrkFieldNumber = 11;
  ::monitor::protobuf::SignalType pcbrk() const;
  void set_pcbrk(::monitor::protobuf::SignalType value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.DCCabType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType > slot_;
  ::google::protobuf::int32 cabno_;
  ::google::protobuf::int32 t_;
  ::google::protobuf::int32 hum1_;
  int watersignal_;
  int ion_;
  int smokesignal_;
  int surgeprosignal_;
  int auxtype_;
  int microbrk_;
  int pcbrk_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorTelemetryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorTelemetryReq) */ {
 public:
  MonitorTelemetryReq();
  virtual ~MonitorTelemetryReq();

  MonitorTelemetryReq(const MonitorTelemetryReq& from);

  inline MonitorTelemetryReq& operator=(const MonitorTelemetryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorTelemetryReq(MonitorTelemetryReq&& from) noexcept
    : MonitorTelemetryReq() {
    *this = ::std::move(from);
  }

  inline MonitorTelemetryReq& operator=(MonitorTelemetryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorTelemetryReq& default_instance();

  static inline const MonitorTelemetryReq* internal_default_instance() {
    return reinterpret_cast<const MonitorTelemetryReq*>(
               &_MonitorTelemetryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(MonitorTelemetryReq* other);
  friend void swap(MonitorTelemetryReq& a, MonitorTelemetryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorTelemetryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorTelemetryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorTelemetryReq& from);
  void MergeFrom(const MonitorTelemetryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorTelemetryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorTelemetryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.CommAns) */ {
 public:
  CommAns();
  virtual ~CommAns();

  CommAns(const CommAns& from);

  inline CommAns& operator=(const CommAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommAns(CommAns&& from) noexcept
    : CommAns() {
    *this = ::std::move(from);
  }

  inline CommAns& operator=(CommAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommAns& default_instance();

  static inline const CommAns* internal_default_instance() {
    return reinterpret_cast<const CommAns*>(
               &_CommAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CommAns* other);
  friend void swap(CommAns& a, CommAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommAns* New() const PROTOBUF_FINAL { return New(NULL); }

  CommAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommAns& from);
  void MergeFrom(const CommAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .monitor.protobuf.BoolEnum Confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  ::monitor::protobuf::BoolEnum confirm() const;
  void set_confirm(::monitor::protobuf::BoolEnum value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.CommAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int confirm_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorSignalReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorSignalReq) */ {
 public:
  MonitorSignalReq();
  virtual ~MonitorSignalReq();

  MonitorSignalReq(const MonitorSignalReq& from);

  inline MonitorSignalReq& operator=(const MonitorSignalReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorSignalReq(MonitorSignalReq&& from) noexcept
    : MonitorSignalReq() {
    *this = ::std::move(from);
  }

  inline MonitorSignalReq& operator=(MonitorSignalReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorSignalReq& default_instance();

  static inline const MonitorSignalReq* internal_default_instance() {
    return reinterpret_cast<const MonitorSignalReq*>(
               &_MonitorSignalReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(MonitorSignalReq* other);
  friend void swap(MonitorSignalReq& a, MonitorSignalReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorSignalReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorSignalReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorSignalReq& from);
  void MergeFrom(const MonitorSignalReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorSignalReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorSignalReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorStateReq) */ {
 public:
  MonitorStateReq();
  virtual ~MonitorStateReq();

  MonitorStateReq(const MonitorStateReq& from);

  inline MonitorStateReq& operator=(const MonitorStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorStateReq(MonitorStateReq&& from) noexcept
    : MonitorStateReq() {
    *this = ::std::move(from);
  }

  inline MonitorStateReq& operator=(MonitorStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorStateReq& default_instance();

  static inline const MonitorStateReq* internal_default_instance() {
    return reinterpret_cast<const MonitorStateReq*>(
               &_MonitorStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(MonitorStateReq* other);
  friend void swap(MonitorStateReq& a, MonitorStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorStateReq& from);
  void MergeFrom(const MonitorStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DevIndex = 1;
  int devindex_size() const;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex(int index) const;
  void set_devindex(int index, ::google::protobuf::int32 value);
  void add_devindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      devindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_devindex();

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > devindex_;
  mutable int _devindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorTelemetryNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorTelemetryNotifyReq) */ {
 public:
  MonitorTelemetryNotifyReq();
  virtual ~MonitorTelemetryNotifyReq();

  MonitorTelemetryNotifyReq(const MonitorTelemetryNotifyReq& from);

  inline MonitorTelemetryNotifyReq& operator=(const MonitorTelemetryNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorTelemetryNotifyReq(MonitorTelemetryNotifyReq&& from) noexcept
    : MonitorTelemetryNotifyReq() {
    *this = ::std::move(from);
  }

  inline MonitorTelemetryNotifyReq& operator=(MonitorTelemetryNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorTelemetryNotifyReq& default_instance();

  static inline const MonitorTelemetryNotifyReq* internal_default_instance() {
    return reinterpret_cast<const MonitorTelemetryNotifyReq*>(
               &_MonitorTelemetryNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(MonitorTelemetryNotifyReq* other);
  friend void swap(MonitorTelemetryNotifyReq& a, MonitorTelemetryNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorTelemetryNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorTelemetryNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorTelemetryNotifyReq& from);
  void MergeFrom(const MonitorTelemetryNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorTelemetryNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.MonitorTelemetryType DataList = 3;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 3;
  const ::monitor::protobuf::MonitorTelemetryType& datalist(int index) const;
  ::monitor::protobuf::MonitorTelemetryType* mutable_datalist(int index);
  ::monitor::protobuf::MonitorTelemetryType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorTelemetryType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorTelemetryType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // .monitor.protobuf.SendReason Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorTelemetryNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorTelemetryType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorTelemetryType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorTelemetryType) */ {
 public:
  MonitorTelemetryType();
  virtual ~MonitorTelemetryType();

  MonitorTelemetryType(const MonitorTelemetryType& from);

  inline MonitorTelemetryType& operator=(const MonitorTelemetryType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorTelemetryType(MonitorTelemetryType&& from) noexcept
    : MonitorTelemetryType() {
    *this = ::std::move(from);
  }

  inline MonitorTelemetryType& operator=(MonitorTelemetryType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorTelemetryType& default_instance();

  static inline const MonitorTelemetryType* internal_default_instance() {
    return reinterpret_cast<const MonitorTelemetryType*>(
               &_MonitorTelemetryType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(MonitorTelemetryType* other);
  friend void swap(MonitorTelemetryType& a, MonitorTelemetryType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorTelemetryType* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorTelemetryType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorTelemetryType& from);
  void MergeFrom(const MonitorTelemetryType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorTelemetryType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string DevName = 4;
  void clear_devname();
  static const int kDevNameFieldNumber = 4;
  const ::std::string& devname() const;
  void set_devname(const ::std::string& value);
  #if LANG_CXX11
  void set_devname(::std::string&& value);
  #endif
  void set_devname(const char* value);
  void set_devname(const char* value, size_t size);
  ::std::string* mutable_devname();
  ::std::string* release_devname();
  void set_allocated_devname(::std::string* devname);

  // string MeasureName = 5;
  void clear_measurename();
  static const int kMeasureNameFieldNumber = 5;
  const ::std::string& measurename() const;
  void set_measurename(const ::std::string& value);
  #if LANG_CXX11
  void set_measurename(::std::string&& value);
  #endif
  void set_measurename(const char* value);
  void set_measurename(const char* value, size_t size);
  ::std::string* mutable_measurename();
  ::std::string* release_measurename();
  void set_allocated_measurename(::std::string* measurename);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 DotNo = 3;
  void clear_dotno();
  static const int kDotNoFieldNumber = 3;
  ::google::protobuf::int32 dotno() const;
  void set_dotno(::google::protobuf::int32 value);

  // double Value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  double value() const;
  void set_value(double value);

  // int32 Status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorTelemetryType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr devname_;
  ::google::protobuf::internal::ArenaStringPtr measurename_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 dotno_;
  double value_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorSignalNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorSignalNotifyReq) */ {
 public:
  MonitorSignalNotifyReq();
  virtual ~MonitorSignalNotifyReq();

  MonitorSignalNotifyReq(const MonitorSignalNotifyReq& from);

  inline MonitorSignalNotifyReq& operator=(const MonitorSignalNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorSignalNotifyReq(MonitorSignalNotifyReq&& from) noexcept
    : MonitorSignalNotifyReq() {
    *this = ::std::move(from);
  }

  inline MonitorSignalNotifyReq& operator=(MonitorSignalNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorSignalNotifyReq& default_instance();

  static inline const MonitorSignalNotifyReq* internal_default_instance() {
    return reinterpret_cast<const MonitorSignalNotifyReq*>(
               &_MonitorSignalNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(MonitorSignalNotifyReq* other);
  friend void swap(MonitorSignalNotifyReq& a, MonitorSignalNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorSignalNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorSignalNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorSignalNotifyReq& from);
  void MergeFrom(const MonitorSignalNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorSignalNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.MonitorSignalType DataList = 3;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 3;
  const ::monitor::protobuf::MonitorSignalType& datalist(int index) const;
  ::monitor::protobuf::MonitorSignalType* mutable_datalist(int index);
  ::monitor::protobuf::MonitorSignalType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorSignalType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorSignalType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // .monitor.protobuf.SendReason Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorSignalNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorSignalType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorSignalType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorSignalType) */ {
 public:
  MonitorSignalType();
  virtual ~MonitorSignalType();

  MonitorSignalType(const MonitorSignalType& from);

  inline MonitorSignalType& operator=(const MonitorSignalType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorSignalType(MonitorSignalType&& from) noexcept
    : MonitorSignalType() {
    *this = ::std::move(from);
  }

  inline MonitorSignalType& operator=(MonitorSignalType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorSignalType& default_instance();

  static inline const MonitorSignalType* internal_default_instance() {
    return reinterpret_cast<const MonitorSignalType*>(
               &_MonitorSignalType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(MonitorSignalType* other);
  friend void swap(MonitorSignalType& a, MonitorSignalType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorSignalType* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorSignalType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorSignalType& from);
  void MergeFrom(const MonitorSignalType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorSignalType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string DevName = 4;
  void clear_devname();
  static const int kDevNameFieldNumber = 4;
  const ::std::string& devname() const;
  void set_devname(const ::std::string& value);
  #if LANG_CXX11
  void set_devname(::std::string&& value);
  #endif
  void set_devname(const char* value);
  void set_devname(const char* value, size_t size);
  ::std::string* mutable_devname();
  ::std::string* release_devname();
  void set_allocated_devname(::std::string* devname);

  // string MeasureName = 5;
  void clear_measurename();
  static const int kMeasureNameFieldNumber = 5;
  const ::std::string& measurename() const;
  void set_measurename(const ::std::string& value);
  #if LANG_CXX11
  void set_measurename(::std::string&& value);
  #endif
  void set_measurename(const char* value);
  void set_measurename(const char* value, size_t size);
  ::std::string* mutable_measurename();
  ::std::string* release_measurename();
  void set_allocated_measurename(::std::string* measurename);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 DotNo = 3;
  void clear_dotno();
  static const int kDotNoFieldNumber = 3;
  ::google::protobuf::int32 dotno() const;
  void set_dotno(::google::protobuf::int32 value);

  // .monitor.protobuf.SignalType Value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::monitor::protobuf::SignalType value() const;
  void set_value(::monitor::protobuf::SignalType value);

  // int32 Status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorSignalType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr devname_;
  ::google::protobuf::internal::ArenaStringPtr measurename_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 dotno_;
  int value_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorStateNotifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorStateNotifyReq) */ {
 public:
  MonitorStateNotifyReq();
  virtual ~MonitorStateNotifyReq();

  MonitorStateNotifyReq(const MonitorStateNotifyReq& from);

  inline MonitorStateNotifyReq& operator=(const MonitorStateNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorStateNotifyReq(MonitorStateNotifyReq&& from) noexcept
    : MonitorStateNotifyReq() {
    *this = ::std::move(from);
  }

  inline MonitorStateNotifyReq& operator=(MonitorStateNotifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorStateNotifyReq& default_instance();

  static inline const MonitorStateNotifyReq* internal_default_instance() {
    return reinterpret_cast<const MonitorStateNotifyReq*>(
               &_MonitorStateNotifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(MonitorStateNotifyReq* other);
  friend void swap(MonitorStateNotifyReq& a, MonitorStateNotifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorStateNotifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorStateNotifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorStateNotifyReq& from);
  void MergeFrom(const MonitorStateNotifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorStateNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .monitor.protobuf.MonitorStateType DataList = 3;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 3;
  const ::monitor::protobuf::MonitorStateType& datalist(int index) const;
  ::monitor::protobuf::MonitorStateType* mutable_datalist(int index);
  ::monitor::protobuf::MonitorStateType* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorStateType >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorStateType >&
      datalist() const;

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // .monitor.protobuf.DateTime SendTime = 2;
  bool has_sendtime() const;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  const ::monitor::protobuf::DateTime& sendtime() const;
  ::monitor::protobuf::DateTime* mutable_sendtime();
  ::monitor::protobuf::DateTime* release_sendtime();
  void set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime);

  // .monitor.protobuf.SendReason Reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::monitor::protobuf::SendReason reason() const;
  void set_reason(::monitor::protobuf::SendReason value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorStateNotifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorStateType > datalist_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::monitor::protobuf::DateTime* sendtime_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorStateType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.MonitorStateType) */ {
 public:
  MonitorStateType();
  virtual ~MonitorStateType();

  MonitorStateType(const MonitorStateType& from);

  inline MonitorStateType& operator=(const MonitorStateType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorStateType(MonitorStateType&& from) noexcept
    : MonitorStateType() {
    *this = ::std::move(from);
  }

  inline MonitorStateType& operator=(MonitorStateType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorStateType& default_instance();

  static inline const MonitorStateType* internal_default_instance() {
    return reinterpret_cast<const MonitorStateType*>(
               &_MonitorStateType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(MonitorStateType* other);
  friend void swap(MonitorStateType& a, MonitorStateType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorStateType* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorStateType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorStateType& from);
  void MergeFrom(const MonitorStateType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorStateType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DevType = 2;
  void clear_devtype();
  static const int kDevTypeFieldNumber = 2;
  const ::std::string& devtype() const;
  void set_devtype(const ::std::string& value);
  #if LANG_CXX11
  void set_devtype(::std::string&& value);
  #endif
  void set_devtype(const char* value);
  void set_devtype(const char* value, size_t size);
  ::std::string* mutable_devtype();
  ::std::string* release_devtype();
  void set_allocated_devtype(::std::string* devtype);

  // string DevName = 4;
  void clear_devname();
  static const int kDevNameFieldNumber = 4;
  const ::std::string& devname() const;
  void set_devname(const ::std::string& value);
  #if LANG_CXX11
  void set_devname(::std::string&& value);
  #endif
  void set_devname(const char* value);
  void set_devname(const char* value, size_t size);
  ::std::string* mutable_devname();
  ::std::string* release_devname();
  void set_allocated_devname(::std::string* devname);

  // string MeasureName = 5;
  void clear_measurename();
  static const int kMeasureNameFieldNumber = 5;
  const ::std::string& measurename() const;
  void set_measurename(const ::std::string& value);
  #if LANG_CXX11
  void set_measurename(::std::string&& value);
  #endif
  void set_measurename(const char* value);
  void set_measurename(const char* value, size_t size);
  ::std::string* mutable_measurename();
  ::std::string* release_measurename();
  void set_allocated_measurename(::std::string* measurename);

  // string Reserved1 = 101;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 101;
  const ::std::string& reserved1() const;
  void set_reserved1(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved1(::std::string&& value);
  #endif
  void set_reserved1(const char* value);
  void set_reserved1(const char* value, size_t size);
  ::std::string* mutable_reserved1();
  ::std::string* release_reserved1();
  void set_allocated_reserved1(::std::string* reserved1);

  // string Reserved2 = 102;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 102;
  const ::std::string& reserved2() const;
  void set_reserved2(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved2(::std::string&& value);
  #endif
  void set_reserved2(const char* value);
  void set_reserved2(const char* value, size_t size);
  ::std::string* mutable_reserved2();
  ::std::string* release_reserved2();
  void set_allocated_reserved2(::std::string* reserved2);

  // int32 DevIndex = 1;
  void clear_devindex();
  static const int kDevIndexFieldNumber = 1;
  ::google::protobuf::int32 devindex() const;
  void set_devindex(::google::protobuf::int32 value);

  // int32 DotNo = 3;
  void clear_dotno();
  static const int kDotNoFieldNumber = 3;
  ::google::protobuf::int32 dotno() const;
  void set_dotno(::google::protobuf::int32 value);

  // int32 Value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // int32 Status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.MonitorStateType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr devtype_;
  ::google::protobuf::internal::ArenaStringPtr devname_;
  ::google::protobuf::internal::ArenaStringPtr measurename_;
  ::google::protobuf::internal::ArenaStringPtr reserved1_;
  ::google::protobuf::internal::ArenaStringPtr reserved2_;
  ::google::protobuf::int32 devindex_;
  ::google::protobuf::int32 dotno_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelecontrolReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.TelecontrolReq) */ {
 public:
  TelecontrolReq();
  virtual ~TelecontrolReq();

  TelecontrolReq(const TelecontrolReq& from);

  inline TelecontrolReq& operator=(const TelecontrolReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelecontrolReq(TelecontrolReq&& from) noexcept
    : TelecontrolReq() {
    *this = ::std::move(from);
  }

  inline TelecontrolReq& operator=(TelecontrolReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelecontrolReq& default_instance();

  static inline const TelecontrolReq* internal_default_instance() {
    return reinterpret_cast<const TelecontrolReq*>(
               &_TelecontrolReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(TelecontrolReq* other);
  friend void swap(TelecontrolReq& a, TelecontrolReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelecontrolReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TelecontrolReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelecontrolReq& from);
  void MergeFrom(const TelecontrolReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelecontrolReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ss = 1;
  void clear_ss();
  static const int kSsFieldNumber = 1;
  const ::std::string& ss() const;
  void set_ss(const ::std::string& value);
  #if LANG_CXX11
  void set_ss(::std::string&& value);
  #endif
  void set_ss(const char* value);
  void set_ss(const void* value, size_t size);
  ::std::string* mutable_ss();
  ::std::string* release_ss();
  void set_allocated_ss(::std::string* ss);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.TelecontrolReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ss_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TelecontrolAns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.TelecontrolAns) */ {
 public:
  TelecontrolAns();
  virtual ~TelecontrolAns();

  TelecontrolAns(const TelecontrolAns& from);

  inline TelecontrolAns& operator=(const TelecontrolAns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TelecontrolAns(TelecontrolAns&& from) noexcept
    : TelecontrolAns() {
    *this = ::std::move(from);
  }

  inline TelecontrolAns& operator=(TelecontrolAns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TelecontrolAns& default_instance();

  static inline const TelecontrolAns* internal_default_instance() {
    return reinterpret_cast<const TelecontrolAns*>(
               &_TelecontrolAns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(TelecontrolAns* other);
  friend void swap(TelecontrolAns& a, TelecontrolAns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TelecontrolAns* New() const PROTOBUF_FINAL { return New(NULL); }

  TelecontrolAns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TelecontrolAns& from);
  void MergeFrom(const TelecontrolAns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TelecontrolAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:monitor.protobuf.TelecontrolAns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DateTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:monitor.protobuf.DateTime) */ {
 public:
  DateTime();
  virtual ~DateTime();

  DateTime(const DateTime& from);

  inline DateTime& operator=(const DateTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DateTime(DateTime&& from) noexcept
    : DateTime() {
    *this = ::std::move(from);
  }

  inline DateTime& operator=(DateTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DateTime& default_instance();

  static inline const DateTime* internal_default_instance() {
    return reinterpret_cast<const DateTime*>(
               &_DateTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(DateTime* other);
  friend void swap(DateTime& a, DateTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DateTime* New() const PROTOBUF_FINAL { return New(NULL); }

  DateTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DateTime& from);
  void MergeFrom(const DateTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DateTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:monitor.protobuf.DateTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct protobuf_monitorprotobuf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HeartbeatReq

// .monitor.protobuf.DateTime CurrentTime = 1;
inline bool HeartbeatReq::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void HeartbeatReq::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& HeartbeatReq::currenttime() const {
  const ::monitor::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.HeartbeatReq.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* HeartbeatReq::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.HeartbeatReq.CurrentTime)
  return currenttime_;
}
inline ::monitor::protobuf::DateTime* HeartbeatReq::release_currenttime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.HeartbeatReq.CurrentTime)
  
  ::monitor::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void HeartbeatReq::set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.HeartbeatReq.CurrentTime)
}

// -------------------------------------------------------------------

// HeartbeatAns

// .monitor.protobuf.DateTime CurrentTime = 1;
inline bool HeartbeatAns::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void HeartbeatAns::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& HeartbeatAns::currenttime() const {
  const ::monitor::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.HeartbeatAns.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* HeartbeatAns::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.HeartbeatAns.CurrentTime)
  return currenttime_;
}
inline ::monitor::protobuf::DateTime* HeartbeatAns::release_currenttime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.HeartbeatAns.CurrentTime)
  
  ::monitor::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void HeartbeatAns::set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.HeartbeatAns.CurrentTime)
}

// -------------------------------------------------------------------

// LoginReq

// string Key = 1;
inline void LoginReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::key() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.Key)
  return key_.GetNoArena();
}
inline void LoginReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.Key)
}
#if LANG_CXX11
inline void LoginReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.Key)
}
#endif
inline void LoginReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.Key)
}
inline void LoginReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.Key)
}
inline ::std::string* LoginReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_key() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.Key)
}

// .monitor.protobuf.DateTime SendTime = 2;
inline bool LoginReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void LoginReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& LoginReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* LoginReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* LoginReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void LoginReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.SendTime)
}

// string SerialNumber = 3;
inline void LoginReq::clear_serialnumber() {
  serialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::serialnumber() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.SerialNumber)
  return serialnumber_.GetNoArena();
}
inline void LoginReq::set_serialnumber(const ::std::string& value) {
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.SerialNumber)
}
#if LANG_CXX11
inline void LoginReq::set_serialnumber(::std::string&& value) {
  
  serialnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.SerialNumber)
}
#endif
inline void LoginReq::set_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.SerialNumber)
}
inline void LoginReq::set_serialnumber(const char* value, size_t size) {
  
  serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.SerialNumber)
}
inline ::std::string* LoginReq::mutable_serialnumber() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.SerialNumber)
  return serialnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_serialnumber() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.SerialNumber)
  
  return serialnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_serialnumber(::std::string* serialnumber) {
  if (serialnumber != NULL) {
    
  } else {
    
  }
  serialnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialnumber);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.SerialNumber)
}

// string CtrlProtoVersion = 4;
inline void LoginReq::clear_ctrlprotoversion() {
  ctrlprotoversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlprotoversion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.CtrlProtoVersion)
  return ctrlprotoversion_.GetNoArena();
}
inline void LoginReq::set_ctrlprotoversion(const ::std::string& value) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.CtrlProtoVersion)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlprotoversion(::std::string&& value) {
  
  ctrlprotoversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.CtrlProtoVersion)
}
#endif
inline void LoginReq::set_ctrlprotoversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.CtrlProtoVersion)
}
inline void LoginReq::set_ctrlprotoversion(const char* value, size_t size) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.CtrlProtoVersion)
}
inline ::std::string* LoginReq::mutable_ctrlprotoversion() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.CtrlProtoVersion)
  return ctrlprotoversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlprotoversion() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.CtrlProtoVersion)
  
  return ctrlprotoversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion) {
  if (ctrlprotoversion != NULL) {
    
  } else {
    
  }
  ctrlprotoversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlprotoversion);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.CtrlProtoVersion)
}

// string CtrlVendor = 5;
inline void LoginReq::clear_ctrlvendor() {
  ctrlvendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlvendor() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.CtrlVendor)
  return ctrlvendor_.GetNoArena();
}
inline void LoginReq::set_ctrlvendor(const ::std::string& value) {
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.CtrlVendor)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlvendor(::std::string&& value) {
  
  ctrlvendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.CtrlVendor)
}
#endif
inline void LoginReq::set_ctrlvendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.CtrlVendor)
}
inline void LoginReq::set_ctrlvendor(const char* value, size_t size) {
  
  ctrlvendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.CtrlVendor)
}
inline ::std::string* LoginReq::mutable_ctrlvendor() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.CtrlVendor)
  return ctrlvendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlvendor() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.CtrlVendor)
  
  return ctrlvendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlvendor(::std::string* ctrlvendor) {
  if (ctrlvendor != NULL) {
    
  } else {
    
  }
  ctrlvendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlvendor);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.CtrlVendor)
}

// string CtrlSwVersion = 6;
inline void LoginReq::clear_ctrlswversion() {
  ctrlswversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::ctrlswversion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.CtrlSwVersion)
  return ctrlswversion_.GetNoArena();
}
inline void LoginReq::set_ctrlswversion(const ::std::string& value) {
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.CtrlSwVersion)
}
#if LANG_CXX11
inline void LoginReq::set_ctrlswversion(::std::string&& value) {
  
  ctrlswversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.CtrlSwVersion)
}
#endif
inline void LoginReq::set_ctrlswversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.CtrlSwVersion)
}
inline void LoginReq::set_ctrlswversion(const char* value, size_t size) {
  
  ctrlswversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.CtrlSwVersion)
}
inline ::std::string* LoginReq::mutable_ctrlswversion() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.CtrlSwVersion)
  return ctrlswversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ctrlswversion() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.CtrlSwVersion)
  
  return ctrlswversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ctrlswversion(::std::string* ctrlswversion) {
  if (ctrlswversion != NULL) {
    
  } else {
    
  }
  ctrlswversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlswversion);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.CtrlSwVersion)
}

// .monitor.protobuf.CtrlHardwareType CtrlHwType = 7;
inline void LoginReq::clear_ctrlhwtype() {
  ctrlhwtype_ = 0;
}
inline ::monitor::protobuf::CtrlHardwareType LoginReq::ctrlhwtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.CtrlHwType)
  return static_cast< ::monitor::protobuf::CtrlHardwareType >(ctrlhwtype_);
}
inline void LoginReq::set_ctrlhwtype(::monitor::protobuf::CtrlHardwareType value) {
  
  ctrlhwtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.CtrlHwType)
}

// string DataCenter = 8;
inline void LoginReq::clear_datacenter() {
  datacenter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::datacenter() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.DataCenter)
  return datacenter_.GetNoArena();
}
inline void LoginReq::set_datacenter(const ::std::string& value) {
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.DataCenter)
}
#if LANG_CXX11
inline void LoginReq::set_datacenter(::std::string&& value) {
  
  datacenter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.DataCenter)
}
#endif
inline void LoginReq::set_datacenter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.DataCenter)
}
inline void LoginReq::set_datacenter(const char* value, size_t size) {
  
  datacenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.DataCenter)
}
inline ::std::string* LoginReq::mutable_datacenter() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.DataCenter)
  return datacenter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_datacenter() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.DataCenter)
  
  return datacenter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_datacenter(::std::string* datacenter) {
  if (datacenter != NULL) {
    
  } else {
    
  }
  datacenter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datacenter);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.DataCenter)
}

// string Reserved1 = 101;
inline void LoginReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void LoginReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.Reserved1)
}
#if LANG_CXX11
inline void LoginReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.Reserved1)
}
#endif
inline void LoginReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.Reserved1)
}
inline void LoginReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.Reserved1)
}
inline ::std::string* LoginReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.Reserved1)
}

// string Reserved2 = 102;
inline void LoginReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void LoginReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginReq.Reserved2)
}
#if LANG_CXX11
inline void LoginReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.LoginReq.Reserved2)
}
#endif
inline void LoginReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.LoginReq.Reserved2)
}
inline void LoginReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.LoginReq.Reserved2)
}
inline ::std::string* LoginReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginReq.Reserved2)
}

// -------------------------------------------------------------------

// LoginAns

// .monitor.protobuf.RegistrationStatus Status = 1;
inline void LoginAns::clear_status() {
  status_ = 0;
}
inline ::monitor::protobuf::RegistrationStatus LoginAns::status() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginAns.Status)
  return static_cast< ::monitor::protobuf::RegistrationStatus >(status_);
}
inline void LoginAns::set_status(::monitor::protobuf::RegistrationStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginAns.Status)
}

// .monitor.protobuf.DateTime CurrentTime = 2;
inline bool LoginAns::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void LoginAns::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) delete currenttime_;
  currenttime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& LoginAns::currenttime() const {
  const ::monitor::protobuf::DateTime* p = currenttime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginAns.CurrentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* LoginAns::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LoginAns.CurrentTime)
  return currenttime_;
}
inline ::monitor::protobuf::DateTime* LoginAns::release_currenttime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LoginAns.CurrentTime)
  
  ::monitor::protobuf::DateTime* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline void LoginAns::set_allocated_currenttime(::monitor::protobuf::DateTime* currenttime) {
  delete currenttime_;
  currenttime_ = currenttime;
  if (currenttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LoginAns.CurrentTime)
}

// int32 Interval = 3;
inline void LoginAns::clear_interval() {
  interval_ = 0;
}
inline ::google::protobuf::int32 LoginAns::interval() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LoginAns.Interval)
  return interval_;
}
inline void LoginAns::set_interval(::google::protobuf::int32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LoginAns.Interval)
}

// -------------------------------------------------------------------

// OfflineReq

// .monitor.protobuf.OfflineReason Reason = 1;
inline void OfflineReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::OfflineReason OfflineReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineReq.Reason)
  return static_cast< ::monitor::protobuf::OfflineReason >(reason_);
}
inline void OfflineReq::set_reason(::monitor::protobuf::OfflineReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.OfflineReq.Reason)
}

// .monitor.protobuf.DateTime OfflineTime = 2;
inline bool OfflineReq::has_offlinetime() const {
  return this != internal_default_instance() && offlinetime_ != NULL;
}
inline void OfflineReq::clear_offlinetime() {
  if (GetArenaNoVirtual() == NULL && offlinetime_ != NULL) delete offlinetime_;
  offlinetime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& OfflineReq::offlinetime() const {
  const ::monitor::protobuf::DateTime* p = offlinetime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineReq.OfflineTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* OfflineReq::mutable_offlinetime() {
  
  if (offlinetime_ == NULL) {
    offlinetime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.OfflineReq.OfflineTime)
  return offlinetime_;
}
inline ::monitor::protobuf::DateTime* OfflineReq::release_offlinetime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.OfflineReq.OfflineTime)
  
  ::monitor::protobuf::DateTime* temp = offlinetime_;
  offlinetime_ = NULL;
  return temp;
}
inline void OfflineReq::set_allocated_offlinetime(::monitor::protobuf::DateTime* offlinetime) {
  delete offlinetime_;
  offlinetime_ = offlinetime;
  if (offlinetime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.OfflineReq.OfflineTime)
}

// string CtrlProtoVersion = 3;
inline void OfflineReq::clear_ctrlprotoversion() {
  ctrlprotoversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::ctrlprotoversion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineReq.CtrlProtoVersion)
  return ctrlprotoversion_.GetNoArena();
}
inline void OfflineReq::set_ctrlprotoversion(const ::std::string& value) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.OfflineReq.CtrlProtoVersion)
}
#if LANG_CXX11
inline void OfflineReq::set_ctrlprotoversion(::std::string&& value) {
  
  ctrlprotoversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.OfflineReq.CtrlProtoVersion)
}
#endif
inline void OfflineReq::set_ctrlprotoversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.OfflineReq.CtrlProtoVersion)
}
inline void OfflineReq::set_ctrlprotoversion(const char* value, size_t size) {
  
  ctrlprotoversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.OfflineReq.CtrlProtoVersion)
}
inline ::std::string* OfflineReq::mutable_ctrlprotoversion() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.OfflineReq.CtrlProtoVersion)
  return ctrlprotoversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_ctrlprotoversion() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.OfflineReq.CtrlProtoVersion)
  
  return ctrlprotoversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_ctrlprotoversion(::std::string* ctrlprotoversion) {
  if (ctrlprotoversion != NULL) {
    
  } else {
    
  }
  ctrlprotoversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ctrlprotoversion);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.OfflineReq.CtrlProtoVersion)
}

// string Reserved1 = 101;
inline void OfflineReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void OfflineReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.OfflineReq.Reserved1)
}
#if LANG_CXX11
inline void OfflineReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.OfflineReq.Reserved1)
}
#endif
inline void OfflineReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.OfflineReq.Reserved1)
}
inline void OfflineReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.OfflineReq.Reserved1)
}
inline ::std::string* OfflineReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.OfflineReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.OfflineReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.OfflineReq.Reserved1)
}

// string Reserved2 = 102;
inline void OfflineReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void OfflineReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.OfflineReq.Reserved2)
}
#if LANG_CXX11
inline void OfflineReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.OfflineReq.Reserved2)
}
#endif
inline void OfflineReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.OfflineReq.Reserved2)
}
inline void OfflineReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.OfflineReq.Reserved2)
}
inline ::std::string* OfflineReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.OfflineReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.OfflineReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.OfflineReq.Reserved2)
}

// -------------------------------------------------------------------

// OfflineAns

// .monitor.protobuf.BoolEnum Confirm = 1;
inline void OfflineAns::clear_confirm() {
  confirm_ = 0;
}
inline ::monitor::protobuf::BoolEnum OfflineAns::confirm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.OfflineAns.Confirm)
  return static_cast< ::monitor::protobuf::BoolEnum >(confirm_);
}
inline void OfflineAns::set_confirm(::monitor::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.OfflineAns.Confirm)
}

// -------------------------------------------------------------------

// AlarmReq

// int32 DevIndex = 1;
inline void AlarmReq::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 AlarmReq::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.DevIndex)
  return devindex_;
}
inline void AlarmReq::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.DevIndex)
}

// string SN = 2;
inline void AlarmReq::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmReq::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.SN)
  return sn_.GetNoArena();
}
inline void AlarmReq::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.SN)
}
#if LANG_CXX11
inline void AlarmReq::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmReq.SN)
}
#endif
inline void AlarmReq::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmReq.SN)
}
inline void AlarmReq::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmReq.SN)
}
inline ::std::string* AlarmReq::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmReq.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmReq::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmReq.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmReq::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmReq.SN)
}

// .monitor.protobuf.DevDescType DevType = 3;
inline void AlarmReq::clear_devtype() {
  devtype_ = 0;
}
inline ::monitor::protobuf::DevDescType AlarmReq::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.DevType)
  return static_cast< ::monitor::protobuf::DevDescType >(devtype_);
}
inline void AlarmReq::set_devtype(::monitor::protobuf::DevDescType value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.DevType)
}

// .monitor.protobuf.SendReason Reason = 4;
inline void AlarmReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason AlarmReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void AlarmReq::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.Reason)
}

// .monitor.protobuf.DateTime AlarmTime = 5;
inline bool AlarmReq::has_alarmtime() const {
  return this != internal_default_instance() && alarmtime_ != NULL;
}
inline void AlarmReq::clear_alarmtime() {
  if (GetArenaNoVirtual() == NULL && alarmtime_ != NULL) delete alarmtime_;
  alarmtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& AlarmReq::alarmtime() const {
  const ::monitor::protobuf::DateTime* p = alarmtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.AlarmTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* AlarmReq::mutable_alarmtime() {
  
  if (alarmtime_ == NULL) {
    alarmtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmReq.AlarmTime)
  return alarmtime_;
}
inline ::monitor::protobuf::DateTime* AlarmReq::release_alarmtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmReq.AlarmTime)
  
  ::monitor::protobuf::DateTime* temp = alarmtime_;
  alarmtime_ = NULL;
  return temp;
}
inline void AlarmReq::set_allocated_alarmtime(::monitor::protobuf::DateTime* alarmtime) {
  delete alarmtime_;
  alarmtime_ = alarmtime;
  if (alarmtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmReq.AlarmTime)
}

// repeated .monitor.protobuf.AlarmDataType AlarmDataList = 6;
inline int AlarmReq::alarmdatalist_size() const {
  return alarmdatalist_.size();
}
inline void AlarmReq::clear_alarmdatalist() {
  alarmdatalist_.Clear();
}
inline const ::monitor::protobuf::AlarmDataType& AlarmReq::alarmdatalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.AlarmDataList)
  return alarmdatalist_.Get(index);
}
inline ::monitor::protobuf::AlarmDataType* AlarmReq::mutable_alarmdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmReq.AlarmDataList)
  return alarmdatalist_.Mutable(index);
}
inline ::monitor::protobuf::AlarmDataType* AlarmReq::add_alarmdatalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.AlarmReq.AlarmDataList)
  return alarmdatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >*
AlarmReq::mutable_alarmdatalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.AlarmReq.AlarmDataList)
  return &alarmdatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >&
AlarmReq::alarmdatalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.AlarmReq.AlarmDataList)
  return alarmdatalist_;
}

// string Reserved1 = 101;
inline void AlarmReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AlarmReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.Reserved1)
}
#if LANG_CXX11
inline void AlarmReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmReq.Reserved1)
}
#endif
inline void AlarmReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmReq.Reserved1)
}
inline void AlarmReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmReq.Reserved1)
}
inline ::std::string* AlarmReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmReq.Reserved1)
}

// string Reserved2 = 102;
inline void AlarmReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AlarmReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmReq.Reserved2)
}
#if LANG_CXX11
inline void AlarmReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmReq.Reserved2)
}
#endif
inline void AlarmReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmReq.Reserved2)
}
inline void AlarmReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmReq.Reserved2)
}
inline ::std::string* AlarmReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmReq.Reserved2)
}

// -------------------------------------------------------------------

// AlarmDataType

// int32 AlarmCode = 1;
inline void AlarmDataType::clear_alarmcode() {
  alarmcode_ = 0;
}
inline ::google::protobuf::int32 AlarmDataType::alarmcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmDataType.AlarmCode)
  return alarmcode_;
}
inline void AlarmDataType::set_alarmcode(::google::protobuf::int32 value) {
  
  alarmcode_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmDataType.AlarmCode)
}

// .monitor.protobuf.AlarmStateEnumType AlarmState = 2;
inline void AlarmDataType::clear_alarmstate() {
  alarmstate_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType AlarmDataType::alarmstate() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmDataType.AlarmState)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(alarmstate_);
}
inline void AlarmDataType::set_alarmstate(::monitor::protobuf::AlarmStateEnumType value) {
  
  alarmstate_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmDataType.AlarmState)
}

// string Reserved1 = 101;
inline void AlarmDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AlarmDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmDataType.Reserved1)
}
#if LANG_CXX11
inline void AlarmDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmDataType.Reserved1)
}
#endif
inline void AlarmDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmDataType.Reserved1)
}
inline void AlarmDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmDataType.Reserved1)
}
inline ::std::string* AlarmDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmDataType.Reserved1)
}

// string Reserved2 = 102;
inline void AlarmDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AlarmDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmDataType.Reserved2)
}
#if LANG_CXX11
inline void AlarmDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmDataType.Reserved2)
}
#endif
inline void AlarmDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmDataType.Reserved2)
}
inline void AlarmDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmDataType.Reserved2)
}
inline ::std::string* AlarmDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmDataType.Reserved2)
}

// -------------------------------------------------------------------

// AlarmAns

// int32 DevIndex = 1;
inline void AlarmAns::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 AlarmAns::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.DevIndex)
  return devindex_;
}
inline void AlarmAns::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.DevIndex)
}

// string SN = 2;
inline void AlarmAns::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmAns::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.SN)
  return sn_.GetNoArena();
}
inline void AlarmAns::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.SN)
}
#if LANG_CXX11
inline void AlarmAns::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmAns.SN)
}
#endif
inline void AlarmAns::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmAns.SN)
}
inline void AlarmAns::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmAns.SN)
}
inline ::std::string* AlarmAns::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmAns.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmAns::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmAns.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmAns::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmAns.SN)
}

// .monitor.protobuf.DevDescType DevType = 3;
inline void AlarmAns::clear_devtype() {
  devtype_ = 0;
}
inline ::monitor::protobuf::DevDescType AlarmAns::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.DevType)
  return static_cast< ::monitor::protobuf::DevDescType >(devtype_);
}
inline void AlarmAns::set_devtype(::monitor::protobuf::DevDescType value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.DevType)
}

// .monitor.protobuf.SendReason Reason = 4;
inline void AlarmAns::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason AlarmAns::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void AlarmAns::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.Reason)
}

// .monitor.protobuf.DateTime AlarmTime = 5;
inline bool AlarmAns::has_alarmtime() const {
  return this != internal_default_instance() && alarmtime_ != NULL;
}
inline void AlarmAns::clear_alarmtime() {
  if (GetArenaNoVirtual() == NULL && alarmtime_ != NULL) delete alarmtime_;
  alarmtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& AlarmAns::alarmtime() const {
  const ::monitor::protobuf::DateTime* p = alarmtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.AlarmTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* AlarmAns::mutable_alarmtime() {
  
  if (alarmtime_ == NULL) {
    alarmtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmAns.AlarmTime)
  return alarmtime_;
}
inline ::monitor::protobuf::DateTime* AlarmAns::release_alarmtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmAns.AlarmTime)
  
  ::monitor::protobuf::DateTime* temp = alarmtime_;
  alarmtime_ = NULL;
  return temp;
}
inline void AlarmAns::set_allocated_alarmtime(::monitor::protobuf::DateTime* alarmtime) {
  delete alarmtime_;
  alarmtime_ = alarmtime;
  if (alarmtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmAns.AlarmTime)
}

// repeated .monitor.protobuf.AlarmDataType AlarmDataList = 6;
inline int AlarmAns::alarmdatalist_size() const {
  return alarmdatalist_.size();
}
inline void AlarmAns::clear_alarmdatalist() {
  alarmdatalist_.Clear();
}
inline const ::monitor::protobuf::AlarmDataType& AlarmAns::alarmdatalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.AlarmDataList)
  return alarmdatalist_.Get(index);
}
inline ::monitor::protobuf::AlarmDataType* AlarmAns::mutable_alarmdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmAns.AlarmDataList)
  return alarmdatalist_.Mutable(index);
}
inline ::monitor::protobuf::AlarmDataType* AlarmAns::add_alarmdatalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.AlarmAns.AlarmDataList)
  return alarmdatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >*
AlarmAns::mutable_alarmdatalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.AlarmAns.AlarmDataList)
  return &alarmdatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::AlarmDataType >&
AlarmAns::alarmdatalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.AlarmAns.AlarmDataList)
  return alarmdatalist_;
}

// .monitor.protobuf.BoolEnum Confirm = 7;
inline void AlarmAns::clear_confirm() {
  confirm_ = 0;
}
inline ::monitor::protobuf::BoolEnum AlarmAns::confirm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.Confirm)
  return static_cast< ::monitor::protobuf::BoolEnum >(confirm_);
}
inline void AlarmAns::set_confirm(::monitor::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.Confirm)
}

// string Reserved1 = 101;
inline void AlarmAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmAns::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void AlarmAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.Reserved1)
}
#if LANG_CXX11
inline void AlarmAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmAns.Reserved1)
}
#endif
inline void AlarmAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmAns.Reserved1)
}
inline void AlarmAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmAns.Reserved1)
}
inline ::std::string* AlarmAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmAns.Reserved1)
}

// string Reserved2 = 102;
inline void AlarmAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmAns::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.AlarmAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void AlarmAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.AlarmAns.Reserved2)
}
#if LANG_CXX11
inline void AlarmAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.AlarmAns.Reserved2)
}
#endif
inline void AlarmAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.AlarmAns.Reserved2)
}
inline void AlarmAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.AlarmAns.Reserved2)
}
inline ::std::string* AlarmAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.AlarmAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.AlarmAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.AlarmAns.Reserved2)
}

// -------------------------------------------------------------------

// BillUploadFailReq

// int32 DevIndex = 1;
inline void BillUploadFailReq::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 BillUploadFailReq::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.DevIndex)
  return devindex_;
}
inline void BillUploadFailReq::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailReq.DevIndex)
}

// .monitor.protobuf.SendReason Reason = 2;
inline void BillUploadFailReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason BillUploadFailReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void BillUploadFailReq::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailReq.Reason)
}

// .monitor.protobuf.DateTime SendTime = 3;
inline bool BillUploadFailReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BillUploadFailReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& BillUploadFailReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* BillUploadFailReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* BillUploadFailReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BillUploadFailReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailReq.SendTime)
}

// repeated .monitor.protobuf.BillUpLoadFailDataType FailBillList = 4;
inline int BillUploadFailReq::failbilllist_size() const {
  return failbilllist_.size();
}
inline void BillUploadFailReq::clear_failbilllist() {
  failbilllist_.Clear();
}
inline const ::monitor::protobuf::BillUpLoadFailDataType& BillUploadFailReq::failbilllist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.FailBillList)
  return failbilllist_.Get(index);
}
inline ::monitor::protobuf::BillUpLoadFailDataType* BillUploadFailReq::mutable_failbilllist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailReq.FailBillList)
  return failbilllist_.Mutable(index);
}
inline ::monitor::protobuf::BillUpLoadFailDataType* BillUploadFailReq::add_failbilllist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.BillUploadFailReq.FailBillList)
  return failbilllist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >*
BillUploadFailReq::mutable_failbilllist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.BillUploadFailReq.FailBillList)
  return &failbilllist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >&
BillUploadFailReq::failbilllist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.BillUploadFailReq.FailBillList)
  return failbilllist_;
}

// string Reserved1 = 101;
inline void BillUploadFailReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadFailReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillUploadFailReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailReq.Reserved1)
}
#if LANG_CXX11
inline void BillUploadFailReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUploadFailReq.Reserved1)
}
#endif
inline void BillUploadFailReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUploadFailReq.Reserved1)
}
inline void BillUploadFailReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUploadFailReq.Reserved1)
}
inline ::std::string* BillUploadFailReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadFailReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadFailReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailReq.Reserved1)
}

// string Reserved2 = 102;
inline void BillUploadFailReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadFailReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillUploadFailReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailReq.Reserved2)
}
#if LANG_CXX11
inline void BillUploadFailReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUploadFailReq.Reserved2)
}
#endif
inline void BillUploadFailReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUploadFailReq.Reserved2)
}
inline void BillUploadFailReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUploadFailReq.Reserved2)
}
inline ::std::string* BillUploadFailReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadFailReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadFailReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailReq.Reserved2)
}

// -------------------------------------------------------------------

// BillUpLoadFailDataType

// int32 Reason = 1;
inline void BillUpLoadFailDataType::clear_reason() {
  reason_ = 0;
}
inline ::google::protobuf::int32 BillUpLoadFailDataType::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.Reason)
  return reason_;
}
inline void BillUpLoadFailDataType::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.Reason)
}

// string UnConfirmBillCode = 2;
inline void BillUpLoadFailDataType::clear_unconfirmbillcode() {
  unconfirmbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUpLoadFailDataType::unconfirmbillcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
  return unconfirmbillcode_.GetNoArena();
}
inline void BillUpLoadFailDataType::set_unconfirmbillcode(const ::std::string& value) {
  
  unconfirmbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
}
#if LANG_CXX11
inline void BillUpLoadFailDataType::set_unconfirmbillcode(::std::string&& value) {
  
  unconfirmbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
}
#endif
inline void BillUpLoadFailDataType::set_unconfirmbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  unconfirmbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
}
inline void BillUpLoadFailDataType::set_unconfirmbillcode(const char* value, size_t size) {
  
  unconfirmbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
}
inline ::std::string* BillUpLoadFailDataType::mutable_unconfirmbillcode() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
  return unconfirmbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUpLoadFailDataType::release_unconfirmbillcode() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
  
  return unconfirmbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUpLoadFailDataType::set_allocated_unconfirmbillcode(::std::string* unconfirmbillcode) {
  if (unconfirmbillcode != NULL) {
    
  } else {
    
  }
  unconfirmbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unconfirmbillcode);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUpLoadFailDataType.UnConfirmBillCode)
}

// string UnConfirmCtrlBillCode = 3;
inline void BillUpLoadFailDataType::clear_unconfirmctrlbillcode() {
  unconfirmctrlbillcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUpLoadFailDataType::unconfirmctrlbillcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
  return unconfirmctrlbillcode_.GetNoArena();
}
inline void BillUpLoadFailDataType::set_unconfirmctrlbillcode(const ::std::string& value) {
  
  unconfirmctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
}
#if LANG_CXX11
inline void BillUpLoadFailDataType::set_unconfirmctrlbillcode(::std::string&& value) {
  
  unconfirmctrlbillcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
}
#endif
inline void BillUpLoadFailDataType::set_unconfirmctrlbillcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  unconfirmctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
}
inline void BillUpLoadFailDataType::set_unconfirmctrlbillcode(const char* value, size_t size) {
  
  unconfirmctrlbillcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
}
inline ::std::string* BillUpLoadFailDataType::mutable_unconfirmctrlbillcode() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
  return unconfirmctrlbillcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUpLoadFailDataType::release_unconfirmctrlbillcode() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
  
  return unconfirmctrlbillcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUpLoadFailDataType::set_allocated_unconfirmctrlbillcode(::std::string* unconfirmctrlbillcode) {
  if (unconfirmctrlbillcode != NULL) {
    
  } else {
    
  }
  unconfirmctrlbillcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unconfirmctrlbillcode);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUpLoadFailDataType.UnConfirmCtrlBillCode)
}

// string BillDetail = 4;
inline void BillUpLoadFailDataType::clear_billdetail() {
  billdetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUpLoadFailDataType::billdetail() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
  return billdetail_.GetNoArena();
}
inline void BillUpLoadFailDataType::set_billdetail(const ::std::string& value) {
  
  billdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
}
#if LANG_CXX11
inline void BillUpLoadFailDataType::set_billdetail(::std::string&& value) {
  
  billdetail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
}
#endif
inline void BillUpLoadFailDataType::set_billdetail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  billdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
}
inline void BillUpLoadFailDataType::set_billdetail(const char* value, size_t size) {
  
  billdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
}
inline ::std::string* BillUpLoadFailDataType::mutable_billdetail() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
  return billdetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUpLoadFailDataType::release_billdetail() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
  
  return billdetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUpLoadFailDataType::set_allocated_billdetail(::std::string* billdetail) {
  if (billdetail != NULL) {
    
  } else {
    
  }
  billdetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billdetail);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUpLoadFailDataType.BillDetail)
}

// string Reserved1 = 101;
inline void BillUpLoadFailDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUpLoadFailDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillUpLoadFailDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
}
#if LANG_CXX11
inline void BillUpLoadFailDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
}
#endif
inline void BillUpLoadFailDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
}
inline void BillUpLoadFailDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
}
inline ::std::string* BillUpLoadFailDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUpLoadFailDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUpLoadFailDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUpLoadFailDataType.Reserved1)
}

// string Reserved2 = 102;
inline void BillUpLoadFailDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUpLoadFailDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillUpLoadFailDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
}
#if LANG_CXX11
inline void BillUpLoadFailDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
}
#endif
inline void BillUpLoadFailDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
}
inline void BillUpLoadFailDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
}
inline ::std::string* BillUpLoadFailDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUpLoadFailDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUpLoadFailDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUpLoadFailDataType.Reserved2)
}

// -------------------------------------------------------------------

// BillUploadFailAns

// int32 DevIndex = 1;
inline void BillUploadFailAns::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 BillUploadFailAns::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.DevIndex)
  return devindex_;
}
inline void BillUploadFailAns::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailAns.DevIndex)
}

// .monitor.protobuf.SendReason Reason = 2;
inline void BillUploadFailAns::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason BillUploadFailAns::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void BillUploadFailAns::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailAns.Reason)
}

// .monitor.protobuf.DateTime SendTime = 3;
inline bool BillUploadFailAns::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void BillUploadFailAns::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& BillUploadFailAns::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* BillUploadFailAns::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailAns.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* BillUploadFailAns::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailAns.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void BillUploadFailAns::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailAns.SendTime)
}

// repeated .monitor.protobuf.BillUpLoadFailDataType FailBillList = 4;
inline int BillUploadFailAns::failbilllist_size() const {
  return failbilllist_.size();
}
inline void BillUploadFailAns::clear_failbilllist() {
  failbilllist_.Clear();
}
inline const ::monitor::protobuf::BillUpLoadFailDataType& BillUploadFailAns::failbilllist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.FailBillList)
  return failbilllist_.Get(index);
}
inline ::monitor::protobuf::BillUpLoadFailDataType* BillUploadFailAns::mutable_failbilllist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailAns.FailBillList)
  return failbilllist_.Mutable(index);
}
inline ::monitor::protobuf::BillUpLoadFailDataType* BillUploadFailAns::add_failbilllist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.BillUploadFailAns.FailBillList)
  return failbilllist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >*
BillUploadFailAns::mutable_failbilllist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.BillUploadFailAns.FailBillList)
  return &failbilllist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::BillUpLoadFailDataType >&
BillUploadFailAns::failbilllist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.BillUploadFailAns.FailBillList)
  return failbilllist_;
}

// .monitor.protobuf.BoolEnum Confirm = 5;
inline void BillUploadFailAns::clear_confirm() {
  confirm_ = 0;
}
inline ::monitor::protobuf::BoolEnum BillUploadFailAns::confirm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.Confirm)
  return static_cast< ::monitor::protobuf::BoolEnum >(confirm_);
}
inline void BillUploadFailAns::set_confirm(::monitor::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailAns.Confirm)
}

// string Reserved1 = 101;
inline void BillUploadFailAns::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadFailAns::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.Reserved1)
  return reserved1_.GetNoArena();
}
inline void BillUploadFailAns::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailAns.Reserved1)
}
#if LANG_CXX11
inline void BillUploadFailAns::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUploadFailAns.Reserved1)
}
#endif
inline void BillUploadFailAns::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUploadFailAns.Reserved1)
}
inline void BillUploadFailAns::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUploadFailAns.Reserved1)
}
inline ::std::string* BillUploadFailAns::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailAns.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadFailAns::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailAns.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadFailAns::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailAns.Reserved1)
}

// string Reserved2 = 102;
inline void BillUploadFailAns::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BillUploadFailAns::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BillUploadFailAns.Reserved2)
  return reserved2_.GetNoArena();
}
inline void BillUploadFailAns::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.BillUploadFailAns.Reserved2)
}
#if LANG_CXX11
inline void BillUploadFailAns::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.BillUploadFailAns.Reserved2)
}
#endif
inline void BillUploadFailAns::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.BillUploadFailAns.Reserved2)
}
inline void BillUploadFailAns::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.BillUploadFailAns.Reserved2)
}
inline ::std::string* BillUploadFailAns::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.BillUploadFailAns.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BillUploadFailAns::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.BillUploadFailAns.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BillUploadFailAns::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.BillUploadFailAns.Reserved2)
}

// -------------------------------------------------------------------

// DCModularReq

// repeated int32 DevIndex = 1;
inline int DCModularReq::devindex_size() const {
  return devindex_.size();
}
inline void DCModularReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 DCModularReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularReq.DevIndex)
  return devindex_.Get(index);
}
inline void DCModularReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularReq.DevIndex)
}
inline void DCModularReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.DCModularReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DCModularReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.DCModularReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DCModularReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.DCModularReq.DevIndex)
  return &devindex_;
}

// string Reserved1 = 101;
inline void DCModularReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void DCModularReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularReq.Reserved1)
}
#if LANG_CXX11
inline void DCModularReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularReq.Reserved1)
}
#endif
inline void DCModularReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularReq.Reserved1)
}
inline void DCModularReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularReq.Reserved1)
}
inline ::std::string* DCModularReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularReq.Reserved1)
}

// string Reserved2 = 102;
inline void DCModularReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void DCModularReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularReq.Reserved2)
}
#if LANG_CXX11
inline void DCModularReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularReq.Reserved2)
}
#endif
inline void DCModularReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularReq.Reserved2)
}
inline void DCModularReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularReq.Reserved2)
}
inline ::std::string* DCModularReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularReq.Reserved2)
}

// -------------------------------------------------------------------

// DCModularDataNotifyReq

// .monitor.protobuf.DateTime SendTime = 1;
inline bool DCModularDataNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void DCModularDataNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& DCModularDataNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* DCModularDataNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* DCModularDataNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void DCModularDataNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataNotifyReq.SendTime)
}

// repeated .monitor.protobuf.DCModularDataType DataList = 2;
inline int DCModularDataNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void DCModularDataNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::DCModularDataType& DCModularDataNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::DCModularDataType* DCModularDataNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::DCModularDataType* DCModularDataNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.DCModularDataNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCModularDataType >*
DCModularDataNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.DCModularDataNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCModularDataType >&
DCModularDataNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.DCModularDataNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void DCModularDataNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void DCModularDataNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void DCModularDataNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
}
#endif
inline void DCModularDataNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
}
inline void DCModularDataNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
}
inline ::std::string* DCModularDataNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void DCModularDataNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void DCModularDataNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void DCModularDataNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
}
#endif
inline void DCModularDataNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
}
inline void DCModularDataNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
}
inline ::std::string* DCModularDataNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// DCModularDataType

// int32 DevIndex = 1;
inline void DCModularDataType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.DevIndex)
  return devindex_;
}
inline void DCModularDataType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.DevIndex)
}

// string SN = 2;
inline void DCModularDataType::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SN)
  return sn_.GetNoArena();
}
inline void DCModularDataType::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SN)
}
#if LANG_CXX11
inline void DCModularDataType::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.SN)
}
#endif
inline void DCModularDataType::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.SN)
}
inline void DCModularDataType::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.SN)
}
inline ::std::string* DCModularDataType::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.SN)
}

// int32 RunState = 3;
inline void DCModularDataType::clear_runstate() {
  runstate_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::runstate() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.RunState)
  return runstate_;
}
inline void DCModularDataType::set_runstate(::google::protobuf::int32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.RunState)
}

// int32 Group = 4;
inline void DCModularDataType::clear_group() {
  group_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::group() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.Group)
  return group_;
}
inline void DCModularDataType::set_group(::google::protobuf::int32 value) {
  
  group_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.Group)
}

// double InVa = 5;
inline void DCModularDataType::clear_inva() {
  inva_ = 0;
}
inline double DCModularDataType::inva() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.InVa)
  return inva_;
}
inline void DCModularDataType::set_inva(double value) {
  
  inva_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.InVa)
}

// double InVb = 6;
inline void DCModularDataType::clear_invb() {
  invb_ = 0;
}
inline double DCModularDataType::invb() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.InVb)
  return invb_;
}
inline void DCModularDataType::set_invb(double value) {
  
  invb_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.InVb)
}

// double InVc = 7;
inline void DCModularDataType::clear_invc() {
  invc_ = 0;
}
inline double DCModularDataType::invc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.InVc)
  return invc_;
}
inline void DCModularDataType::set_invc(double value) {
  
  invc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.InVc)
}

// double InI = 8;
inline void DCModularDataType::clear_ini() {
  ini_ = 0;
}
inline double DCModularDataType::ini() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.InI)
  return ini_;
}
inline void DCModularDataType::set_ini(double value) {
  
  ini_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.InI)
}

// double OutV = 9;
inline void DCModularDataType::clear_outv() {
  outv_ = 0;
}
inline double DCModularDataType::outv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.OutV)
  return outv_;
}
inline void DCModularDataType::set_outv(double value) {
  
  outv_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.OutV)
}

// double OutI = 10;
inline void DCModularDataType::clear_outi() {
  outi_ = 0;
}
inline double DCModularDataType::outi() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.OutI)
  return outi_;
}
inline void DCModularDataType::set_outi(double value) {
  
  outi_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.OutI)
}

// sint32 EnvT = 11;
inline void DCModularDataType::clear_envt() {
  envt_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::envt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.EnvT)
  return envt_;
}
inline void DCModularDataType::set_envt(::google::protobuf::int32 value) {
  
  envt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.EnvT)
}

// sint32 M1T = 12;
inline void DCModularDataType::clear_m1t() {
  m1t_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::m1t() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.M1T)
  return m1t_;
}
inline void DCModularDataType::set_m1t(::google::protobuf::int32 value) {
  
  m1t_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.M1T)
}

// int32 RunTime = 13;
inline void DCModularDataType::clear_runtime() {
  runtime_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::runtime() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.RunTime)
  return runtime_;
}
inline void DCModularDataType::set_runtime(::google::protobuf::int32 value) {
  
  runtime_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.RunTime)
}

// int32 SwitchCount = 14;
inline void DCModularDataType::clear_switchcount() {
  switchcount_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::switchcount() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SwitchCount)
  return switchcount_;
}
inline void DCModularDataType::set_switchcount(::google::protobuf::int32 value) {
  
  switchcount_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SwitchCount)
}

// int32 AlarmCode = 15;
inline void DCModularDataType::clear_alarmcode() {
  alarmcode_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::alarmcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.AlarmCode)
  return alarmcode_;
}
inline void DCModularDataType::set_alarmcode(::google::protobuf::int32 value) {
  
  alarmcode_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.AlarmCode)
}

// sint32 SinglePlateT3 = 16;
inline void DCModularDataType::clear_singleplatet3() {
  singleplatet3_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::singleplatet3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SinglePlateT3)
  return singleplatet3_;
}
inline void DCModularDataType::set_singleplatet3(::google::protobuf::int32 value) {
  
  singleplatet3_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SinglePlateT3)
}

// int32 FrameNo = 17;
inline void DCModularDataType::clear_frameno() {
  frameno_ = 0;
}
inline ::google::protobuf::int32 DCModularDataType::frameno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.FrameNo)
  return frameno_;
}
inline void DCModularDataType::set_frameno(::google::protobuf::int32 value) {
  
  frameno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.FrameNo)
}

// string SoftV1 = 18;
inline void DCModularDataType::clear_softv1() {
  softv1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::softv1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SoftV1)
  return softv1_.GetNoArena();
}
inline void DCModularDataType::set_softv1(const ::std::string& value) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SoftV1)
}
#if LANG_CXX11
inline void DCModularDataType::set_softv1(::std::string&& value) {
  
  softv1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.SoftV1)
}
#endif
inline void DCModularDataType::set_softv1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.SoftV1)
}
inline void DCModularDataType::set_softv1(const char* value, size_t size) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.SoftV1)
}
inline ::std::string* DCModularDataType::mutable_softv1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.SoftV1)
  return softv1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_softv1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.SoftV1)
  
  return softv1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_softv1(::std::string* softv1) {
  if (softv1 != NULL) {
    
  } else {
    
  }
  softv1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.SoftV1)
}

// string SoftV2 = 19;
inline void DCModularDataType::clear_softv2() {
  softv2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::softv2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SoftV2)
  return softv2_.GetNoArena();
}
inline void DCModularDataType::set_softv2(const ::std::string& value) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SoftV2)
}
#if LANG_CXX11
inline void DCModularDataType::set_softv2(::std::string&& value) {
  
  softv2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.SoftV2)
}
#endif
inline void DCModularDataType::set_softv2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.SoftV2)
}
inline void DCModularDataType::set_softv2(const char* value, size_t size) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.SoftV2)
}
inline ::std::string* DCModularDataType::mutable_softv2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.SoftV2)
  return softv2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_softv2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.SoftV2)
  
  return softv2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_softv2(::std::string* softv2) {
  if (softv2 != NULL) {
    
  } else {
    
  }
  softv2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.SoftV2)
}

// string SoftV3 = 20;
inline void DCModularDataType::clear_softv3() {
  softv3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::softv3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.SoftV3)
  return softv3_.GetNoArena();
}
inline void DCModularDataType::set_softv3(const ::std::string& value) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.SoftV3)
}
#if LANG_CXX11
inline void DCModularDataType::set_softv3(::std::string&& value) {
  
  softv3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.SoftV3)
}
#endif
inline void DCModularDataType::set_softv3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.SoftV3)
}
inline void DCModularDataType::set_softv3(const char* value, size_t size) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.SoftV3)
}
inline ::std::string* DCModularDataType::mutable_softv3() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.SoftV3)
  return softv3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_softv3() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.SoftV3)
  
  return softv3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_softv3(::std::string* softv3) {
  if (softv3 != NULL) {
    
  } else {
    
  }
  softv3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv3);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.SoftV3)
}

// string HardV = 21;
inline void DCModularDataType::clear_hardv() {
  hardv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::hardv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.HardV)
  return hardv_.GetNoArena();
}
inline void DCModularDataType::set_hardv(const ::std::string& value) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.HardV)
}
#if LANG_CXX11
inline void DCModularDataType::set_hardv(::std::string&& value) {
  
  hardv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.HardV)
}
#endif
inline void DCModularDataType::set_hardv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.HardV)
}
inline void DCModularDataType::set_hardv(const char* value, size_t size) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.HardV)
}
inline ::std::string* DCModularDataType::mutable_hardv() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.HardV)
  return hardv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_hardv() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.HardV)
  
  return hardv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_hardv(::std::string* hardv) {
  if (hardv != NULL) {
    
  } else {
    
  }
  hardv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardv);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.HardV)
}

// string Reserved1 = 101;
inline void DCModularDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void DCModularDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.Reserved1)
}
#if LANG_CXX11
inline void DCModularDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.Reserved1)
}
#endif
inline void DCModularDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.Reserved1)
}
inline void DCModularDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.Reserved1)
}
inline ::std::string* DCModularDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.Reserved1)
}

// string Reserved2 = 102;
inline void DCModularDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DCModularDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCModularDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void DCModularDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCModularDataType.Reserved2)
}
#if LANG_CXX11
inline void DCModularDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.DCModularDataType.Reserved2)
}
#endif
inline void DCModularDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.DCModularDataType.Reserved2)
}
inline void DCModularDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.DCModularDataType.Reserved2)
}
inline ::std::string* DCModularDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCModularDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DCModularDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.DCModularDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DCModularDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.DCModularDataType.Reserved2)
}

// -------------------------------------------------------------------

// ACModularReq

// repeated int32 DevIndex = 1;
inline int ACModularReq::devindex_size() const {
  return devindex_.size();
}
inline void ACModularReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 ACModularReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularReq.DevIndex)
  return devindex_.Get(index);
}
inline void ACModularReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularReq.DevIndex)
}
inline void ACModularReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.ACModularReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ACModularReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.ACModularReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ACModularReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.ACModularReq.DevIndex)
  return &devindex_;
}

// string Reserved1 = 101;
inline void ACModularReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ACModularReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularReq.Reserved1)
}
#if LANG_CXX11
inline void ACModularReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularReq.Reserved1)
}
#endif
inline void ACModularReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularReq.Reserved1)
}
inline void ACModularReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularReq.Reserved1)
}
inline ::std::string* ACModularReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularReq.Reserved1)
}

// string Reserved2 = 102;
inline void ACModularReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ACModularReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularReq.Reserved2)
}
#if LANG_CXX11
inline void ACModularReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularReq.Reserved2)
}
#endif
inline void ACModularReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularReq.Reserved2)
}
inline void ACModularReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularReq.Reserved2)
}
inline ::std::string* ACModularReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularReq.Reserved2)
}

// -------------------------------------------------------------------

// ACModularDataNotifyReq

// .monitor.protobuf.DateTime SendTime = 1;
inline bool ACModularDataNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ACModularDataNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& ACModularDataNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* ACModularDataNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* ACModularDataNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ACModularDataNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataNotifyReq.SendTime)
}

// repeated .monitor.protobuf.ACModularDataType DataList = 2;
inline int ACModularDataNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void ACModularDataNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::ACModularDataType& ACModularDataNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::ACModularDataType* ACModularDataNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::ACModularDataType* ACModularDataNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.ACModularDataNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::ACModularDataType >*
ACModularDataNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.ACModularDataNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::ACModularDataType >&
ACModularDataNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.ACModularDataNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void ACModularDataNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ACModularDataNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void ACModularDataNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
}
#endif
inline void ACModularDataNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
}
inline void ACModularDataNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
}
inline ::std::string* ACModularDataNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void ACModularDataNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ACModularDataNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void ACModularDataNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
}
#endif
inline void ACModularDataNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
}
inline void ACModularDataNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
}
inline ::std::string* ACModularDataNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// ACModularDataType

// int32 DevIndex = 1;
inline void ACModularDataType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.DevIndex)
  return devindex_;
}
inline void ACModularDataType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.DevIndex)
}

// string SN = 2;
inline void ACModularDataType::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.SN)
  return sn_.GetNoArena();
}
inline void ACModularDataType::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.SN)
}
#if LANG_CXX11
inline void ACModularDataType::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.SN)
}
#endif
inline void ACModularDataType::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.SN)
}
inline void ACModularDataType::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.SN)
}
inline ::std::string* ACModularDataType::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.SN)
}

// int32 AlarmCode = 3;
inline void ACModularDataType::clear_alarmcode() {
  alarmcode_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::alarmcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.AlarmCode)
  return alarmcode_;
}
inline void ACModularDataType::set_alarmcode(::google::protobuf::int32 value) {
  
  alarmcode_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.AlarmCode)
}

// int32 RunState = 4;
inline void ACModularDataType::clear_runstate() {
  runstate_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::runstate() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.RunState)
  return runstate_;
}
inline void ACModularDataType::set_runstate(::google::protobuf::int32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.RunState)
}

// double InV = 5;
inline void ACModularDataType::clear_inv() {
  inv_ = 0;
}
inline double ACModularDataType::inv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.InV)
  return inv_;
}
inline void ACModularDataType::set_inv(double value) {
  
  inv_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.InV)
}

// double InI = 6;
inline void ACModularDataType::clear_ini() {
  ini_ = 0;
}
inline double ACModularDataType::ini() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.InI)
  return ini_;
}
inline void ACModularDataType::set_ini(double value) {
  
  ini_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.InI)
}

// double OutV = 7;
inline void ACModularDataType::clear_outv() {
  outv_ = 0;
}
inline double ACModularDataType::outv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.OutV)
  return outv_;
}
inline void ACModularDataType::set_outv(double value) {
  
  outv_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.OutV)
}

// double OutI = 8;
inline void ACModularDataType::clear_outi() {
  outi_ = 0;
}
inline double ACModularDataType::outi() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.OutI)
  return outi_;
}
inline void ACModularDataType::set_outi(double value) {
  
  outi_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.OutI)
}

// double EnvT = 9;
inline void ACModularDataType::clear_envt() {
  envt_ = 0;
}
inline double ACModularDataType::envt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.EnvT)
  return envt_;
}
inline void ACModularDataType::set_envt(double value) {
  
  envt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.EnvT)
}

// sint32 InT = 10;
inline void ACModularDataType::clear_int_() {
  int__ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::int_() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.InT)
  return int__;
}
inline void ACModularDataType::set_int_(::google::protobuf::int32 value) {
  
  int__ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.InT)
}

// sint32 GunT = 11;
inline void ACModularDataType::clear_gunt() {
  gunt_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::gunt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.GunT)
  return gunt_;
}
inline void ACModularDataType::set_gunt(::google::protobuf::int32 value) {
  
  gunt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.GunT)
}

// int32 RunTime = 12;
inline void ACModularDataType::clear_runtime() {
  runtime_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::runtime() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.RunTime)
  return runtime_;
}
inline void ACModularDataType::set_runtime(::google::protobuf::int32 value) {
  
  runtime_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.RunTime)
}

// int32 SwitchCount = 13;
inline void ACModularDataType::clear_switchcount() {
  switchcount_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::switchcount() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.SwitchCount)
  return switchcount_;
}
inline void ACModularDataType::set_switchcount(::google::protobuf::int32 value) {
  
  switchcount_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.SwitchCount)
}

// double ACRatedOutP = 14;
inline void ACModularDataType::clear_acratedoutp() {
  acratedoutp_ = 0;
}
inline double ACModularDataType::acratedoutp() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.ACRatedOutP)
  return acratedoutp_;
}
inline void ACModularDataType::set_acratedoutp(double value) {
  
  acratedoutp_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.ACRatedOutP)
}

// double OutP = 15;
inline void ACModularDataType::clear_outp() {
  outp_ = 0;
}
inline double ACModularDataType::outp() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.OutP)
  return outp_;
}
inline void ACModularDataType::set_outp(double value) {
  
  outp_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.OutP)
}

// double OutQ = 16;
inline void ACModularDataType::clear_outq() {
  outq_ = 0;
}
inline double ACModularDataType::outq() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.OutQ)
  return outq_;
}
inline void ACModularDataType::set_outq(double value) {
  
  outq_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.OutQ)
}

// double S = 17;
inline void ACModularDataType::clear_s() {
  s_ = 0;
}
inline double ACModularDataType::s() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.S)
  return s_;
}
inline void ACModularDataType::set_s(double value) {
  
  s_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.S)
}

// double CPF = 18;
inline void ACModularDataType::clear_cpf() {
  cpf_ = 0;
}
inline double ACModularDataType::cpf() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.CPF)
  return cpf_;
}
inline void ACModularDataType::set_cpf(double value) {
  
  cpf_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.CPF)
}

// double CF = 19;
inline void ACModularDataType::clear_cf() {
  cf_ = 0;
}
inline double ACModularDataType::cf() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.CF)
  return cf_;
}
inline void ACModularDataType::set_cf(double value) {
  
  cf_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.CF)
}

// double KWH = 20;
inline void ACModularDataType::clear_kwh() {
  kwh_ = 0;
}
inline double ACModularDataType::kwh() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.KWH)
  return kwh_;
}
inline void ACModularDataType::set_kwh(double value) {
  
  kwh_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.KWH)
}

// int32 Relay = 21;
inline void ACModularDataType::clear_relay() {
  relay_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::relay() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.Relay)
  return relay_;
}
inline void ACModularDataType::set_relay(::google::protobuf::int32 value) {
  
  relay_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.Relay)
}

// int32 Connect = 22;
inline void ACModularDataType::clear_connect() {
  connect_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::connect() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.Connect)
  return connect_;
}
inline void ACModularDataType::set_connect(::google::protobuf::int32 value) {
  
  connect_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.Connect)
}

// int32 FrameNo = 23;
inline void ACModularDataType::clear_frameno() {
  frameno_ = 0;
}
inline ::google::protobuf::int32 ACModularDataType::frameno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.FrameNo)
  return frameno_;
}
inline void ACModularDataType::set_frameno(::google::protobuf::int32 value) {
  
  frameno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.FrameNo)
}

// string SoftV1 = 24;
inline void ACModularDataType::clear_softv1() {
  softv1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::softv1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.SoftV1)
  return softv1_.GetNoArena();
}
inline void ACModularDataType::set_softv1(const ::std::string& value) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.SoftV1)
}
#if LANG_CXX11
inline void ACModularDataType::set_softv1(::std::string&& value) {
  
  softv1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.SoftV1)
}
#endif
inline void ACModularDataType::set_softv1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.SoftV1)
}
inline void ACModularDataType::set_softv1(const char* value, size_t size) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.SoftV1)
}
inline ::std::string* ACModularDataType::mutable_softv1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.SoftV1)
  return softv1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_softv1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.SoftV1)
  
  return softv1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_softv1(::std::string* softv1) {
  if (softv1 != NULL) {
    
  } else {
    
  }
  softv1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.SoftV1)
}

// string SoftV2 = 25;
inline void ACModularDataType::clear_softv2() {
  softv2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::softv2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.SoftV2)
  return softv2_.GetNoArena();
}
inline void ACModularDataType::set_softv2(const ::std::string& value) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.SoftV2)
}
#if LANG_CXX11
inline void ACModularDataType::set_softv2(::std::string&& value) {
  
  softv2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.SoftV2)
}
#endif
inline void ACModularDataType::set_softv2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.SoftV2)
}
inline void ACModularDataType::set_softv2(const char* value, size_t size) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.SoftV2)
}
inline ::std::string* ACModularDataType::mutable_softv2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.SoftV2)
  return softv2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_softv2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.SoftV2)
  
  return softv2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_softv2(::std::string* softv2) {
  if (softv2 != NULL) {
    
  } else {
    
  }
  softv2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.SoftV2)
}

// string SoftV3 = 26;
inline void ACModularDataType::clear_softv3() {
  softv3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::softv3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.SoftV3)
  return softv3_.GetNoArena();
}
inline void ACModularDataType::set_softv3(const ::std::string& value) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.SoftV3)
}
#if LANG_CXX11
inline void ACModularDataType::set_softv3(::std::string&& value) {
  
  softv3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.SoftV3)
}
#endif
inline void ACModularDataType::set_softv3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.SoftV3)
}
inline void ACModularDataType::set_softv3(const char* value, size_t size) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.SoftV3)
}
inline ::std::string* ACModularDataType::mutable_softv3() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.SoftV3)
  return softv3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_softv3() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.SoftV3)
  
  return softv3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_softv3(::std::string* softv3) {
  if (softv3 != NULL) {
    
  } else {
    
  }
  softv3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv3);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.SoftV3)
}

// string HardV = 27;
inline void ACModularDataType::clear_hardv() {
  hardv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::hardv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.HardV)
  return hardv_.GetNoArena();
}
inline void ACModularDataType::set_hardv(const ::std::string& value) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.HardV)
}
#if LANG_CXX11
inline void ACModularDataType::set_hardv(::std::string&& value) {
  
  hardv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.HardV)
}
#endif
inline void ACModularDataType::set_hardv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.HardV)
}
inline void ACModularDataType::set_hardv(const char* value, size_t size) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.HardV)
}
inline ::std::string* ACModularDataType::mutable_hardv() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.HardV)
  return hardv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_hardv() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.HardV)
  
  return hardv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_hardv(::std::string* hardv) {
  if (hardv != NULL) {
    
  } else {
    
  }
  hardv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardv);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.HardV)
}

// string Reserved1 = 101;
inline void ACModularDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ACModularDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.Reserved1)
}
#if LANG_CXX11
inline void ACModularDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.Reserved1)
}
#endif
inline void ACModularDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.Reserved1)
}
inline void ACModularDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.Reserved1)
}
inline ::std::string* ACModularDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.Reserved1)
}

// string Reserved2 = 102;
inline void ACModularDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ACModularDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ACModularDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ACModularDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ACModularDataType.Reserved2)
}
#if LANG_CXX11
inline void ACModularDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ACModularDataType.Reserved2)
}
#endif
inline void ACModularDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ACModularDataType.Reserved2)
}
inline void ACModularDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ACModularDataType.Reserved2)
}
inline ::std::string* ACModularDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ACModularDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ACModularDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ACModularDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ACModularDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ACModularDataType.Reserved2)
}

// -------------------------------------------------------------------

// PduReq

// repeated int32 DevIndex = 1;
inline int PduReq::devindex_size() const {
  return devindex_.size();
}
inline void PduReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 PduReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduReq.DevIndex)
  return devindex_.Get(index);
}
inline void PduReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduReq.DevIndex)
}
inline void PduReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.PduReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PduReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.PduReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PduReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.PduReq.DevIndex)
  return &devindex_;
}

// string Reserved1 = 101;
inline void PduReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void PduReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduReq.Reserved1)
}
#if LANG_CXX11
inline void PduReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduReq.Reserved1)
}
#endif
inline void PduReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduReq.Reserved1)
}
inline void PduReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduReq.Reserved1)
}
inline ::std::string* PduReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduReq.Reserved1)
}

// string Reserved2 = 102;
inline void PduReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void PduReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduReq.Reserved2)
}
#if LANG_CXX11
inline void PduReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduReq.Reserved2)
}
#endif
inline void PduReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduReq.Reserved2)
}
inline void PduReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduReq.Reserved2)
}
inline ::std::string* PduReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduReq.Reserved2)
}

// -------------------------------------------------------------------

// PduDataNotifyReq

// .monitor.protobuf.DateTime SendTime = 1;
inline bool PduDataNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void PduDataNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& PduDataNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* PduDataNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* PduDataNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void PduDataNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataNotifyReq.SendTime)
}

// repeated .monitor.protobuf.PduDataType DataList = 2;
inline int PduDataNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void PduDataNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::PduDataType& PduDataNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::PduDataType* PduDataNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::PduDataType* PduDataNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.PduDataNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::PduDataType >*
PduDataNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.PduDataNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::PduDataType >&
PduDataNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.PduDataNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void PduDataNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void PduDataNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void PduDataNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataNotifyReq.Reserved1)
}
#endif
inline void PduDataNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataNotifyReq.Reserved1)
}
inline void PduDataNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataNotifyReq.Reserved1)
}
inline ::std::string* PduDataNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void PduDataNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void PduDataNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void PduDataNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataNotifyReq.Reserved2)
}
#endif
inline void PduDataNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataNotifyReq.Reserved2)
}
inline void PduDataNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataNotifyReq.Reserved2)
}
inline ::std::string* PduDataNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// PduDataType

// int32 DevIndex = 1;
inline void PduDataType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 PduDataType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.DevIndex)
  return devindex_;
}
inline void PduDataType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.DevIndex)
}

// string SN = 2;
inline void PduDataType::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.SN)
  return sn_.GetNoArena();
}
inline void PduDataType::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.SN)
}
#if LANG_CXX11
inline void PduDataType::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.SN)
}
#endif
inline void PduDataType::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.SN)
}
inline void PduDataType::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.SN)
}
inline ::std::string* PduDataType::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.SN)
}

// int32 RunState = 3;
inline void PduDataType::clear_runstate() {
  runstate_ = 0;
}
inline ::google::protobuf::int32 PduDataType::runstate() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.RunState)
  return runstate_;
}
inline void PduDataType::set_runstate(::google::protobuf::int32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.RunState)
}

// double OutV = 4;
inline void PduDataType::clear_outv() {
  outv_ = 0;
}
inline double PduDataType::outv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.OutV)
  return outv_;
}
inline void PduDataType::set_outv(double value) {
  
  outv_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.OutV)
}

// double OutI = 5;
inline void PduDataType::clear_outi() {
  outi_ = 0;
}
inline double PduDataType::outi() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.OutI)
  return outi_;
}
inline void PduDataType::set_outi(double value) {
  
  outi_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.OutI)
}

// sint32 EnvT = 6;
inline void PduDataType::clear_envt() {
  envt_ = 0;
}
inline ::google::protobuf::int32 PduDataType::envt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.EnvT)
  return envt_;
}
inline void PduDataType::set_envt(::google::protobuf::int32 value) {
  
  envt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.EnvT)
}

// sint32 RadT = 7;
inline void PduDataType::clear_radt() {
  radt_ = 0;
}
inline ::google::protobuf::int32 PduDataType::radt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.RadT)
  return radt_;
}
inline void PduDataType::set_radt(::google::protobuf::int32 value) {
  
  radt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.RadT)
}

// int32 RunTime = 8;
inline void PduDataType::clear_runtime() {
  runtime_ = 0;
}
inline ::google::protobuf::int32 PduDataType::runtime() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.RunTime)
  return runtime_;
}
inline void PduDataType::set_runtime(::google::protobuf::int32 value) {
  
  runtime_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.RunTime)
}

// int32 SwitchCount = 9;
inline void PduDataType::clear_switchcount() {
  switchcount_ = 0;
}
inline ::google::protobuf::int32 PduDataType::switchcount() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.SwitchCount)
  return switchcount_;
}
inline void PduDataType::set_switchcount(::google::protobuf::int32 value) {
  
  switchcount_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.SwitchCount)
}

// double KWH = 10;
inline void PduDataType::clear_kwh() {
  kwh_ = 0;
}
inline double PduDataType::kwh() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.KWH)
  return kwh_;
}
inline void PduDataType::set_kwh(double value) {
  
  kwh_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.KWH)
}

// int32 NegR = 11;
inline void PduDataType::clear_negr() {
  negr_ = 0;
}
inline ::google::protobuf::int32 PduDataType::negr() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.NegR)
  return negr_;
}
inline void PduDataType::set_negr(::google::protobuf::int32 value) {
  
  negr_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.NegR)
}

// int32 PosR = 12;
inline void PduDataType::clear_posr() {
  posr_ = 0;
}
inline ::google::protobuf::int32 PduDataType::posr() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.PosR)
  return posr_;
}
inline void PduDataType::set_posr(::google::protobuf::int32 value) {
  
  posr_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.PosR)
}

// int32 AlarmCode = 13;
inline void PduDataType::clear_alarmcode() {
  alarmcode_ = 0;
}
inline ::google::protobuf::int32 PduDataType::alarmcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.AlarmCode)
  return alarmcode_;
}
inline void PduDataType::set_alarmcode(::google::protobuf::int32 value) {
  
  alarmcode_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.AlarmCode)
}

// int32 FrameNo = 14;
inline void PduDataType::clear_frameno() {
  frameno_ = 0;
}
inline ::google::protobuf::int32 PduDataType::frameno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.FrameNo)
  return frameno_;
}
inline void PduDataType::set_frameno(::google::protobuf::int32 value) {
  
  frameno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.FrameNo)
}

// string SoftV1 = 15;
inline void PduDataType::clear_softv1() {
  softv1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::softv1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.SoftV1)
  return softv1_.GetNoArena();
}
inline void PduDataType::set_softv1(const ::std::string& value) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.SoftV1)
}
#if LANG_CXX11
inline void PduDataType::set_softv1(::std::string&& value) {
  
  softv1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.SoftV1)
}
#endif
inline void PduDataType::set_softv1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.SoftV1)
}
inline void PduDataType::set_softv1(const char* value, size_t size) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.SoftV1)
}
inline ::std::string* PduDataType::mutable_softv1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.SoftV1)
  return softv1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_softv1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.SoftV1)
  
  return softv1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_softv1(::std::string* softv1) {
  if (softv1 != NULL) {
    
  } else {
    
  }
  softv1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.SoftV1)
}

// string SoftV2 = 16;
inline void PduDataType::clear_softv2() {
  softv2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::softv2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.SoftV2)
  return softv2_.GetNoArena();
}
inline void PduDataType::set_softv2(const ::std::string& value) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.SoftV2)
}
#if LANG_CXX11
inline void PduDataType::set_softv2(::std::string&& value) {
  
  softv2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.SoftV2)
}
#endif
inline void PduDataType::set_softv2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.SoftV2)
}
inline void PduDataType::set_softv2(const char* value, size_t size) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.SoftV2)
}
inline ::std::string* PduDataType::mutable_softv2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.SoftV2)
  return softv2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_softv2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.SoftV2)
  
  return softv2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_softv2(::std::string* softv2) {
  if (softv2 != NULL) {
    
  } else {
    
  }
  softv2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.SoftV2)
}

// string SoftV3 = 17;
inline void PduDataType::clear_softv3() {
  softv3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::softv3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.SoftV3)
  return softv3_.GetNoArena();
}
inline void PduDataType::set_softv3(const ::std::string& value) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.SoftV3)
}
#if LANG_CXX11
inline void PduDataType::set_softv3(::std::string&& value) {
  
  softv3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.SoftV3)
}
#endif
inline void PduDataType::set_softv3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.SoftV3)
}
inline void PduDataType::set_softv3(const char* value, size_t size) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.SoftV3)
}
inline ::std::string* PduDataType::mutable_softv3() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.SoftV3)
  return softv3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_softv3() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.SoftV3)
  
  return softv3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_softv3(::std::string* softv3) {
  if (softv3 != NULL) {
    
  } else {
    
  }
  softv3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv3);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.SoftV3)
}

// string HardV = 18;
inline void PduDataType::clear_hardv() {
  hardv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::hardv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.HardV)
  return hardv_.GetNoArena();
}
inline void PduDataType::set_hardv(const ::std::string& value) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.HardV)
}
#if LANG_CXX11
inline void PduDataType::set_hardv(::std::string&& value) {
  
  hardv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.HardV)
}
#endif
inline void PduDataType::set_hardv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.HardV)
}
inline void PduDataType::set_hardv(const char* value, size_t size) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.HardV)
}
inline ::std::string* PduDataType::mutable_hardv() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.HardV)
  return hardv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_hardv() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.HardV)
  
  return hardv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_hardv(::std::string* hardv) {
  if (hardv != NULL) {
    
  } else {
    
  }
  hardv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardv);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.HardV)
}

// string Reserved1 = 101;
inline void PduDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void PduDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.Reserved1)
}
#if LANG_CXX11
inline void PduDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.Reserved1)
}
#endif
inline void PduDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.Reserved1)
}
inline void PduDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.Reserved1)
}
inline ::std::string* PduDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.Reserved1)
}

// string Reserved2 = 102;
inline void PduDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PduDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.PduDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void PduDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.PduDataType.Reserved2)
}
#if LANG_CXX11
inline void PduDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.PduDataType.Reserved2)
}
#endif
inline void PduDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.PduDataType.Reserved2)
}
inline void PduDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.PduDataType.Reserved2)
}
inline ::std::string* PduDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.PduDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PduDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.PduDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PduDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.PduDataType.Reserved2)
}

// -------------------------------------------------------------------

// CcuReq

// repeated int32 DevIndex = 1;
inline int CcuReq::devindex_size() const {
  return devindex_.size();
}
inline void CcuReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 CcuReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuReq.DevIndex)
  return devindex_.Get(index);
}
inline void CcuReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuReq.DevIndex)
}
inline void CcuReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.CcuReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CcuReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.CcuReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CcuReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.CcuReq.DevIndex)
  return &devindex_;
}

// string Reserved1 = 101;
inline void CcuReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void CcuReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuReq.Reserved1)
}
#if LANG_CXX11
inline void CcuReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuReq.Reserved1)
}
#endif
inline void CcuReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuReq.Reserved1)
}
inline void CcuReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuReq.Reserved1)
}
inline ::std::string* CcuReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuReq.Reserved1)
}

// string Reserved2 = 102;
inline void CcuReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void CcuReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuReq.Reserved2)
}
#if LANG_CXX11
inline void CcuReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuReq.Reserved2)
}
#endif
inline void CcuReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuReq.Reserved2)
}
inline void CcuReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuReq.Reserved2)
}
inline ::std::string* CcuReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuReq.Reserved2)
}

// -------------------------------------------------------------------

// CcuDataNotifyReq

// .monitor.protobuf.DateTime SendTime = 1;
inline bool CcuDataNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void CcuDataNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& CcuDataNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* CcuDataNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* CcuDataNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void CcuDataNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataNotifyReq.SendTime)
}

// repeated .monitor.protobuf.CcuDataType DataList = 2;
inline int CcuDataNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void CcuDataNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::CcuDataType& CcuDataNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::CcuDataType* CcuDataNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::CcuDataType* CcuDataNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.CcuDataNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::CcuDataType >*
CcuDataNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.CcuDataNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::CcuDataType >&
CcuDataNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.CcuDataNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void CcuDataNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void CcuDataNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void CcuDataNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataNotifyReq.Reserved1)
}
#endif
inline void CcuDataNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataNotifyReq.Reserved1)
}
inline void CcuDataNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataNotifyReq.Reserved1)
}
inline ::std::string* CcuDataNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void CcuDataNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void CcuDataNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void CcuDataNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataNotifyReq.Reserved2)
}
#endif
inline void CcuDataNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataNotifyReq.Reserved2)
}
inline void CcuDataNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataNotifyReq.Reserved2)
}
inline ::std::string* CcuDataNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// CcuDataType

// int32 DevIndex = 1;
inline void CcuDataType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.DevIndex)
  return devindex_;
}
inline void CcuDataType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.DevIndex)
}

// int32 RunState = 2;
inline void CcuDataType::clear_runstate() {
  runstate_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::runstate() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.RunState)
  return runstate_;
}
inline void CcuDataType::set_runstate(::google::protobuf::int32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.RunState)
}

// int32 InConStatus = 3;
inline void CcuDataType::clear_inconstatus() {
  inconstatus_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::inconstatus() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.InConStatus)
  return inconstatus_;
}
inline void CcuDataType::set_inconstatus(::google::protobuf::int32 value) {
  
  inconstatus_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.InConStatus)
}

// int32 LinkConStatus = 4;
inline void CcuDataType::clear_linkconstatus() {
  linkconstatus_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::linkconstatus() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.LinkConStatus)
  return linkconstatus_;
}
inline void CcuDataType::set_linkconstatus(::google::protobuf::int32 value) {
  
  linkconstatus_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.LinkConStatus)
}

// int32 SystemType = 5;
inline void CcuDataType::clear_systemtype() {
  systemtype_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::systemtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.SystemType)
  return systemtype_;
}
inline void CcuDataType::set_systemtype(::google::protobuf::int32 value) {
  
  systemtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.SystemType)
}

// int32 RunTime = 6;
inline void CcuDataType::clear_runtime() {
  runtime_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::runtime() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.RunTime)
  return runtime_;
}
inline void CcuDataType::set_runtime(::google::protobuf::int32 value) {
  
  runtime_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.RunTime)
}

// sint32 EnvT = 7;
inline void CcuDataType::clear_envt() {
  envt_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::envt() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.EnvT)
  return envt_;
}
inline void CcuDataType::set_envt(::google::protobuf::int32 value) {
  
  envt_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.EnvT)
}

// double DcCabRateP = 8;
inline void CcuDataType::clear_dccabratep() {
  dccabratep_ = 0;
}
inline double CcuDataType::dccabratep() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.DcCabRateP)
  return dccabratep_;
}
inline void CcuDataType::set_dccabratep(double value) {
  
  dccabratep_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.DcCabRateP)
}

// double DcCabCurP = 9;
inline void CcuDataType::clear_dccabcurp() {
  dccabcurp_ = 0;
}
inline double CcuDataType::dccabcurp() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.DcCabCurP)
  return dccabcurp_;
}
inline void CcuDataType::set_dccabcurp(double value) {
  
  dccabcurp_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.DcCabCurP)
}

// int32 AlarmCode = 10;
inline void CcuDataType::clear_alarmcode() {
  alarmcode_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::alarmcode() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.AlarmCode)
  return alarmcode_;
}
inline void CcuDataType::set_alarmcode(::google::protobuf::int32 value) {
  
  alarmcode_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.AlarmCode)
}

// int32 FrameNo = 11;
inline void CcuDataType::clear_frameno() {
  frameno_ = 0;
}
inline ::google::protobuf::int32 CcuDataType::frameno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.FrameNo)
  return frameno_;
}
inline void CcuDataType::set_frameno(::google::protobuf::int32 value) {
  
  frameno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.FrameNo)
}

// string SoftV1 = 12;
inline void CcuDataType::clear_softv1() {
  softv1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::softv1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.SoftV1)
  return softv1_.GetNoArena();
}
inline void CcuDataType::set_softv1(const ::std::string& value) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.SoftV1)
}
#if LANG_CXX11
inline void CcuDataType::set_softv1(::std::string&& value) {
  
  softv1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.SoftV1)
}
#endif
inline void CcuDataType::set_softv1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.SoftV1)
}
inline void CcuDataType::set_softv1(const char* value, size_t size) {
  
  softv1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.SoftV1)
}
inline ::std::string* CcuDataType::mutable_softv1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.SoftV1)
  return softv1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_softv1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.SoftV1)
  
  return softv1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_softv1(::std::string* softv1) {
  if (softv1 != NULL) {
    
  } else {
    
  }
  softv1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.SoftV1)
}

// string SoftV2 = 13;
inline void CcuDataType::clear_softv2() {
  softv2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::softv2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.SoftV2)
  return softv2_.GetNoArena();
}
inline void CcuDataType::set_softv2(const ::std::string& value) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.SoftV2)
}
#if LANG_CXX11
inline void CcuDataType::set_softv2(::std::string&& value) {
  
  softv2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.SoftV2)
}
#endif
inline void CcuDataType::set_softv2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.SoftV2)
}
inline void CcuDataType::set_softv2(const char* value, size_t size) {
  
  softv2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.SoftV2)
}
inline ::std::string* CcuDataType::mutable_softv2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.SoftV2)
  return softv2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_softv2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.SoftV2)
  
  return softv2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_softv2(::std::string* softv2) {
  if (softv2 != NULL) {
    
  } else {
    
  }
  softv2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.SoftV2)
}

// string SoftV3 = 14;
inline void CcuDataType::clear_softv3() {
  softv3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::softv3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.SoftV3)
  return softv3_.GetNoArena();
}
inline void CcuDataType::set_softv3(const ::std::string& value) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.SoftV3)
}
#if LANG_CXX11
inline void CcuDataType::set_softv3(::std::string&& value) {
  
  softv3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.SoftV3)
}
#endif
inline void CcuDataType::set_softv3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.SoftV3)
}
inline void CcuDataType::set_softv3(const char* value, size_t size) {
  
  softv3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.SoftV3)
}
inline ::std::string* CcuDataType::mutable_softv3() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.SoftV3)
  return softv3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_softv3() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.SoftV3)
  
  return softv3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_softv3(::std::string* softv3) {
  if (softv3 != NULL) {
    
  } else {
    
  }
  softv3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softv3);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.SoftV3)
}

// string HardV = 15;
inline void CcuDataType::clear_hardv() {
  hardv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::hardv() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.HardV)
  return hardv_.GetNoArena();
}
inline void CcuDataType::set_hardv(const ::std::string& value) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.HardV)
}
#if LANG_CXX11
inline void CcuDataType::set_hardv(::std::string&& value) {
  
  hardv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.HardV)
}
#endif
inline void CcuDataType::set_hardv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.HardV)
}
inline void CcuDataType::set_hardv(const char* value, size_t size) {
  
  hardv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.HardV)
}
inline ::std::string* CcuDataType::mutable_hardv() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.HardV)
  return hardv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_hardv() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.HardV)
  
  return hardv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_hardv(::std::string* hardv) {
  if (hardv != NULL) {
    
  } else {
    
  }
  hardv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardv);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.HardV)
}

// string SN = 16;
inline void CcuDataType::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::sn() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.SN)
  return sn_.GetNoArena();
}
inline void CcuDataType::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.SN)
}
#if LANG_CXX11
inline void CcuDataType::set_sn(::std::string&& value) {
  
  sn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.SN)
}
#endif
inline void CcuDataType::set_sn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.SN)
}
inline void CcuDataType::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.SN)
}
inline ::std::string* CcuDataType::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.SN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_sn() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.SN)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.SN)
}

// string Reserved1 = 101;
inline void CcuDataType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void CcuDataType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.Reserved1)
}
#if LANG_CXX11
inline void CcuDataType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.Reserved1)
}
#endif
inline void CcuDataType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.Reserved1)
}
inline void CcuDataType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.Reserved1)
}
inline ::std::string* CcuDataType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.Reserved1)
}

// string Reserved2 = 102;
inline void CcuDataType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CcuDataType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CcuDataType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void CcuDataType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.CcuDataType.Reserved2)
}
#if LANG_CXX11
inline void CcuDataType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.CcuDataType.Reserved2)
}
#endif
inline void CcuDataType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.CcuDataType.Reserved2)
}
inline void CcuDataType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.CcuDataType.Reserved2)
}
inline ::std::string* CcuDataType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.CcuDataType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CcuDataType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.CcuDataType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CcuDataType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.CcuDataType.Reserved2)
}

// -------------------------------------------------------------------

// ControlboxDataReq

// string Reserved1 = 101;
inline void ControlboxDataReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControlboxDataReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ControlboxDataReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataReq.Reserved1)
}
#if LANG_CXX11
inline void ControlboxDataReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ControlboxDataReq.Reserved1)
}
#endif
inline void ControlboxDataReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ControlboxDataReq.Reserved1)
}
inline void ControlboxDataReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ControlboxDataReq.Reserved1)
}
inline ::std::string* ControlboxDataReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlboxDataReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlboxDataReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataReq.Reserved1)
}

// string Reserved2 = 102;
inline void ControlboxDataReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControlboxDataReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ControlboxDataReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataReq.Reserved2)
}
#if LANG_CXX11
inline void ControlboxDataReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ControlboxDataReq.Reserved2)
}
#endif
inline void ControlboxDataReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ControlboxDataReq.Reserved2)
}
inline void ControlboxDataReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ControlboxDataReq.Reserved2)
}
inline ::std::string* ControlboxDataReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlboxDataReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlboxDataReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataReq.Reserved2)
}

// -------------------------------------------------------------------

// ControlboxDataNotifyReq

// .monitor.protobuf.DateTime SendTime = 1;
inline bool ControlboxDataNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void ControlboxDataNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& ControlboxDataNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* ControlboxDataNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* ControlboxDataNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void ControlboxDataNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataNotifyReq.SendTime)
}

// .monitor.protobuf.BoxType BoxData = 2;
inline bool ControlboxDataNotifyReq::has_boxdata() const {
  return this != internal_default_instance() && boxdata_ != NULL;
}
inline void ControlboxDataNotifyReq::clear_boxdata() {
  if (GetArenaNoVirtual() == NULL && boxdata_ != NULL) delete boxdata_;
  boxdata_ = NULL;
}
inline const ::monitor::protobuf::BoxType& ControlboxDataNotifyReq::boxdata() const {
  const ::monitor::protobuf::BoxType* p = boxdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.BoxData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::BoxType*>(
      &::monitor::protobuf::_BoxType_default_instance_);
}
inline ::monitor::protobuf::BoxType* ControlboxDataNotifyReq::mutable_boxdata() {
  
  if (boxdata_ == NULL) {
    boxdata_ = new ::monitor::protobuf::BoxType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.BoxData)
  return boxdata_;
}
inline ::monitor::protobuf::BoxType* ControlboxDataNotifyReq::release_boxdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataNotifyReq.BoxData)
  
  ::monitor::protobuf::BoxType* temp = boxdata_;
  boxdata_ = NULL;
  return temp;
}
inline void ControlboxDataNotifyReq::set_allocated_boxdata(::monitor::protobuf::BoxType* boxdata) {
  delete boxdata_;
  boxdata_ = boxdata;
  if (boxdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataNotifyReq.BoxData)
}

// .monitor.protobuf.SignalType BrkValue = 3;
inline void ControlboxDataNotifyReq::clear_brkvalue() {
  brkvalue_ = 0;
}
inline ::monitor::protobuf::SignalType ControlboxDataNotifyReq::brkvalue() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.BrkValue)
  return static_cast< ::monitor::protobuf::SignalType >(brkvalue_);
}
inline void ControlboxDataNotifyReq::set_brkvalue(::monitor::protobuf::SignalType value) {
  
  brkvalue_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.BrkValue)
}

// .monitor.protobuf.MeterType meter = 4;
inline bool ControlboxDataNotifyReq::has_meter() const {
  return this != internal_default_instance() && meter_ != NULL;
}
inline void ControlboxDataNotifyReq::clear_meter() {
  if (GetArenaNoVirtual() == NULL && meter_ != NULL) delete meter_;
  meter_ = NULL;
}
inline const ::monitor::protobuf::MeterType& ControlboxDataNotifyReq::meter() const {
  const ::monitor::protobuf::MeterType* p = meter_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.meter)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::MeterType*>(
      &::monitor::protobuf::_MeterType_default_instance_);
}
inline ::monitor::protobuf::MeterType* ControlboxDataNotifyReq::mutable_meter() {
  
  if (meter_ == NULL) {
    meter_ = new ::monitor::protobuf::MeterType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.meter)
  return meter_;
}
inline ::monitor::protobuf::MeterType* ControlboxDataNotifyReq::release_meter() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataNotifyReq.meter)
  
  ::monitor::protobuf::MeterType* temp = meter_;
  meter_ = NULL;
  return temp;
}
inline void ControlboxDataNotifyReq::set_allocated_meter(::monitor::protobuf::MeterType* meter) {
  delete meter_;
  meter_ = meter;
  if (meter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataNotifyReq.meter)
}

// .monitor.protobuf.AlarmStateEnumType MeterFault = 5;
inline void ControlboxDataNotifyReq::clear_meterfault() {
  meterfault_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType ControlboxDataNotifyReq::meterfault() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.MeterFault)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(meterfault_);
}
inline void ControlboxDataNotifyReq::set_meterfault(::monitor::protobuf::AlarmStateEnumType value) {
  
  meterfault_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.MeterFault)
}

// .monitor.protobuf.AlarmStateEnumType SurgeProSignal = 6;
inline void ControlboxDataNotifyReq::clear_surgeprosignal() {
  surgeprosignal_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType ControlboxDataNotifyReq::surgeprosignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.SurgeProSignal)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(surgeprosignal_);
}
inline void ControlboxDataNotifyReq::set_surgeprosignal(::monitor::protobuf::AlarmStateEnumType value) {
  
  surgeprosignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.SurgeProSignal)
}

// .monitor.protobuf.AlarmStateEnumType AuxType = 7;
inline void ControlboxDataNotifyReq::clear_auxtype() {
  auxtype_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType ControlboxDataNotifyReq::auxtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.AuxType)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(auxtype_);
}
inline void ControlboxDataNotifyReq::set_auxtype(::monitor::protobuf::AlarmStateEnumType value) {
  
  auxtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.AuxType)
}

// .monitor.protobuf.SignalType MicroBrk = 8;
inline void ControlboxDataNotifyReq::clear_microbrk() {
  microbrk_ = 0;
}
inline ::monitor::protobuf::SignalType ControlboxDataNotifyReq::microbrk() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.MicroBrk)
  return static_cast< ::monitor::protobuf::SignalType >(microbrk_);
}
inline void ControlboxDataNotifyReq::set_microbrk(::monitor::protobuf::SignalType value) {
  
  microbrk_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.MicroBrk)
}

// repeated .monitor.protobuf.SlotType slot = 9;
inline int ControlboxDataNotifyReq::slot_size() const {
  return slot_.size();
}
inline void ControlboxDataNotifyReq::clear_slot() {
  slot_.Clear();
}
inline const ::monitor::protobuf::SlotType& ControlboxDataNotifyReq::slot(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.slot)
  return slot_.Get(index);
}
inline ::monitor::protobuf::SlotType* ControlboxDataNotifyReq::mutable_slot(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.slot)
  return slot_.Mutable(index);
}
inline ::monitor::protobuf::SlotType* ControlboxDataNotifyReq::add_slot() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.ControlboxDataNotifyReq.slot)
  return slot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >*
ControlboxDataNotifyReq::mutable_slot() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.ControlboxDataNotifyReq.slot)
  return &slot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >&
ControlboxDataNotifyReq::slot() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.ControlboxDataNotifyReq.slot)
  return slot_;
}

// string Reserved1 = 101;
inline void ControlboxDataNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControlboxDataNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void ControlboxDataNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void ControlboxDataNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
}
#endif
inline void ControlboxDataNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
}
inline void ControlboxDataNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
}
inline ::std::string* ControlboxDataNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlboxDataNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlboxDataNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void ControlboxDataNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControlboxDataNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void ControlboxDataNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void ControlboxDataNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
}
#endif
inline void ControlboxDataNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
}
inline void ControlboxDataNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
}
inline ::std::string* ControlboxDataNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlboxDataNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlboxDataNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.ControlboxDataNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// BoxType

// .monitor.protobuf.SignalType DoorSignal = 1;
inline void BoxType::clear_doorsignal() {
  doorsignal_ = 0;
}
inline ::monitor::protobuf::SignalType BoxType::doorsignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.DoorSignal)
  return static_cast< ::monitor::protobuf::SignalType >(doorsignal_);
}
inline void BoxType::set_doorsignal(::monitor::protobuf::SignalType value) {
  
  doorsignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.DoorSignal)
}

// .monitor.protobuf.SignalType SmokeSignal = 2;
inline void BoxType::clear_smokesignal() {
  smokesignal_ = 0;
}
inline ::monitor::protobuf::SignalType BoxType::smokesignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.SmokeSignal)
  return static_cast< ::monitor::protobuf::SignalType >(smokesignal_);
}
inline void BoxType::set_smokesignal(::monitor::protobuf::SignalType value) {
  
  smokesignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.SmokeSignal)
}

// .monitor.protobuf.AlarmStateEnumType WaterSignal = 3;
inline void BoxType::clear_watersignal() {
  watersignal_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType BoxType::watersignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.WaterSignal)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(watersignal_);
}
inline void BoxType::set_watersignal(::monitor::protobuf::AlarmStateEnumType value) {
  
  watersignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.WaterSignal)
}

// sint32 T = 4;
inline void BoxType::clear_t() {
  t_ = 0;
}
inline ::google::protobuf::int32 BoxType::t() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.T)
  return t_;
}
inline void BoxType::set_t(::google::protobuf::int32 value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.T)
}

// int32 HUM = 5;
inline void BoxType::clear_hum() {
  hum_ = 0;
}
inline ::google::protobuf::int32 BoxType::hum() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.HUM)
  return hum_;
}
inline void BoxType::set_hum(::google::protobuf::int32 value) {
  
  hum_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.HUM)
}

// .monitor.protobuf.AlarmStateEnumType ION = 6;
inline void BoxType::clear_ion() {
  ion_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType BoxType::ion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.ION)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(ion_);
}
inline void BoxType::set_ion(::monitor::protobuf::AlarmStateEnumType value) {
  
  ion_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.ION)
}

// .monitor.protobuf.AlarmStateEnumType Stop = 7;
inline void BoxType::clear_stop() {
  stop_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType BoxType::stop() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.Stop)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(stop_);
}
inline void BoxType::set_stop(::monitor::protobuf::AlarmStateEnumType value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.Stop)
}

// .monitor.protobuf.AlarmStateEnumType FanFault = 8;
inline void BoxType::clear_fanfault() {
  fanfault_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType BoxType::fanfault() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.BoxType.FanFault)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(fanfault_);
}
inline void BoxType::set_fanfault(::monitor::protobuf::AlarmStateEnumType value) {
  
  fanfault_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.BoxType.FanFault)
}

// -------------------------------------------------------------------

// MeterType

// double Va = 1;
inline void MeterType::clear_va() {
  va_ = 0;
}
inline double MeterType::va() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Va)
  return va_;
}
inline void MeterType::set_va(double value) {
  
  va_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Va)
}

// double Vb = 2;
inline void MeterType::clear_vb() {
  vb_ = 0;
}
inline double MeterType::vb() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Vb)
  return vb_;
}
inline void MeterType::set_vb(double value) {
  
  vb_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Vb)
}

// double Vc = 3;
inline void MeterType::clear_vc() {
  vc_ = 0;
}
inline double MeterType::vc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Vc)
  return vc_;
}
inline void MeterType::set_vc(double value) {
  
  vc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Vc)
}

// double Vdc = 4;
inline void MeterType::clear_vdc() {
  vdc_ = 0;
}
inline double MeterType::vdc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Vdc)
  return vdc_;
}
inline void MeterType::set_vdc(double value) {
  
  vdc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Vdc)
}

// double Ia = 5;
inline void MeterType::clear_ia() {
  ia_ = 0;
}
inline double MeterType::ia() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Ia)
  return ia_;
}
inline void MeterType::set_ia(double value) {
  
  ia_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Ia)
}

// double Ib = 6;
inline void MeterType::clear_ib() {
  ib_ = 0;
}
inline double MeterType::ib() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Ib)
  return ib_;
}
inline void MeterType::set_ib(double value) {
  
  ib_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Ib)
}

// double Ic = 7;
inline void MeterType::clear_ic() {
  ic_ = 0;
}
inline double MeterType::ic() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Ic)
  return ic_;
}
inline void MeterType::set_ic(double value) {
  
  ic_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Ic)
}

// double Idc = 8;
inline void MeterType::clear_idc() {
  idc_ = 0;
}
inline double MeterType::idc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Idc)
  return idc_;
}
inline void MeterType::set_idc(double value) {
  
  idc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Idc)
}

// double P = 9;
inline void MeterType::clear_p() {
  p_ = 0;
}
inline double MeterType::p() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.P)
  return p_;
}
inline void MeterType::set_p(double value) {
  
  p_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.P)
}

// double Q = 10;
inline void MeterType::clear_q() {
  q_ = 0;
}
inline double MeterType::q() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Q)
  return q_;
}
inline void MeterType::set_q(double value) {
  
  q_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Q)
}

// double PF = 11;
inline void MeterType::clear_pf() {
  pf_ = 0;
}
inline double MeterType::pf() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.PF)
  return pf_;
}
inline void MeterType::set_pf(double value) {
  
  pf_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.PF)
}

// double N = 12;
inline void MeterType::clear_n() {
  n_ = 0;
}
inline double MeterType::n() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.N)
  return n_;
}
inline void MeterType::set_n(double value) {
  
  n_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.N)
}

// double VU = 13;
inline void MeterType::clear_vu() {
  vu_ = 0;
}
inline double MeterType::vu() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.VU)
  return vu_;
}
inline void MeterType::set_vu(double value) {
  
  vu_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.VU)
}

// double CU = 14;
inline void MeterType::clear_cu() {
  cu_ = 0;
}
inline double MeterType::cu() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.CU)
  return cu_;
}
inline void MeterType::set_cu(double value) {
  
  cu_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.CU)
}

// double HDF = 15;
inline void MeterType::clear_hdf() {
  hdf_ = 0;
}
inline double MeterType::hdf() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.HDF)
  return hdf_;
}
inline void MeterType::set_hdf(double value) {
  
  hdf_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.HDF)
}

// double Pa = 16;
inline void MeterType::clear_pa() {
  pa_ = 0;
}
inline double MeterType::pa() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pa)
  return pa_;
}
inline void MeterType::set_pa(double value) {
  
  pa_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pa)
}

// double Pb = 17;
inline void MeterType::clear_pb() {
  pb_ = 0;
}
inline double MeterType::pb() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pb)
  return pb_;
}
inline void MeterType::set_pb(double value) {
  
  pb_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pb)
}

// double Pc = 18;
inline void MeterType::clear_pc() {
  pc_ = 0;
}
inline double MeterType::pc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pc)
  return pc_;
}
inline void MeterType::set_pc(double value) {
  
  pc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pc)
}

// double Qa = 19;
inline void MeterType::clear_qa() {
  qa_ = 0;
}
inline double MeterType::qa() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Qa)
  return qa_;
}
inline void MeterType::set_qa(double value) {
  
  qa_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Qa)
}

// double Qb = 20;
inline void MeterType::clear_qb() {
  qb_ = 0;
}
inline double MeterType::qb() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Qb)
  return qb_;
}
inline void MeterType::set_qb(double value) {
  
  qb_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Qb)
}

// double Qc = 21;
inline void MeterType::clear_qc() {
  qc_ = 0;
}
inline double MeterType::qc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Qc)
  return qc_;
}
inline void MeterType::set_qc(double value) {
  
  qc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Qc)
}

// double Pfa = 22;
inline void MeterType::clear_pfa() {
  pfa_ = 0;
}
inline double MeterType::pfa() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pfa)
  return pfa_;
}
inline void MeterType::set_pfa(double value) {
  
  pfa_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pfa)
}

// double Pfb = 23;
inline void MeterType::clear_pfb() {
  pfb_ = 0;
}
inline double MeterType::pfb() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pfb)
  return pfb_;
}
inline void MeterType::set_pfb(double value) {
  
  pfb_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pfb)
}

// double Pfc = 24;
inline void MeterType::clear_pfc() {
  pfc_ = 0;
}
inline double MeterType::pfc() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Pfc)
  return pfc_;
}
inline void MeterType::set_pfc(double value) {
  
  pfc_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Pfc)
}

// double Fap = 25;
inline void MeterType::clear_fap() {
  fap_ = 0;
}
inline double MeterType::fap() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Fap)
  return fap_;
}
inline void MeterType::set_fap(double value) {
  
  fap_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Fap)
}

// double Rap = 26;
inline void MeterType::clear_rap() {
  rap_ = 0;
}
inline double MeterType::rap() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Rap)
  return rap_;
}
inline void MeterType::set_rap(double value) {
  
  rap_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Rap)
}

// double Irp = 27;
inline void MeterType::clear_irp() {
  irp_ = 0;
}
inline double MeterType::irp() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Irp)
  return irp_;
}
inline void MeterType::set_irp(double value) {
  
  irp_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Irp)
}

// double Crp = 28;
inline void MeterType::clear_crp() {
  crp_ = 0;
}
inline double MeterType::crp() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MeterType.Crp)
  return crp_;
}
inline void MeterType::set_crp(double value) {
  
  crp_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MeterType.Crp)
}

// -------------------------------------------------------------------

// SlotType

// int32 CanIndex = 1;
inline void SlotType::clear_canindex() {
  canindex_ = 0;
}
inline ::google::protobuf::int32 SlotType::canindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.SlotType.CanIndex)
  return canindex_;
}
inline void SlotType::set_canindex(::google::protobuf::int32 value) {
  
  canindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.SlotType.CanIndex)
}

// int32 SlotNo = 2;
inline void SlotType::clear_slotno() {
  slotno_ = 0;
}
inline ::google::protobuf::int32 SlotType::slotno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.SlotType.SlotNo)
  return slotno_;
}
inline void SlotType::set_slotno(::google::protobuf::int32 value) {
  
  slotno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.SlotType.SlotNo)
}

// .monitor.protobuf.SlotEnumType SlotStats = 3;
inline void SlotType::clear_slotstats() {
  slotstats_ = 0;
}
inline ::monitor::protobuf::SlotEnumType SlotType::slotstats() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.SlotType.SlotStats)
  return static_cast< ::monitor::protobuf::SlotEnumType >(slotstats_);
}
inline void SlotType::set_slotstats(::monitor::protobuf::SlotEnumType value) {
  
  slotstats_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.SlotType.SlotStats)
}

// -------------------------------------------------------------------

// RoomDataReq

// string Reserved1 = 101;
inline void RoomDataReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomDataReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void RoomDataReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.RoomDataReq.Reserved1)
}
#if LANG_CXX11
inline void RoomDataReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.RoomDataReq.Reserved1)
}
#endif
inline void RoomDataReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.RoomDataReq.Reserved1)
}
inline void RoomDataReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.RoomDataReq.Reserved1)
}
inline ::std::string* RoomDataReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomDataReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomDataReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataReq.Reserved1)
}

// string Reserved2 = 102;
inline void RoomDataReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomDataReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void RoomDataReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.RoomDataReq.Reserved2)
}
#if LANG_CXX11
inline void RoomDataReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.RoomDataReq.Reserved2)
}
#endif
inline void RoomDataReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.RoomDataReq.Reserved2)
}
inline void RoomDataReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.RoomDataReq.Reserved2)
}
inline ::std::string* RoomDataReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomDataReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomDataReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataReq.Reserved2)
}

// -------------------------------------------------------------------

// RoomDataNotifyReq

// .monitor.protobuf.HVRBoxType HvrData = 1;
inline bool RoomDataNotifyReq::has_hvrdata() const {
  return this != internal_default_instance() && hvrdata_ != NULL;
}
inline void RoomDataNotifyReq::clear_hvrdata() {
  if (GetArenaNoVirtual() == NULL && hvrdata_ != NULL) delete hvrdata_;
  hvrdata_ = NULL;
}
inline const ::monitor::protobuf::HVRBoxType& RoomDataNotifyReq::hvrdata() const {
  const ::monitor::protobuf::HVRBoxType* p = hvrdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.HvrData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::HVRBoxType*>(
      &::monitor::protobuf::_HVRBoxType_default_instance_);
}
inline ::monitor::protobuf::HVRBoxType* RoomDataNotifyReq::mutable_hvrdata() {
  
  if (hvrdata_ == NULL) {
    hvrdata_ = new ::monitor::protobuf::HVRBoxType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.HvrData)
  return hvrdata_;
}
inline ::monitor::protobuf::HVRBoxType* RoomDataNotifyReq::release_hvrdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataNotifyReq.HvrData)
  
  ::monitor::protobuf::HVRBoxType* temp = hvrdata_;
  hvrdata_ = NULL;
  return temp;
}
inline void RoomDataNotifyReq::set_allocated_hvrdata(::monitor::protobuf::HVRBoxType* hvrdata) {
  delete hvrdata_;
  hvrdata_ = hvrdata;
  if (hvrdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataNotifyReq.HvrData)
}

// .monitor.protobuf.TFRBoxType TfrData = 2;
inline bool RoomDataNotifyReq::has_tfrdata() const {
  return this != internal_default_instance() && tfrdata_ != NULL;
}
inline void RoomDataNotifyReq::clear_tfrdata() {
  if (GetArenaNoVirtual() == NULL && tfrdata_ != NULL) delete tfrdata_;
  tfrdata_ = NULL;
}
inline const ::monitor::protobuf::TFRBoxType& RoomDataNotifyReq::tfrdata() const {
  const ::monitor::protobuf::TFRBoxType* p = tfrdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.TfrData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::TFRBoxType*>(
      &::monitor::protobuf::_TFRBoxType_default_instance_);
}
inline ::monitor::protobuf::TFRBoxType* RoomDataNotifyReq::mutable_tfrdata() {
  
  if (tfrdata_ == NULL) {
    tfrdata_ = new ::monitor::protobuf::TFRBoxType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.TfrData)
  return tfrdata_;
}
inline ::monitor::protobuf::TFRBoxType* RoomDataNotifyReq::release_tfrdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataNotifyReq.TfrData)
  
  ::monitor::protobuf::TFRBoxType* temp = tfrdata_;
  tfrdata_ = NULL;
  return temp;
}
inline void RoomDataNotifyReq::set_allocated_tfrdata(::monitor::protobuf::TFRBoxType* tfrdata) {
  delete tfrdata_;
  tfrdata_ = tfrdata;
  if (tfrdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataNotifyReq.TfrData)
}

// repeated .monitor.protobuf.LVRBoxType LvrRoomDataList = 3;
inline int RoomDataNotifyReq::lvrroomdatalist_size() const {
  return lvrroomdatalist_.size();
}
inline void RoomDataNotifyReq::clear_lvrroomdatalist() {
  lvrroomdatalist_.Clear();
}
inline const ::monitor::protobuf::LVRBoxType& RoomDataNotifyReq::lvrroomdatalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.LvrRoomDataList)
  return lvrroomdatalist_.Get(index);
}
inline ::monitor::protobuf::LVRBoxType* RoomDataNotifyReq::mutable_lvrroomdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.LvrRoomDataList)
  return lvrroomdatalist_.Mutable(index);
}
inline ::monitor::protobuf::LVRBoxType* RoomDataNotifyReq::add_lvrroomdatalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.RoomDataNotifyReq.LvrRoomDataList)
  return lvrroomdatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::LVRBoxType >*
RoomDataNotifyReq::mutable_lvrroomdatalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.RoomDataNotifyReq.LvrRoomDataList)
  return &lvrroomdatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::LVRBoxType >&
RoomDataNotifyReq::lvrroomdatalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.RoomDataNotifyReq.LvrRoomDataList)
  return lvrroomdatalist_;
}

// .monitor.protobuf.HVRType HrvData = 4;
inline bool RoomDataNotifyReq::has_hrvdata() const {
  return this != internal_default_instance() && hrvdata_ != NULL;
}
inline void RoomDataNotifyReq::clear_hrvdata() {
  if (GetArenaNoVirtual() == NULL && hrvdata_ != NULL) delete hrvdata_;
  hrvdata_ = NULL;
}
inline const ::monitor::protobuf::HVRType& RoomDataNotifyReq::hrvdata() const {
  const ::monitor::protobuf::HVRType* p = hrvdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.HrvData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::HVRType*>(
      &::monitor::protobuf::_HVRType_default_instance_);
}
inline ::monitor::protobuf::HVRType* RoomDataNotifyReq::mutable_hrvdata() {
  
  if (hrvdata_ == NULL) {
    hrvdata_ = new ::monitor::protobuf::HVRType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.HrvData)
  return hrvdata_;
}
inline ::monitor::protobuf::HVRType* RoomDataNotifyReq::release_hrvdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataNotifyReq.HrvData)
  
  ::monitor::protobuf::HVRType* temp = hrvdata_;
  hrvdata_ = NULL;
  return temp;
}
inline void RoomDataNotifyReq::set_allocated_hrvdata(::monitor::protobuf::HVRType* hrvdata) {
  delete hrvdata_;
  hrvdata_ = hrvdata;
  if (hrvdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataNotifyReq.HrvData)
}

// .monitor.protobuf.TrType TrData = 5;
inline bool RoomDataNotifyReq::has_trdata() const {
  return this != internal_default_instance() && trdata_ != NULL;
}
inline void RoomDataNotifyReq::clear_trdata() {
  if (GetArenaNoVirtual() == NULL && trdata_ != NULL) delete trdata_;
  trdata_ = NULL;
}
inline const ::monitor::protobuf::TrType& RoomDataNotifyReq::trdata() const {
  const ::monitor::protobuf::TrType* p = trdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.TrData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::TrType*>(
      &::monitor::protobuf::_TrType_default_instance_);
}
inline ::monitor::protobuf::TrType* RoomDataNotifyReq::mutable_trdata() {
  
  if (trdata_ == NULL) {
    trdata_ = new ::monitor::protobuf::TrType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.TrData)
  return trdata_;
}
inline ::monitor::protobuf::TrType* RoomDataNotifyReq::release_trdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataNotifyReq.TrData)
  
  ::monitor::protobuf::TrType* temp = trdata_;
  trdata_ = NULL;
  return temp;
}
inline void RoomDataNotifyReq::set_allocated_trdata(::monitor::protobuf::TrType* trdata) {
  delete trdata_;
  trdata_ = trdata;
  if (trdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataNotifyReq.TrData)
}

// .monitor.protobuf.LVRType LvrDataList = 6;
inline bool RoomDataNotifyReq::has_lvrdatalist() const {
  return this != internal_default_instance() && lvrdatalist_ != NULL;
}
inline void RoomDataNotifyReq::clear_lvrdatalist() {
  if (GetArenaNoVirtual() == NULL && lvrdatalist_ != NULL) delete lvrdatalist_;
  lvrdatalist_ = NULL;
}
inline const ::monitor::protobuf::LVRType& RoomDataNotifyReq::lvrdatalist() const {
  const ::monitor::protobuf::LVRType* p = lvrdatalist_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.RoomDataNotifyReq.LvrDataList)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::LVRType*>(
      &::monitor::protobuf::_LVRType_default_instance_);
}
inline ::monitor::protobuf::LVRType* RoomDataNotifyReq::mutable_lvrdatalist() {
  
  if (lvrdatalist_ == NULL) {
    lvrdatalist_ = new ::monitor::protobuf::LVRType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.RoomDataNotifyReq.LvrDataList)
  return lvrdatalist_;
}
inline ::monitor::protobuf::LVRType* RoomDataNotifyReq::release_lvrdatalist() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.RoomDataNotifyReq.LvrDataList)
  
  ::monitor::protobuf::LVRType* temp = lvrdatalist_;
  lvrdatalist_ = NULL;
  return temp;
}
inline void RoomDataNotifyReq::set_allocated_lvrdatalist(::monitor::protobuf::LVRType* lvrdatalist) {
  delete lvrdatalist_;
  lvrdatalist_ = lvrdatalist;
  if (lvrdatalist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.RoomDataNotifyReq.LvrDataList)
}

// -------------------------------------------------------------------

// HVRBoxType

// .monitor.protobuf.SignalType SmokeSignal = 1;
inline void HVRBoxType::clear_smokesignal() {
  smokesignal_ = 0;
}
inline ::monitor::protobuf::SignalType HVRBoxType::smokesignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.HVRBoxType.SmokeSignal)
  return static_cast< ::monitor::protobuf::SignalType >(smokesignal_);
}
inline void HVRBoxType::set_smokesignal(::monitor::protobuf::SignalType value) {
  
  smokesignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.HVRBoxType.SmokeSignal)
}

// -------------------------------------------------------------------

// TFRBoxType

// .monitor.protobuf.AlarmStateEnumType ION = 1;
inline void TFRBoxType::clear_ion() {
  ion_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TFRBoxType::ion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TFRBoxType.ION)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(ion_);
}
inline void TFRBoxType::set_ion(::monitor::protobuf::AlarmStateEnumType value) {
  
  ion_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TFRBoxType.ION)
}

// .monitor.protobuf.SignalType SmokeSignal = 2;
inline void TFRBoxType::clear_smokesignal() {
  smokesignal_ = 0;
}
inline ::monitor::protobuf::SignalType TFRBoxType::smokesignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TFRBoxType.SmokeSignal)
  return static_cast< ::monitor::protobuf::SignalType >(smokesignal_);
}
inline void TFRBoxType::set_smokesignal(::monitor::protobuf::SignalType value) {
  
  smokesignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TFRBoxType.SmokeSignal)
}

// int32 FanSpeed = 3;
inline void TFRBoxType::clear_fanspeed() {
  fanspeed_ = 0;
}
inline ::google::protobuf::int32 TFRBoxType::fanspeed() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TFRBoxType.FanSpeed)
  return fanspeed_;
}
inline void TFRBoxType::set_fanspeed(::google::protobuf::int32 value) {
  
  fanspeed_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TFRBoxType.FanSpeed)
}

// .monitor.protobuf.AlarmStateEnumType FanFault = 4;
inline void TFRBoxType::clear_fanfault() {
  fanfault_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TFRBoxType::fanfault() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TFRBoxType.FanFault)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(fanfault_);
}
inline void TFRBoxType::set_fanfault(::monitor::protobuf::AlarmStateEnumType value) {
  
  fanfault_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TFRBoxType.FanFault)
}

// -------------------------------------------------------------------

// LVRBoxType

// int32 BoxNo = 1;
inline void LVRBoxType::clear_boxno() {
  boxno_ = 0;
}
inline ::google::protobuf::int32 LVRBoxType::boxno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.BoxNo)
  return boxno_;
}
inline void LVRBoxType::set_boxno(::google::protobuf::int32 value) {
  
  boxno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.BoxNo)
}

// .monitor.protobuf.SignalType Door1Signal = 2;
inline void LVRBoxType::clear_door1signal() {
  door1signal_ = 0;
}
inline ::monitor::protobuf::SignalType LVRBoxType::door1signal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.Door1Signal)
  return static_cast< ::monitor::protobuf::SignalType >(door1signal_);
}
inline void LVRBoxType::set_door1signal(::monitor::protobuf::SignalType value) {
  
  door1signal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.Door1Signal)
}

// .monitor.protobuf.SignalType Door2Signal = 3;
inline void LVRBoxType::clear_door2signal() {
  door2signal_ = 0;
}
inline ::monitor::protobuf::SignalType LVRBoxType::door2signal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.Door2Signal)
  return static_cast< ::monitor::protobuf::SignalType >(door2signal_);
}
inline void LVRBoxType::set_door2signal(::monitor::protobuf::SignalType value) {
  
  door2signal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.Door2Signal)
}

// .monitor.protobuf.SignalType DoorSignal = 4;
inline void LVRBoxType::clear_doorsignal() {
  doorsignal_ = 0;
}
inline ::monitor::protobuf::SignalType LVRBoxType::doorsignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.DoorSignal)
  return static_cast< ::monitor::protobuf::SignalType >(doorsignal_);
}
inline void LVRBoxType::set_doorsignal(::monitor::protobuf::SignalType value) {
  
  doorsignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.DoorSignal)
}

// .monitor.protobuf.SignalType SmokeSignal = 5;
inline void LVRBoxType::clear_smokesignal() {
  smokesignal_ = 0;
}
inline ::monitor::protobuf::SignalType LVRBoxType::smokesignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.SmokeSignal)
  return static_cast< ::monitor::protobuf::SignalType >(smokesignal_);
}
inline void LVRBoxType::set_smokesignal(::monitor::protobuf::SignalType value) {
  
  smokesignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.SmokeSignal)
}

// .monitor.protobuf.AlarmStateEnumType WaterSignal = 6;
inline void LVRBoxType::clear_watersignal() {
  watersignal_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType LVRBoxType::watersignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.WaterSignal)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(watersignal_);
}
inline void LVRBoxType::set_watersignal(::monitor::protobuf::AlarmStateEnumType value) {
  
  watersignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.WaterSignal)
}

// .monitor.protobuf.AlarmStateEnumType Stop = 7;
inline void LVRBoxType::clear_stop() {
  stop_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType LVRBoxType::stop() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.Stop)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(stop_);
}
inline void LVRBoxType::set_stop(::monitor::protobuf::AlarmStateEnumType value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.Stop)
}

// .monitor.protobuf.AlarmStateEnumType ION = 8;
inline void LVRBoxType::clear_ion() {
  ion_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType LVRBoxType::ion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRBoxType.ION)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(ion_);
}
inline void LVRBoxType::set_ion(::monitor::protobuf::AlarmStateEnumType value) {
  
  ion_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LVRBoxType.ION)
}

// -------------------------------------------------------------------

// HVRType

// .monitor.protobuf.MeterType meter = 1;
inline bool HVRType::has_meter() const {
  return this != internal_default_instance() && meter_ != NULL;
}
inline void HVRType::clear_meter() {
  if (GetArenaNoVirtual() == NULL && meter_ != NULL) delete meter_;
  meter_ = NULL;
}
inline const ::monitor::protobuf::MeterType& HVRType::meter() const {
  const ::monitor::protobuf::MeterType* p = meter_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.HVRType.meter)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::MeterType*>(
      &::monitor::protobuf::_MeterType_default_instance_);
}
inline ::monitor::protobuf::MeterType* HVRType::mutable_meter() {
  
  if (meter_ == NULL) {
    meter_ = new ::monitor::protobuf::MeterType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.HVRType.meter)
  return meter_;
}
inline ::monitor::protobuf::MeterType* HVRType::release_meter() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.HVRType.meter)
  
  ::monitor::protobuf::MeterType* temp = meter_;
  meter_ = NULL;
  return temp;
}
inline void HVRType::set_allocated_meter(::monitor::protobuf::MeterType* meter) {
  delete meter_;
  meter_ = meter;
  if (meter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.HVRType.meter)
}

// .monitor.protobuf.SignalType LdBrk = 2;
inline void HVRType::clear_ldbrk() {
  ldbrk_ = 0;
}
inline ::monitor::protobuf::SignalType HVRType::ldbrk() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.HVRType.LdBrk)
  return static_cast< ::monitor::protobuf::SignalType >(ldbrk_);
}
inline void HVRType::set_ldbrk(::monitor::protobuf::SignalType value) {
  
  ldbrk_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.HVRType.LdBrk)
}

// -------------------------------------------------------------------

// TrType

// .monitor.protobuf.AlarmStateEnumType OverTAlarm = 1;
inline void TrType::clear_overtalarm() {
  overtalarm_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TrType::overtalarm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.OverTAlarm)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(overtalarm_);
}
inline void TrType::set_overtalarm(::monitor::protobuf::AlarmStateEnumType value) {
  
  overtalarm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.OverTAlarm)
}

// .monitor.protobuf.AlarmStateEnumType OverTOff = 2;
inline void TrType::clear_overtoff() {
  overtoff_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TrType::overtoff() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.OverTOff)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(overtoff_);
}
inline void TrType::set_overtoff(::monitor::protobuf::AlarmStateEnumType value) {
  
  overtoff_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.OverTOff)
}

// .monitor.protobuf.AlarmStateEnumType LightGasAlarm = 3;
inline void TrType::clear_lightgasalarm() {
  lightgasalarm_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TrType::lightgasalarm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.LightGasAlarm)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(lightgasalarm_);
}
inline void TrType::set_lightgasalarm(::monitor::protobuf::AlarmStateEnumType value) {
  
  lightgasalarm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.LightGasAlarm)
}

// .monitor.protobuf.AlarmStateEnumType HeavyGasOff = 4;
inline void TrType::clear_heavygasoff() {
  heavygasoff_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType TrType::heavygasoff() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.HeavyGasOff)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(heavygasoff_);
}
inline void TrType::set_heavygasoff(::monitor::protobuf::AlarmStateEnumType value) {
  
  heavygasoff_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.HeavyGasOff)
}

// .monitor.protobuf.SignalType DoorSignal = 5;
inline void TrType::clear_doorsignal() {
  doorsignal_ = 0;
}
inline ::monitor::protobuf::SignalType TrType::doorsignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.DoorSignal)
  return static_cast< ::monitor::protobuf::SignalType >(doorsignal_);
}
inline void TrType::set_doorsignal(::monitor::protobuf::SignalType value) {
  
  doorsignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.DoorSignal)
}

// sint32 T = 6;
inline void TrType::clear_t() {
  t_ = 0;
}
inline ::google::protobuf::int32 TrType::t() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TrType.T)
  return t_;
}
inline void TrType::set_t(::google::protobuf::int32 value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.TrType.T)
}

// -------------------------------------------------------------------

// LVRType

// .monitor.protobuf.LvCabType LvcCabData = 1;
inline bool LVRType::has_lvccabdata() const {
  return this != internal_default_instance() && lvccabdata_ != NULL;
}
inline void LVRType::clear_lvccabdata() {
  if (GetArenaNoVirtual() == NULL && lvccabdata_ != NULL) delete lvccabdata_;
  lvccabdata_ = NULL;
}
inline const ::monitor::protobuf::LvCabType& LVRType::lvccabdata() const {
  const ::monitor::protobuf::LvCabType* p = lvccabdata_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRType.LvcCabData)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::LvCabType*>(
      &::monitor::protobuf::_LvCabType_default_instance_);
}
inline ::monitor::protobuf::LvCabType* LVRType::mutable_lvccabdata() {
  
  if (lvccabdata_ == NULL) {
    lvccabdata_ = new ::monitor::protobuf::LvCabType;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LVRType.LvcCabData)
  return lvccabdata_;
}
inline ::monitor::protobuf::LvCabType* LVRType::release_lvccabdata() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.LVRType.LvcCabData)
  
  ::monitor::protobuf::LvCabType* temp = lvccabdata_;
  lvccabdata_ = NULL;
  return temp;
}
inline void LVRType::set_allocated_lvccabdata(::monitor::protobuf::LvCabType* lvccabdata) {
  delete lvccabdata_;
  lvccabdata_ = lvccabdata;
  if (lvccabdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.LVRType.LvcCabData)
}

// repeated .monitor.protobuf.DCCabType DcCabData = 2;
inline int LVRType::dccabdata_size() const {
  return dccabdata_.size();
}
inline void LVRType::clear_dccabdata() {
  dccabdata_.Clear();
}
inline const ::monitor::protobuf::DCCabType& LVRType::dccabdata(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LVRType.DcCabData)
  return dccabdata_.Get(index);
}
inline ::monitor::protobuf::DCCabType* LVRType::mutable_dccabdata(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LVRType.DcCabData)
  return dccabdata_.Mutable(index);
}
inline ::monitor::protobuf::DCCabType* LVRType::add_dccabdata() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.LVRType.DcCabData)
  return dccabdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCCabType >*
LVRType::mutable_dccabdata() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.LVRType.DcCabData)
  return &dccabdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::DCCabType >&
LVRType::dccabdata() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.LVRType.DcCabData)
  return dccabdata_;
}

// -------------------------------------------------------------------

// LvCabType

// sint32 T1 = 1;
inline void LvCabType::clear_t1() {
  t1_ = 0;
}
inline ::google::protobuf::int32 LvCabType::t1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.T1)
  return t1_;
}
inline void LvCabType::set_t1(::google::protobuf::int32 value) {
  
  t1_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.T1)
}

// int32 HUM1 = 2;
inline void LvCabType::clear_hum1() {
  hum1_ = 0;
}
inline ::google::protobuf::int32 LvCabType::hum1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.HUM1)
  return hum1_;
}
inline void LvCabType::set_hum1(::google::protobuf::int32 value) {
  
  hum1_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.HUM1)
}

// sint32 T2 = 3;
inline void LvCabType::clear_t2() {
  t2_ = 0;
}
inline ::google::protobuf::int32 LvCabType::t2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.T2)
  return t2_;
}
inline void LvCabType::set_t2(::google::protobuf::int32 value) {
  
  t2_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.T2)
}

// int32 HUM2 = 4;
inline void LvCabType::clear_hum2() {
  hum2_ = 0;
}
inline ::google::protobuf::int32 LvCabType::hum2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.HUM2)
  return hum2_;
}
inline void LvCabType::set_hum2(::google::protobuf::int32 value) {
  
  hum2_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.HUM2)
}

// sint32 T3 = 5;
inline void LvCabType::clear_t3() {
  t3_ = 0;
}
inline ::google::protobuf::int32 LvCabType::t3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.T3)
  return t3_;
}
inline void LvCabType::set_t3(::google::protobuf::int32 value) {
  
  t3_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.T3)
}

// int32 HUM3 = 6;
inline void LvCabType::clear_hum3() {
  hum3_ = 0;
}
inline ::google::protobuf::int32 LvCabType::hum3() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.HUM3)
  return hum3_;
}
inline void LvCabType::set_hum3(::google::protobuf::int32 value) {
  
  hum3_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.HUM3)
}

// sint32 T4 = 7;
inline void LvCabType::clear_t4() {
  t4_ = 0;
}
inline ::google::protobuf::int32 LvCabType::t4() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.T4)
  return t4_;
}
inline void LvCabType::set_t4(::google::protobuf::int32 value) {
  
  t4_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.T4)
}

// int32 HUM4 = 8;
inline void LvCabType::clear_hum4() {
  hum4_ = 0;
}
inline ::google::protobuf::int32 LvCabType::hum4() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.HUM4)
  return hum4_;
}
inline void LvCabType::set_hum4(::google::protobuf::int32 value) {
  
  hum4_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.HUM4)
}

// sint32 T5 = 9;
inline void LvCabType::clear_t5() {
  t5_ = 0;
}
inline ::google::protobuf::int32 LvCabType::t5() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.T5)
  return t5_;
}
inline void LvCabType::set_t5(::google::protobuf::int32 value) {
  
  t5_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.T5)
}

// int32 HUM5 = 10;
inline void LvCabType::clear_hum5() {
  hum5_ = 0;
}
inline ::google::protobuf::int32 LvCabType::hum5() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.HUM5)
  return hum5_;
}
inline void LvCabType::set_hum5(::google::protobuf::int32 value) {
  
  hum5_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.HUM5)
}

// repeated .monitor.protobuf.MeterType MeterList = 11;
inline int LvCabType::meterlist_size() const {
  return meterlist_.size();
}
inline void LvCabType::clear_meterlist() {
  meterlist_.Clear();
}
inline const ::monitor::protobuf::MeterType& LvCabType::meterlist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.MeterList)
  return meterlist_.Get(index);
}
inline ::monitor::protobuf::MeterType* LvCabType::mutable_meterlist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.LvCabType.MeterList)
  return meterlist_.Mutable(index);
}
inline ::monitor::protobuf::MeterType* LvCabType::add_meterlist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.LvCabType.MeterList)
  return meterlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MeterType >*
LvCabType::mutable_meterlist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.LvCabType.MeterList)
  return &meterlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MeterType >&
LvCabType::meterlist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.LvCabType.MeterList)
  return meterlist_;
}

// .monitor.protobuf.SignalType BrkValue = 12;
inline void LvCabType::clear_brkvalue() {
  brkvalue_ = 0;
}
inline ::monitor::protobuf::SignalType LvCabType::brkvalue() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.LvCabType.BrkValue)
  return static_cast< ::monitor::protobuf::SignalType >(brkvalue_);
}
inline void LvCabType::set_brkvalue(::monitor::protobuf::SignalType value) {
  
  brkvalue_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.LvCabType.BrkValue)
}

// -------------------------------------------------------------------

// DCCabType

// int32 CabNo = 1;
inline void DCCabType::clear_cabno() {
  cabno_ = 0;
}
inline ::google::protobuf::int32 DCCabType::cabno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.CabNo)
  return cabno_;
}
inline void DCCabType::set_cabno(::google::protobuf::int32 value) {
  
  cabno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.CabNo)
}

// sint32 T = 2;
inline void DCCabType::clear_t() {
  t_ = 0;
}
inline ::google::protobuf::int32 DCCabType::t() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.T)
  return t_;
}
inline void DCCabType::set_t(::google::protobuf::int32 value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.T)
}

// int32 HUM1 = 3;
inline void DCCabType::clear_hum1() {
  hum1_ = 0;
}
inline ::google::protobuf::int32 DCCabType::hum1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.HUM1)
  return hum1_;
}
inline void DCCabType::set_hum1(::google::protobuf::int32 value) {
  
  hum1_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.HUM1)
}

// .monitor.protobuf.AlarmStateEnumType WaterSignal = 4;
inline void DCCabType::clear_watersignal() {
  watersignal_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType DCCabType::watersignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.WaterSignal)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(watersignal_);
}
inline void DCCabType::set_watersignal(::monitor::protobuf::AlarmStateEnumType value) {
  
  watersignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.WaterSignal)
}

// .monitor.protobuf.AlarmStateEnumType ION = 5;
inline void DCCabType::clear_ion() {
  ion_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType DCCabType::ion() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.ION)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(ion_);
}
inline void DCCabType::set_ion(::monitor::protobuf::AlarmStateEnumType value) {
  
  ion_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.ION)
}

// .monitor.protobuf.SignalType SmokeSignal = 6;
inline void DCCabType::clear_smokesignal() {
  smokesignal_ = 0;
}
inline ::monitor::protobuf::SignalType DCCabType::smokesignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.SmokeSignal)
  return static_cast< ::monitor::protobuf::SignalType >(smokesignal_);
}
inline void DCCabType::set_smokesignal(::monitor::protobuf::SignalType value) {
  
  smokesignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.SmokeSignal)
}

// .monitor.protobuf.AlarmStateEnumType SurgeProSignal = 7;
inline void DCCabType::clear_surgeprosignal() {
  surgeprosignal_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType DCCabType::surgeprosignal() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.SurgeProSignal)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(surgeprosignal_);
}
inline void DCCabType::set_surgeprosignal(::monitor::protobuf::AlarmStateEnumType value) {
  
  surgeprosignal_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.SurgeProSignal)
}

// .monitor.protobuf.AlarmStateEnumType AuxType = 8;
inline void DCCabType::clear_auxtype() {
  auxtype_ = 0;
}
inline ::monitor::protobuf::AlarmStateEnumType DCCabType::auxtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.AuxType)
  return static_cast< ::monitor::protobuf::AlarmStateEnumType >(auxtype_);
}
inline void DCCabType::set_auxtype(::monitor::protobuf::AlarmStateEnumType value) {
  
  auxtype_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.AuxType)
}

// .monitor.protobuf.SignalType MicroBrk = 9;
inline void DCCabType::clear_microbrk() {
  microbrk_ = 0;
}
inline ::monitor::protobuf::SignalType DCCabType::microbrk() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.MicroBrk)
  return static_cast< ::monitor::protobuf::SignalType >(microbrk_);
}
inline void DCCabType::set_microbrk(::monitor::protobuf::SignalType value) {
  
  microbrk_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.MicroBrk)
}

// repeated .monitor.protobuf.SlotType slot = 10;
inline int DCCabType::slot_size() const {
  return slot_.size();
}
inline void DCCabType::clear_slot() {
  slot_.Clear();
}
inline const ::monitor::protobuf::SlotType& DCCabType::slot(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.slot)
  return slot_.Get(index);
}
inline ::monitor::protobuf::SlotType* DCCabType::mutable_slot(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.DCCabType.slot)
  return slot_.Mutable(index);
}
inline ::monitor::protobuf::SlotType* DCCabType::add_slot() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.DCCabType.slot)
  return slot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >*
DCCabType::mutable_slot() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.DCCabType.slot)
  return &slot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::SlotType >&
DCCabType::slot() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.DCCabType.slot)
  return slot_;
}

// .monitor.protobuf.SignalType PCbrk = 11;
inline void DCCabType::clear_pcbrk() {
  pcbrk_ = 0;
}
inline ::monitor::protobuf::SignalType DCCabType::pcbrk() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DCCabType.PCbrk)
  return static_cast< ::monitor::protobuf::SignalType >(pcbrk_);
}
inline void DCCabType::set_pcbrk(::monitor::protobuf::SignalType value) {
  
  pcbrk_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DCCabType.PCbrk)
}

// -------------------------------------------------------------------

// MonitorTelemetryReq

// repeated int32 DevIndex = 1;
inline int MonitorTelemetryReq::devindex_size() const {
  return devindex_.size();
}
inline void MonitorTelemetryReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 MonitorTelemetryReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryReq.DevIndex)
  return devindex_.Get(index);
}
inline void MonitorTelemetryReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryReq.DevIndex)
}
inline void MonitorTelemetryReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorTelemetryReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MonitorTelemetryReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorTelemetryReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MonitorTelemetryReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorTelemetryReq.DevIndex)
  return &devindex_;
}

// string DevType = 2;
inline void MonitorTelemetryReq::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryReq::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryReq.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorTelemetryReq::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryReq.DevType)
}
#if LANG_CXX11
inline void MonitorTelemetryReq::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryReq.DevType)
}
#endif
inline void MonitorTelemetryReq::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryReq.DevType)
}
inline void MonitorTelemetryReq::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryReq.DevType)
}
inline ::std::string* MonitorTelemetryReq::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryReq.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryReq::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryReq.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryReq::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryReq.DevType)
}

// string Reserved1 = 101;
inline void MonitorTelemetryReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorTelemetryReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorTelemetryReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryReq.Reserved1)
}
#endif
inline void MonitorTelemetryReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryReq.Reserved1)
}
inline void MonitorTelemetryReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryReq.Reserved1)
}
inline ::std::string* MonitorTelemetryReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorTelemetryReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorTelemetryReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorTelemetryReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryReq.Reserved2)
}
#endif
inline void MonitorTelemetryReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryReq.Reserved2)
}
inline void MonitorTelemetryReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryReq.Reserved2)
}
inline ::std::string* MonitorTelemetryReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryReq.Reserved2)
}

// -------------------------------------------------------------------

// CommAns

// .monitor.protobuf.BoolEnum Confirm = 1;
inline void CommAns::clear_confirm() {
  confirm_ = 0;
}
inline ::monitor::protobuf::BoolEnum CommAns::confirm() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.CommAns.Confirm)
  return static_cast< ::monitor::protobuf::BoolEnum >(confirm_);
}
inline void CommAns::set_confirm(::monitor::protobuf::BoolEnum value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.CommAns.Confirm)
}

// -------------------------------------------------------------------

// MonitorSignalReq

// repeated int32 DevIndex = 1;
inline int MonitorSignalReq::devindex_size() const {
  return devindex_.size();
}
inline void MonitorSignalReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 MonitorSignalReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalReq.DevIndex)
  return devindex_.Get(index);
}
inline void MonitorSignalReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalReq.DevIndex)
}
inline void MonitorSignalReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorSignalReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MonitorSignalReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorSignalReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MonitorSignalReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorSignalReq.DevIndex)
  return &devindex_;
}

// string DevType = 2;
inline void MonitorSignalReq::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalReq::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalReq.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorSignalReq::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalReq.DevType)
}
#if LANG_CXX11
inline void MonitorSignalReq::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalReq.DevType)
}
#endif
inline void MonitorSignalReq::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalReq.DevType)
}
inline void MonitorSignalReq::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalReq.DevType)
}
inline ::std::string* MonitorSignalReq::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalReq.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalReq::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalReq.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalReq::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalReq.DevType)
}

// string Reserved1 = 101;
inline void MonitorSignalReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorSignalReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorSignalReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalReq.Reserved1)
}
#endif
inline void MonitorSignalReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalReq.Reserved1)
}
inline void MonitorSignalReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalReq.Reserved1)
}
inline ::std::string* MonitorSignalReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorSignalReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorSignalReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorSignalReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalReq.Reserved2)
}
#endif
inline void MonitorSignalReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalReq.Reserved2)
}
inline void MonitorSignalReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalReq.Reserved2)
}
inline ::std::string* MonitorSignalReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalReq.Reserved2)
}

// -------------------------------------------------------------------

// MonitorStateReq

// repeated int32 DevIndex = 1;
inline int MonitorStateReq::devindex_size() const {
  return devindex_.size();
}
inline void MonitorStateReq::clear_devindex() {
  devindex_.Clear();
}
inline ::google::protobuf::int32 MonitorStateReq::devindex(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateReq.DevIndex)
  return devindex_.Get(index);
}
inline void MonitorStateReq::set_devindex(int index, ::google::protobuf::int32 value) {
  devindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateReq.DevIndex)
}
inline void MonitorStateReq::add_devindex(::google::protobuf::int32 value) {
  devindex_.Add(value);
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorStateReq.DevIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MonitorStateReq::devindex() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorStateReq.DevIndex)
  return devindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MonitorStateReq::mutable_devindex() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorStateReq.DevIndex)
  return &devindex_;
}

// string DevType = 2;
inline void MonitorStateReq::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateReq::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateReq.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorStateReq::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateReq.DevType)
}
#if LANG_CXX11
inline void MonitorStateReq::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateReq.DevType)
}
#endif
inline void MonitorStateReq::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateReq.DevType)
}
inline void MonitorStateReq::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateReq.DevType)
}
inline ::std::string* MonitorStateReq::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateReq.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateReq::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateReq.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateReq::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateReq.DevType)
}

// string Reserved1 = 101;
inline void MonitorStateReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorStateReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorStateReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateReq.Reserved1)
}
#endif
inline void MonitorStateReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateReq.Reserved1)
}
inline void MonitorStateReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateReq.Reserved1)
}
inline ::std::string* MonitorStateReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorStateReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorStateReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorStateReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateReq.Reserved2)
}
#endif
inline void MonitorStateReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateReq.Reserved2)
}
inline void MonitorStateReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateReq.Reserved2)
}
inline ::std::string* MonitorStateReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateReq.Reserved2)
}

// -------------------------------------------------------------------

// MonitorTelemetryNotifyReq

// .monitor.protobuf.SendReason Reason = 1;
inline void MonitorTelemetryNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason MonitorTelemetryNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryNotifyReq.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void MonitorTelemetryNotifyReq::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryNotifyReq.Reason)
}

// .monitor.protobuf.DateTime SendTime = 2;
inline bool MonitorTelemetryNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void MonitorTelemetryNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& MonitorTelemetryNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* MonitorTelemetryNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* MonitorTelemetryNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void MonitorTelemetryNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryNotifyReq.SendTime)
}

// repeated .monitor.protobuf.MonitorTelemetryType DataList = 3;
inline int MonitorTelemetryNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void MonitorTelemetryNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::MonitorTelemetryType& MonitorTelemetryNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::MonitorTelemetryType* MonitorTelemetryNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::MonitorTelemetryType* MonitorTelemetryNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorTelemetryNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorTelemetryType >*
MonitorTelemetryNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorTelemetryNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorTelemetryType >&
MonitorTelemetryNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorTelemetryNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void MonitorTelemetryNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorTelemetryNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorTelemetryNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
}
#endif
inline void MonitorTelemetryNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
}
inline void MonitorTelemetryNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
}
inline ::std::string* MonitorTelemetryNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorTelemetryNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorTelemetryNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorTelemetryNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
}
#endif
inline void MonitorTelemetryNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
}
inline void MonitorTelemetryNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
}
inline ::std::string* MonitorTelemetryNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// MonitorTelemetryType

// int32 DevIndex = 1;
inline void MonitorTelemetryType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 MonitorTelemetryType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.DevIndex)
  return devindex_;
}
inline void MonitorTelemetryType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.DevIndex)
}

// string DevType = 2;
inline void MonitorTelemetryType::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryType::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorTelemetryType::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.DevType)
}
#if LANG_CXX11
inline void MonitorTelemetryType::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryType.DevType)
}
#endif
inline void MonitorTelemetryType::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryType.DevType)
}
inline void MonitorTelemetryType::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryType.DevType)
}
inline ::std::string* MonitorTelemetryType::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryType.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryType::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryType.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryType::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryType.DevType)
}

// int32 DotNo = 3;
inline void MonitorTelemetryType::clear_dotno() {
  dotno_ = 0;
}
inline ::google::protobuf::int32 MonitorTelemetryType::dotno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.DotNo)
  return dotno_;
}
inline void MonitorTelemetryType::set_dotno(::google::protobuf::int32 value) {
  
  dotno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.DotNo)
}

// string DevName = 4;
inline void MonitorTelemetryType::clear_devname() {
  devname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryType::devname() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.DevName)
  return devname_.GetNoArena();
}
inline void MonitorTelemetryType::set_devname(const ::std::string& value) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.DevName)
}
#if LANG_CXX11
inline void MonitorTelemetryType::set_devname(::std::string&& value) {
  
  devname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryType.DevName)
}
#endif
inline void MonitorTelemetryType::set_devname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryType.DevName)
}
inline void MonitorTelemetryType::set_devname(const char* value, size_t size) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryType.DevName)
}
inline ::std::string* MonitorTelemetryType::mutable_devname() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryType.DevName)
  return devname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryType::release_devname() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryType.DevName)
  
  return devname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryType::set_allocated_devname(::std::string* devname) {
  if (devname != NULL) {
    
  } else {
    
  }
  devname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devname);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryType.DevName)
}

// string MeasureName = 5;
inline void MonitorTelemetryType::clear_measurename() {
  measurename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryType::measurename() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.MeasureName)
  return measurename_.GetNoArena();
}
inline void MonitorTelemetryType::set_measurename(const ::std::string& value) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.MeasureName)
}
#if LANG_CXX11
inline void MonitorTelemetryType::set_measurename(::std::string&& value) {
  
  measurename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryType.MeasureName)
}
#endif
inline void MonitorTelemetryType::set_measurename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryType.MeasureName)
}
inline void MonitorTelemetryType::set_measurename(const char* value, size_t size) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryType.MeasureName)
}
inline ::std::string* MonitorTelemetryType::mutable_measurename() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryType.MeasureName)
  return measurename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryType::release_measurename() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryType.MeasureName)
  
  return measurename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryType::set_allocated_measurename(::std::string* measurename) {
  if (measurename != NULL) {
    
  } else {
    
  }
  measurename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measurename);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryType.MeasureName)
}

// double Value = 6;
inline void MonitorTelemetryType::clear_value() {
  value_ = 0;
}
inline double MonitorTelemetryType::value() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.Value)
  return value_;
}
inline void MonitorTelemetryType::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.Value)
}

// int32 Status = 7;
inline void MonitorTelemetryType::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 MonitorTelemetryType::status() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.Status)
  return status_;
}
inline void MonitorTelemetryType::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.Status)
}

// string Reserved1 = 101;
inline void MonitorTelemetryType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorTelemetryType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.Reserved1)
}
#if LANG_CXX11
inline void MonitorTelemetryType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryType.Reserved1)
}
#endif
inline void MonitorTelemetryType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryType.Reserved1)
}
inline void MonitorTelemetryType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryType.Reserved1)
}
inline ::std::string* MonitorTelemetryType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryType.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorTelemetryType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorTelemetryType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorTelemetryType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorTelemetryType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorTelemetryType.Reserved2)
}
#if LANG_CXX11
inline void MonitorTelemetryType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorTelemetryType.Reserved2)
}
#endif
inline void MonitorTelemetryType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorTelemetryType.Reserved2)
}
inline void MonitorTelemetryType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorTelemetryType.Reserved2)
}
inline ::std::string* MonitorTelemetryType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorTelemetryType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorTelemetryType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorTelemetryType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorTelemetryType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorTelemetryType.Reserved2)
}

// -------------------------------------------------------------------

// MonitorSignalNotifyReq

// .monitor.protobuf.SendReason Reason = 1;
inline void MonitorSignalNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason MonitorSignalNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalNotifyReq.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void MonitorSignalNotifyReq::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalNotifyReq.Reason)
}

// .monitor.protobuf.DateTime SendTime = 2;
inline bool MonitorSignalNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void MonitorSignalNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& MonitorSignalNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* MonitorSignalNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* MonitorSignalNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void MonitorSignalNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalNotifyReq.SendTime)
}

// repeated .monitor.protobuf.MonitorSignalType DataList = 3;
inline int MonitorSignalNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void MonitorSignalNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::MonitorSignalType& MonitorSignalNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::MonitorSignalType* MonitorSignalNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::MonitorSignalType* MonitorSignalNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorSignalNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorSignalType >*
MonitorSignalNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorSignalNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorSignalType >&
MonitorSignalNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorSignalNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void MonitorSignalNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorSignalNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorSignalNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
}
#endif
inline void MonitorSignalNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
}
inline void MonitorSignalNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
}
inline ::std::string* MonitorSignalNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorSignalNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorSignalNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorSignalNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
}
#endif
inline void MonitorSignalNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
}
inline void MonitorSignalNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
}
inline ::std::string* MonitorSignalNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// MonitorSignalType

// int32 DevIndex = 1;
inline void MonitorSignalType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 MonitorSignalType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.DevIndex)
  return devindex_;
}
inline void MonitorSignalType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.DevIndex)
}

// string DevType = 2;
inline void MonitorSignalType::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalType::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorSignalType::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.DevType)
}
#if LANG_CXX11
inline void MonitorSignalType::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalType.DevType)
}
#endif
inline void MonitorSignalType::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalType.DevType)
}
inline void MonitorSignalType::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalType.DevType)
}
inline ::std::string* MonitorSignalType::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalType.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalType::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalType.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalType::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalType.DevType)
}

// int32 DotNo = 3;
inline void MonitorSignalType::clear_dotno() {
  dotno_ = 0;
}
inline ::google::protobuf::int32 MonitorSignalType::dotno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.DotNo)
  return dotno_;
}
inline void MonitorSignalType::set_dotno(::google::protobuf::int32 value) {
  
  dotno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.DotNo)
}

// string DevName = 4;
inline void MonitorSignalType::clear_devname() {
  devname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalType::devname() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.DevName)
  return devname_.GetNoArena();
}
inline void MonitorSignalType::set_devname(const ::std::string& value) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.DevName)
}
#if LANG_CXX11
inline void MonitorSignalType::set_devname(::std::string&& value) {
  
  devname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalType.DevName)
}
#endif
inline void MonitorSignalType::set_devname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalType.DevName)
}
inline void MonitorSignalType::set_devname(const char* value, size_t size) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalType.DevName)
}
inline ::std::string* MonitorSignalType::mutable_devname() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalType.DevName)
  return devname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalType::release_devname() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalType.DevName)
  
  return devname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalType::set_allocated_devname(::std::string* devname) {
  if (devname != NULL) {
    
  } else {
    
  }
  devname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devname);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalType.DevName)
}

// string MeasureName = 5;
inline void MonitorSignalType::clear_measurename() {
  measurename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalType::measurename() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.MeasureName)
  return measurename_.GetNoArena();
}
inline void MonitorSignalType::set_measurename(const ::std::string& value) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.MeasureName)
}
#if LANG_CXX11
inline void MonitorSignalType::set_measurename(::std::string&& value) {
  
  measurename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalType.MeasureName)
}
#endif
inline void MonitorSignalType::set_measurename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalType.MeasureName)
}
inline void MonitorSignalType::set_measurename(const char* value, size_t size) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalType.MeasureName)
}
inline ::std::string* MonitorSignalType::mutable_measurename() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalType.MeasureName)
  return measurename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalType::release_measurename() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalType.MeasureName)
  
  return measurename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalType::set_allocated_measurename(::std::string* measurename) {
  if (measurename != NULL) {
    
  } else {
    
  }
  measurename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measurename);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalType.MeasureName)
}

// .monitor.protobuf.SignalType Value = 6;
inline void MonitorSignalType::clear_value() {
  value_ = 0;
}
inline ::monitor::protobuf::SignalType MonitorSignalType::value() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.Value)
  return static_cast< ::monitor::protobuf::SignalType >(value_);
}
inline void MonitorSignalType::set_value(::monitor::protobuf::SignalType value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.Value)
}

// int32 Status = 7;
inline void MonitorSignalType::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 MonitorSignalType::status() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.Status)
  return status_;
}
inline void MonitorSignalType::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.Status)
}

// string Reserved1 = 101;
inline void MonitorSignalType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorSignalType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.Reserved1)
}
#if LANG_CXX11
inline void MonitorSignalType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalType.Reserved1)
}
#endif
inline void MonitorSignalType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalType.Reserved1)
}
inline void MonitorSignalType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalType.Reserved1)
}
inline ::std::string* MonitorSignalType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalType.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorSignalType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorSignalType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorSignalType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorSignalType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorSignalType.Reserved2)
}
#if LANG_CXX11
inline void MonitorSignalType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorSignalType.Reserved2)
}
#endif
inline void MonitorSignalType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorSignalType.Reserved2)
}
inline void MonitorSignalType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorSignalType.Reserved2)
}
inline ::std::string* MonitorSignalType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorSignalType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorSignalType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorSignalType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorSignalType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorSignalType.Reserved2)
}

// -------------------------------------------------------------------

// MonitorStateNotifyReq

// .monitor.protobuf.SendReason Reason = 1;
inline void MonitorStateNotifyReq::clear_reason() {
  reason_ = 0;
}
inline ::monitor::protobuf::SendReason MonitorStateNotifyReq::reason() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateNotifyReq.Reason)
  return static_cast< ::monitor::protobuf::SendReason >(reason_);
}
inline void MonitorStateNotifyReq::set_reason(::monitor::protobuf::SendReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateNotifyReq.Reason)
}

// .monitor.protobuf.DateTime SendTime = 2;
inline bool MonitorStateNotifyReq::has_sendtime() const {
  return this != internal_default_instance() && sendtime_ != NULL;
}
inline void MonitorStateNotifyReq::clear_sendtime() {
  if (GetArenaNoVirtual() == NULL && sendtime_ != NULL) delete sendtime_;
  sendtime_ = NULL;
}
inline const ::monitor::protobuf::DateTime& MonitorStateNotifyReq::sendtime() const {
  const ::monitor::protobuf::DateTime* p = sendtime_;
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateNotifyReq.SendTime)
  return p != NULL ? *p : *reinterpret_cast<const ::monitor::protobuf::DateTime*>(
      &::monitor::protobuf::_DateTime_default_instance_);
}
inline ::monitor::protobuf::DateTime* MonitorStateNotifyReq::mutable_sendtime() {
  
  if (sendtime_ == NULL) {
    sendtime_ = new ::monitor::protobuf::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateNotifyReq.SendTime)
  return sendtime_;
}
inline ::monitor::protobuf::DateTime* MonitorStateNotifyReq::release_sendtime() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateNotifyReq.SendTime)
  
  ::monitor::protobuf::DateTime* temp = sendtime_;
  sendtime_ = NULL;
  return temp;
}
inline void MonitorStateNotifyReq::set_allocated_sendtime(::monitor::protobuf::DateTime* sendtime) {
  delete sendtime_;
  sendtime_ = sendtime;
  if (sendtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateNotifyReq.SendTime)
}

// repeated .monitor.protobuf.MonitorStateType DataList = 3;
inline int MonitorStateNotifyReq::datalist_size() const {
  return datalist_.size();
}
inline void MonitorStateNotifyReq::clear_datalist() {
  datalist_.Clear();
}
inline const ::monitor::protobuf::MonitorStateType& MonitorStateNotifyReq::datalist(int index) const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateNotifyReq.DataList)
  return datalist_.Get(index);
}
inline ::monitor::protobuf::MonitorStateType* MonitorStateNotifyReq::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateNotifyReq.DataList)
  return datalist_.Mutable(index);
}
inline ::monitor::protobuf::MonitorStateType* MonitorStateNotifyReq::add_datalist() {
  // @@protoc_insertion_point(field_add:monitor.protobuf.MonitorStateNotifyReq.DataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorStateType >*
MonitorStateNotifyReq::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:monitor.protobuf.MonitorStateNotifyReq.DataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::monitor::protobuf::MonitorStateType >&
MonitorStateNotifyReq::datalist() const {
  // @@protoc_insertion_point(field_list:monitor.protobuf.MonitorStateNotifyReq.DataList)
  return datalist_;
}

// string Reserved1 = 101;
inline void MonitorStateNotifyReq::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateNotifyReq::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorStateNotifyReq::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
}
#if LANG_CXX11
inline void MonitorStateNotifyReq::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
}
#endif
inline void MonitorStateNotifyReq::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
}
inline void MonitorStateNotifyReq::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
}
inline ::std::string* MonitorStateNotifyReq::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateNotifyReq::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateNotifyReq::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateNotifyReq.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorStateNotifyReq::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateNotifyReq::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorStateNotifyReq::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
}
#if LANG_CXX11
inline void MonitorStateNotifyReq::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
}
#endif
inline void MonitorStateNotifyReq::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
}
inline void MonitorStateNotifyReq::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
}
inline ::std::string* MonitorStateNotifyReq::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateNotifyReq::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateNotifyReq::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateNotifyReq.Reserved2)
}

// -------------------------------------------------------------------

// MonitorStateType

// int32 DevIndex = 1;
inline void MonitorStateType::clear_devindex() {
  devindex_ = 0;
}
inline ::google::protobuf::int32 MonitorStateType::devindex() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.DevIndex)
  return devindex_;
}
inline void MonitorStateType::set_devindex(::google::protobuf::int32 value) {
  
  devindex_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.DevIndex)
}

// string DevType = 2;
inline void MonitorStateType::clear_devtype() {
  devtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateType::devtype() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.DevType)
  return devtype_.GetNoArena();
}
inline void MonitorStateType::set_devtype(const ::std::string& value) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.DevType)
}
#if LANG_CXX11
inline void MonitorStateType::set_devtype(::std::string&& value) {
  
  devtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateType.DevType)
}
#endif
inline void MonitorStateType::set_devtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateType.DevType)
}
inline void MonitorStateType::set_devtype(const char* value, size_t size) {
  
  devtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateType.DevType)
}
inline ::std::string* MonitorStateType::mutable_devtype() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateType.DevType)
  return devtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateType::release_devtype() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateType.DevType)
  
  return devtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateType::set_allocated_devtype(::std::string* devtype) {
  if (devtype != NULL) {
    
  } else {
    
  }
  devtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devtype);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateType.DevType)
}

// int32 DotNo = 3;
inline void MonitorStateType::clear_dotno() {
  dotno_ = 0;
}
inline ::google::protobuf::int32 MonitorStateType::dotno() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.DotNo)
  return dotno_;
}
inline void MonitorStateType::set_dotno(::google::protobuf::int32 value) {
  
  dotno_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.DotNo)
}

// string DevName = 4;
inline void MonitorStateType::clear_devname() {
  devname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateType::devname() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.DevName)
  return devname_.GetNoArena();
}
inline void MonitorStateType::set_devname(const ::std::string& value) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.DevName)
}
#if LANG_CXX11
inline void MonitorStateType::set_devname(::std::string&& value) {
  
  devname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateType.DevName)
}
#endif
inline void MonitorStateType::set_devname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateType.DevName)
}
inline void MonitorStateType::set_devname(const char* value, size_t size) {
  
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateType.DevName)
}
inline ::std::string* MonitorStateType::mutable_devname() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateType.DevName)
  return devname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateType::release_devname() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateType.DevName)
  
  return devname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateType::set_allocated_devname(::std::string* devname) {
  if (devname != NULL) {
    
  } else {
    
  }
  devname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devname);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateType.DevName)
}

// string MeasureName = 5;
inline void MonitorStateType::clear_measurename() {
  measurename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateType::measurename() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.MeasureName)
  return measurename_.GetNoArena();
}
inline void MonitorStateType::set_measurename(const ::std::string& value) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.MeasureName)
}
#if LANG_CXX11
inline void MonitorStateType::set_measurename(::std::string&& value) {
  
  measurename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateType.MeasureName)
}
#endif
inline void MonitorStateType::set_measurename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateType.MeasureName)
}
inline void MonitorStateType::set_measurename(const char* value, size_t size) {
  
  measurename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateType.MeasureName)
}
inline ::std::string* MonitorStateType::mutable_measurename() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateType.MeasureName)
  return measurename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateType::release_measurename() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateType.MeasureName)
  
  return measurename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateType::set_allocated_measurename(::std::string* measurename) {
  if (measurename != NULL) {
    
  } else {
    
  }
  measurename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measurename);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateType.MeasureName)
}

// int32 Value = 6;
inline void MonitorStateType::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 MonitorStateType::value() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.Value)
  return value_;
}
inline void MonitorStateType::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.Value)
}

// int32 Status = 7;
inline void MonitorStateType::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 MonitorStateType::status() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.Status)
  return status_;
}
inline void MonitorStateType::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.Status)
}

// string Reserved1 = 101;
inline void MonitorStateType::clear_reserved1() {
  reserved1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateType::reserved1() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.Reserved1)
  return reserved1_.GetNoArena();
}
inline void MonitorStateType::set_reserved1(const ::std::string& value) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.Reserved1)
}
#if LANG_CXX11
inline void MonitorStateType::set_reserved1(::std::string&& value) {
  
  reserved1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateType.Reserved1)
}
#endif
inline void MonitorStateType::set_reserved1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateType.Reserved1)
}
inline void MonitorStateType::set_reserved1(const char* value, size_t size) {
  
  reserved1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateType.Reserved1)
}
inline ::std::string* MonitorStateType::mutable_reserved1() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateType.Reserved1)
  return reserved1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateType::release_reserved1() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateType.Reserved1)
  
  return reserved1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateType::set_allocated_reserved1(::std::string* reserved1) {
  if (reserved1 != NULL) {
    
  } else {
    
  }
  reserved1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved1);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateType.Reserved1)
}

// string Reserved2 = 102;
inline void MonitorStateType::clear_reserved2() {
  reserved2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MonitorStateType::reserved2() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.MonitorStateType.Reserved2)
  return reserved2_.GetNoArena();
}
inline void MonitorStateType::set_reserved2(const ::std::string& value) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.MonitorStateType.Reserved2)
}
#if LANG_CXX11
inline void MonitorStateType::set_reserved2(::std::string&& value) {
  
  reserved2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.MonitorStateType.Reserved2)
}
#endif
inline void MonitorStateType::set_reserved2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.MonitorStateType.Reserved2)
}
inline void MonitorStateType::set_reserved2(const char* value, size_t size) {
  
  reserved2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.MonitorStateType.Reserved2)
}
inline ::std::string* MonitorStateType::mutable_reserved2() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.MonitorStateType.Reserved2)
  return reserved2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorStateType::release_reserved2() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.MonitorStateType.Reserved2)
  
  return reserved2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorStateType::set_allocated_reserved2(::std::string* reserved2) {
  if (reserved2 != NULL) {
    
  } else {
    
  }
  reserved2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved2);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.MonitorStateType.Reserved2)
}

// -------------------------------------------------------------------

// TelecontrolReq

// bytes ss = 1;
inline void TelecontrolReq::clear_ss() {
  ss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TelecontrolReq::ss() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.TelecontrolReq.ss)
  return ss_.GetNoArena();
}
inline void TelecontrolReq::set_ss(const ::std::string& value) {
  
  ss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:monitor.protobuf.TelecontrolReq.ss)
}
#if LANG_CXX11
inline void TelecontrolReq::set_ss(::std::string&& value) {
  
  ss_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:monitor.protobuf.TelecontrolReq.ss)
}
#endif
inline void TelecontrolReq::set_ss(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:monitor.protobuf.TelecontrolReq.ss)
}
inline void TelecontrolReq::set_ss(const void* value, size_t size) {
  
  ss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:monitor.protobuf.TelecontrolReq.ss)
}
inline ::std::string* TelecontrolReq::mutable_ss() {
  
  // @@protoc_insertion_point(field_mutable:monitor.protobuf.TelecontrolReq.ss)
  return ss_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TelecontrolReq::release_ss() {
  // @@protoc_insertion_point(field_release:monitor.protobuf.TelecontrolReq.ss)
  
  return ss_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TelecontrolReq::set_allocated_ss(::std::string* ss) {
  if (ss != NULL) {
    
  } else {
    
  }
  ss_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ss);
  // @@protoc_insertion_point(field_set_allocated:monitor.protobuf.TelecontrolReq.ss)
}

// -------------------------------------------------------------------

// TelecontrolAns

// -------------------------------------------------------------------

// DateTime

// int64 Time = 1;
inline void DateTime::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DateTime::time() const {
  // @@protoc_insertion_point(field_get:monitor.protobuf.DateTime.Time)
  return time_;
}
inline void DateTime::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:monitor.protobuf.DateTime.Time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace monitor

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::monitor::protobuf::OfflineReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::OfflineReason>() {
  return ::monitor::protobuf::OfflineReason_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::RegistrationStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::RegistrationStatus>() {
  return ::monitor::protobuf::RegistrationStatus_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::CtrlHardwareType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::CtrlHardwareType>() {
  return ::monitor::protobuf::CtrlHardwareType_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::AlarmStateEnumType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::AlarmStateEnumType>() {
  return ::monitor::protobuf::AlarmStateEnumType_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::SendReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::SendReason>() {
  return ::monitor::protobuf::SendReason_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::DevDescType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::DevDescType>() {
  return ::monitor::protobuf::DevDescType_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::BoolEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::BoolEnum>() {
  return ::monitor::protobuf::BoolEnum_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::SignalType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::SignalType>() {
  return ::monitor::protobuf::SignalType_descriptor();
}
template <> struct is_proto_enum< ::monitor::protobuf::SlotEnumType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::monitor::protobuf::SlotEnumType>() {
  return ::monitor::protobuf::SlotEnumType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_monitorprotobuf_2eproto__INCLUDED
